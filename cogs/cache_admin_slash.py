"""
Slash-–∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import discord
import time
from discord.ext import commands
from discord import app_commands
from typing import Optional
from utils.user_cache import (
    get_cache_statistics, clear_user_cache, invalidate_user_cache,
    get_cached_user_info, preload_user_data, get_user_name_fast,
    get_user_department_fast, get_user_rank_fast, refresh_user_cache, 
    is_cache_initialized, initialize_user_cache
)


class CacheAdminSlashCommands(commands.Cog):
    """Slash-–∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—ç—à–µ–º"""
    
    def __init__(self, bot):
        self.bot = bot
    
    @app_commands.command(name='cache_clear', description='–ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
    @app_commands.default_permissions(administrator=True)
    async def clear_cache(self, interaction: discord.Interaction):
        """–ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        try:
            stats_before = get_cache_statistics()
            clear_user_cache()
            
            embed = discord.Embed(
                title="üßπ –ö—ç—à –æ—á–∏—â–µ–Ω",
                description=f"–£–¥–∞–ª–µ–Ω–æ {stats_before['cache_size']} –∑–∞–ø–∏—Å–µ–π –∏–∑ –∫—ç—à–∞",
                color=discord.Color.green()
            )
            
            await interaction.response.send_message(embed=embed, ephemeral=True)
            
        except Exception as e:
            embed = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description=f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à: {e}",
                color=discord.Color.red()
            )
            await interaction.response.send_message(embed=embed, ephemeral=True)
    
    @app_commands.command(name='cache_invalidate', description='–£–¥–∞–ª–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫—ç—à–∞')
    @app_commands.describe(user='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∫—ç—à–∞')
    @app_commands.default_permissions(administrator=True)
    async def invalidate_user(self, interaction: discord.Interaction, user: discord.Member):
        """–£–¥–∞–ª–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫—ç—à–∞"""
        try:
            invalidate_user_cache(user.id)
            
            embed = discord.Embed(
                title="üóëÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ –∫—ç—à–∞",
                description=f"–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.mention} —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∫—ç—à–∞",
                color=discord.Color.orange()
            )
            
            await interaction.response.send_message(embed=embed, ephemeral=True)
            
        except Exception as e:
            embed = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description=f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫—ç—à–∞: {e}",
                color=discord.Color.red()
            )
            await interaction.response.send_message(embed=embed, ephemeral=True)
    
    @app_commands.command(name='cache_test_user', description='–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –∫—ç—à')
    @app_commands.describe(user='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
    @app_commands.default_permissions(administrator=True)
    async def test_user_cache(self, interaction: discord.Interaction, user: discord.Member):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –∫—ç—à"""
        try:
            await interaction.response.defer()
            
            # –û—á–∏—â–∞–µ–º –∫—ç—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
            invalidate_user_cache(user.id)
            
            embed = discord.Embed(
                title="üß™ –¢–µ—Å—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                description=f"–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {user.mention}",
                color=discord.Color.blue()
            )
            
            # –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å MISS)
            start_time = time.time()
            user_data_1 = await get_cached_user_info(user.id)
            first_request_time = time.time() - start_time
            
            # –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å HIT)
            start_time = time.time()
            user_data_2 = await get_cached_user_info(user.id)
            second_request_time = time.time() - start_time
            
            if user_data_1:
                embed.add_field(
                    name="üë§ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
                    value=f"**–ò–º—è:** {user_data_1.get('full_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                          f"**–°—Ç–∞—Ç–∏–∫:** {user_data_1.get('static', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                          f"**–ó–≤–∞–Ω–∏–µ:** {user_data_1.get('rank', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                          f"**–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ:** {user_data_1.get('department', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                          f"**–î–æ–ª–∂–Ω–æ—Å—Ç—å:** {user_data_1.get('position', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
                    inline=False
                )
            else:
                embed.add_field(
                    name="‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç",
                    value="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö",
                    inline=False
                )
            
            speedup_text = f"{first_request_time/second_request_time:.1f}x" if second_request_time > 0 else "‚àûx"
            embed.add_field(
                name="‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
                value=f"**1-–π –∑–∞–ø—Ä–æ—Å (MISS):** {first_request_time:.3f}—Å\n"
                      f"**2-–π –∑–∞–ø—Ä–æ—Å (HIT):** {second_request_time:.3f}—Å\n"
                      f"**–£—Å–∫–æ—Ä–µ–Ω–∏–µ:** {speedup_text}",
                inline=False
            )
            
            # –¢–µ—Å—Ç –±—ã—Å—Ç—Ä—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
            name_fast = await get_user_name_fast(user.id)
            dept_fast = await get_user_department_fast(user.id)
            rank_fast = await get_user_rank_fast(user.id)
            
            embed.add_field(
                name="üöÄ –ë—ã—Å—Ç—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏",
                value=f"**get_user_name_fast:** {name_fast}\n"
                      f"**get_user_department_fast:** {dept_fast}\n"
                      f"**get_user_rank_fast:** {rank_fast}",
                inline=False
            )
            
            await interaction.followup.send(embed=embed, ephemeral=True)
            
        except Exception as e:
            if interaction.response.is_done():
                await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            else:
                await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}", ephemeral=True)

    @app_commands.command(name='global_cache_status', description='–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—ã–π —Å—Ç–∞—Ç—É—Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è')
    @app_commands.default_permissions(administrator=True)
    async def global_cache_status(self, interaction: discord.Interaction):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—ã–π —Å—Ç–∞—Ç—É—Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è"""
        try:
            stats = get_cache_statistics()
            
            embed = discord.Embed(
                title="üåê –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è",
                description="–°—Ç–∞—Ç—É—Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π –±–æ—Ç–∞",
                color=discord.Color.blue()
            )
            
            # –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            embed.add_field(
                name="üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                value=f"**–†–∞–∑–º–µ—Ä –∫—ç—à–∞:** {stats['cache_size']} –∑–∞–ø–∏—Å–µ–π\n"
                      f"**–í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤:** {stats['total_requests']}\n"
                      f"**–ü–æ–ø–∞–¥–∞–Ω–∏—è:** {stats['hits']}\n"
                      f"**–ü—Ä–æ–º–∞—Ö–∏:** {stats['misses']}\n"
                      f"**Hit Rate:** {stats['hit_rate_percent']:.1f}%",
                inline=True
            )
            
            # –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
            if stats['total_requests'] > 0:
                avg_hit_rate = stats['hit_rate_percent']
                if avg_hit_rate >= 70:
                    performance_status = "üü¢ –û—Ç–ª–∏—á–Ω–æ"
                elif avg_hit_rate >= 50:
                    performance_status = "üü° –•–æ—Ä–æ—à–æ"
                else:
                    performance_status = "üî¥ –¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è"
            else:
                performance_status = "‚ö™ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
            
            embed.add_field(
                name="‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
                value=f"**–°—Ç–∞—Ç—É—Å:** {performance_status}\n"
                      f"**–ò—Å—Ç–µ–∫—à–∏—Ö –∑–∞–ø–∏—Å–µ–π:** {stats['expired_entries']}\n"
                      f"**–ü—Ä–∏–º–µ—Ä–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏:** {stats['memory_usage_estimate']} –±–∞–π—Ç\n"
                      f"**–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—á–∏—Å—Ç–∫–∞:** {stats['last_cleanup'].strftime('%H:%M:%S')}",
                inline=True
            )
            
            # –ú–æ–¥—É–ª–∏, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–µ –∫—ç—à
            cache_modules = [
                "‚úÖ –°–∏—Å—Ç–µ–º–∞ —Å–∫–ª–∞–¥–∞ (warehouse)",
                "‚úÖ UserDatabase (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π)",
                "‚úÖ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è (migrated)",
                "‚úÖ –°–∏—Å—Ç–µ–º–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–π (migrated)",
                "‚úÖ –ó–∞—è–≤–∫–∏ –Ω–∞ –æ—Ç–ø—É—Å–∫ (migrated)"
            ]
            
            embed.add_field(
                name="üéØ –ú–æ–¥—É–ª–∏ —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º",
                value="\n".join(cache_modules),
                inline=False
            )
            
            # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            recommendations = []
            if stats['total_requests'] > 0:
                if avg_hit_rate < 50:
                    recommendations.append("üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
                if stats['expired_entries'] > stats['cache_size'] * 0.3:
                    recommendations.append("üßπ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞")
            if not recommendations:
                recommendations.append("‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ")
            
            embed.add_field(
                name="üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
                value="\n".join(recommendations),
                inline=False
            )
            
            await interaction.response.send_message(embed=embed, ephemeral=True)
            
        except Exception as e:
            await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {e}", ephemeral=True)

    @app_commands.command(name='warehouse_test_user', description='–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Å–∫–ª–∞–¥–∞')
    @app_commands.describe(user='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –≤—ã)')
    @app_commands.default_permissions(administrator=True)
    async def test_warehouse_user_data(self, interaction: discord.Interaction, user: Optional[discord.Member] = None):
        """–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Å–∫–ª–∞–¥–∞"""
        target_user = user if user else interaction.user
        
        try:
            await interaction.response.defer()
            
            from utils.user_cache import get_warehouse_user_data, prepare_modal_data
            
            # –¢–µ—Å—Ç 1: –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            start_time = time.time()
            user_data = await get_warehouse_user_data(target_user.id)
            full_data_time = time.time() - start_time
            
            # –¢–µ—Å—Ç 2: –î–∞–Ω–Ω—ã–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            start_time = time.time()
            modal_data = await prepare_modal_data(target_user.id)
            modal_data_time = time.time() - start_time
            
            embed = discord.Embed(
                title="üß™ –¢–µ—Å—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                description=f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è {target_user.mention}",
                color=discord.Color.blue()
            )
            
            # –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            embed.add_field(
                name="üìã –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                value=f"**–ò–º—è:** {user_data['full_name'] or '–ù–µ –Ω–∞–π–¥–µ–Ω–æ'}\n"
                      f"**–°—Ç–∞—Ç–∏–∫:** {user_data['static'] or '–ù–µ –Ω–∞–π–¥–µ–Ω'}\n"
                      f"**–î–æ–ª–∂–Ω–æ—Å—Ç—å:** {user_data['position']}\n"
                      f"**–ó–≤–∞–Ω–∏–µ:** {user_data['rank']}\n"
                      f"**–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ:** {user_data['department']}\n"
                      f"**–ò—Å—Ç–æ—á–Ω–∏–∫:** {user_data['source']}\n"
                      f"**–í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏:** {full_data_time:.3f}—Å",
                inline=False
            )
            
            # –î–∞–Ω–Ω—ã–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            embed.add_field(
                name="üî§ –î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è",
                value=f"**–ò–º—è (–∑–Ω–∞—á–µ–Ω–∏–µ):** {modal_data['name_value'] or '–ü—É—Å—Ç–æ'}\n"
                      f"**–°—Ç–∞—Ç–∏–∫ (–∑–Ω–∞—á–µ–Ω–∏–µ):** {modal_data['static_value'] or '–ü—É—Å—Ç–æ'}\n"
                      f"**–ò–º–µ–µ—Ç –¥–∞–Ω–Ω—ã–µ:** {'–î–∞' if modal_data['has_data'] else '–ù–µ—Ç'}\n"
                      f"**–ò—Å—Ç–æ—á–Ω–∏–∫:** {modal_data['source']}\n"
                      f"**–í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏:** {modal_data_time:.3f}—Å",
                inline=False
            )
            
            # –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            status_emoji = "üü¢" if full_data_time < 1.0 else "üü°" if full_data_time < 3.0 else "üî¥"
            embed.add_field(
                name=f"{status_emoji} –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
                value=f"**–°—Ç–∞—Ç—É—Å:** {'–û—Ç–ª–∏—á–Ω–æ' if full_data_time < 1.0 else '–ü—Ä–∏–µ–º–ª–µ–º–æ' if full_data_time < 3.0 else '–ú–µ–¥–ª–µ–Ω–Ω–æ'}\n"
                      f"**–†–∏—Å–∫ —Ç–∞–π–º–∞—É—Ç–∞ Discord:** {'–ù–∏–∑–∫–∏–π' if full_data_time < 2.0 else '–°—Ä–µ–¥–Ω–∏–π' if full_data_time < 3.0 else '–í—ã—Å–æ–∫–∏–π'}",
                inline=False
            )
            
            await interaction.followup.send(embed=embed)
            
        except Exception as e:
            if interaction.response.is_done():
                await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
            else:
                await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}", ephemeral=True)
    
    @app_commands.command(name='reload_config', description='–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –±–æ—Ç–∞ –±–µ–∑ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞')
    @app_commands.default_permissions(administrator=True)
    async def reload_config(self, interaction: discord.Interaction):
        """–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –±–æ—Ç–∞"""
        try:
            await interaction.response.defer()
            
            # –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π
            from utils.config_manager import load_config
            from utils.ping_manager import ping_manager
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ä—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            old_departments = ping_manager.get_departments_config()
            
            # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ ping_manager
            ping_manager.config = load_config()
            
            # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            new_departments = ping_manager.get_departments_config()
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            changes = []
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
            for dept_code, dept_config in new_departments.items():
                if dept_code not in old_departments:
                    changes.append(f"‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ: **{dept_code}** ({dept_config.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')})")
                else:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–æ–ª—è—Ö –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π
                    old_positions = set(old_departments[dept_code].get('position_role_ids', []))
                    new_positions = set(dept_config.get('position_role_ids', []))
                    
                    old_assignable = set(old_departments[dept_code].get('assignable_position_role_ids', []))
                    new_assignable = set(dept_config.get('assignable_position_role_ids', []))
                    
                    if old_positions != new_positions:
                        added_pos = new_positions - old_positions
                        removed_pos = old_positions - new_positions
                        if added_pos:
                            changes.append(f"üîß {dept_code}: –¥–æ–±–∞–≤–ª–µ–Ω—ã —Ä–æ–ª–∏ –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π: {list(added_pos)}")
                        if removed_pos:
                            changes.append(f"üîß {dept_code}: —É–¥–∞–ª–µ–Ω—ã —Ä–æ–ª–∏ –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π: {list(removed_pos)}")
                    
                    if old_assignable != new_assignable:
                        added_assign = new_assignable - old_assignable
                        removed_assign = old_assignable - new_assignable
                        if added_assign:
                            changes.append(f"‚úÖ {dept_code}: –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤—ã–¥–∞–≤–∞–µ–º—ã–µ —Ä–æ–ª–∏: {list(added_assign)}")
                        if removed_assign:
                            changes.append(f"‚ùå {dept_code}: —É–¥–∞–ª–µ–Ω—ã –≤—ã–¥–∞–≤–∞–µ–º—ã–µ —Ä–æ–ª–∏: {list(removed_assign)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è  
            for dept_code in old_departments:
                if dept_code not in new_departments:
                    changes.append(f"‚ûñ –£–¥–∞–ª–µ–Ω–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ: **{dept_code}**")
            
            # –°–æ–∑–¥–∞–µ–º embed —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
            embed = discord.Embed(
                title="üîÑ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞",
                color=discord.Color.green(),
                timestamp=discord.utils.utcnow()
            )
            
            embed.add_field(
                name="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                value=f"**–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π:** {len(new_departments)}\n"
                      f"**–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π:** {len(changes)}",
                inline=True
            )
            
            if changes:
                # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                display_changes = changes[:10]
                if len(changes) > 10:
                    display_changes.append(f"... –∏ –µ—â–µ {len(changes) - 10} –∏–∑–º–µ–Ω–µ–Ω–∏–π")
                
                embed.add_field(
                    name="üìù –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è",
                    value="\n".join(display_changes),
                    inline=False
                )
            else:
                embed.add_field(
                    name="‚úÖ –°—Ç–∞—Ç—É—Å",
                    value="–ò–∑–º–µ–Ω–µ–Ω–∏–π –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ",
                    inline=False
                )
            
            embed.add_field(
                name="üí° –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
                value="–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞.\n"
                      "–ù–æ–≤—ã–µ —Ä–æ–ª–∏ –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã –±–µ–∑ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.",
                inline=False
            )
            
            embed.set_footer(text="–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –º–≥–Ω–æ–≤–µ–Ω–Ω–æ")
            
            await interaction.followup.send(embed=embed)
            
        except Exception as e:
            error_embed = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏",
                description=f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: {e}",
                color=discord.Color.red()
            )
            await interaction.followup.send(embed=error_embed)

    @app_commands.command(name='cache_refresh', description='–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
    @app_commands.default_permissions(administrator=True)
    async def cache_refresh(self, interaction: discord.Interaction):
        """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        try:
            await interaction.response.defer(ephemeral=True)
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            old_stats = get_cache_statistics()
            
            print(f"üîÑ MANUAL CACHE REFRESH: –ó–∞–ø—Ä–æ—Å –æ—Ç {interaction.user}")
            success = await refresh_user_cache()
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            new_stats = get_cache_statistics()
            
            if success:
                await interaction.followup.send(
                    f"‚úÖ **–ö—ç—à —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω**\n\n"
                    f"üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**\n"
                    f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫—ç—à–µ: {new_stats['cache_size']}\n"
                    f"‚Ä¢ Hit rate: {new_stats['hit_rate_percent']}%\n"
                    f"‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {new_stats['total_requests']}\n"
                    f"‚Ä¢ –ü–æ–ø–∞–¥–∞–Ω–∏–π: {new_stats['hits']}\n"
                    f"‚Ä¢ –ü—Ä–æ–º–∞—Ö–æ–≤: {new_stats['misses']}\n\n"
                    f"üì¶ **–ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞:**\n"
                    f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–æ: {new_stats['bulk_preload_count']}\n"
                    f"‚Ä¢ –í—Ä–µ–º—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏: {new_stats['bulk_preload_time']}\n\n"
                    f"üíæ **–ü–∞–º—è—Ç—å:**\n"
                    f"‚Ä¢ –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: {new_stats['memory_usage_estimate']} –±–∞–π—Ç",
                    ephemeral=True
                )
            else:
                await interaction.followup.send(
                    "‚ùå **–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫—ç—à–∞**\n\n"
                    "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –±–æ—Ç–∞ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.",
                    ephemeral=True
                )
        
        except Exception as e:
            print(f"‚ùå Error in cache refresh command: {e}")
            try:
                await interaction.followup.send(
                    f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}",
                    ephemeral=True
                )
            except:
                pass

    @app_commands.command(name='cache_stats', description='–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫—ç—à–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
    @app_commands.default_permissions(administrator=True)
    async def cache_stats(self, interaction: discord.Interaction):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫—ç—à–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        try:
            stats = get_cache_statistics()
            is_initialized = is_cache_initialized()
            
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã
            if stats.get('bulk_preload_time'):
                import datetime
                preload_time = stats['bulk_preload_time']
                if isinstance(preload_time, str):
                    try:
                        preload_time = datetime.datetime.fromisoformat(preload_time)
                    except:
                        preload_time = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
                
                if isinstance(preload_time, datetime.datetime):
                    age = datetime.datetime.now() - preload_time
                    age_text = f"{age.total_seconds():.0f} —Å–µ–∫—É–Ω–¥ –Ω–∞–∑–∞–¥"
                else:
                    age_text = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            else:
                age_text = "–ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
            
            status_emoji = "‚úÖ" if is_initialized else "‚ö†Ô∏è"
            status_text = "–ê–∫—Ç–∏–≤–µ–Ω" if is_initialized else "–¢—Ä–µ–±—É–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏"
            
            await interaction.response.send_message(
                f"{status_emoji} **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—ç—à–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π**\n\n"
                f"üîÑ **–°—Ç–∞—Ç—É—Å:** {status_text}\n"
                f"üìä **–†–∞–∑–º–µ—Ä –∫—ç—à–∞:** {stats['cache_size']} –∑–∞–ø–∏—Å–µ–π\n"
                f"üìà **Hit rate:** {stats['hit_rate_percent']}%\n"
                f"üìã **–í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤:** {stats['total_requests']}\n"
                f"‚úÖ **–ü–æ–ø–∞–¥–∞–Ω–∏–π:** {stats['hits']}\n"
                f"‚ùå **–ü—Ä–æ–º–∞—Ö–æ–≤:** {stats['misses']}\n\n"
                f"üì¶ **–ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞:**\n"
                f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats.get('bulk_preload_count', 0)}\n"
                f"‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è: {age_text}\n\n"
                f"üíæ **–ü–∞–º—è—Ç—å:** ~{stats['memory_usage_estimate']} –±–∞–π—Ç\n"
                f"üßπ **–ò—Å—Ç–µ–∫—à–∏—Ö –∑–∞–ø–∏—Å–µ–π:** {stats['expired_entries']}",
                ephemeral=True
            )
        
        except Exception as e:
            print(f"‚ùå Error in cache stats command: {e}")
            await interaction.response.send_message(
                f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {str(e)}",
                ephemeral=True
            )

    @app_commands.command(name='cache_bulk_init', description='–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫—ç—à–∞ —Å –º–∞—Å—Å–æ–≤–æ–π –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–æ–π')
    @app_commands.default_permissions(administrator=True)
    async def cache_bulk_init(self, interaction: discord.Interaction):
        """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫—ç—à–∞ —Å –º–∞—Å—Å–æ–≤–æ–π –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–æ–π"""
        try:
            await interaction.response.defer(ephemeral=True)
            
            print(f"üöÄ MANUAL BULK INIT: –ó–∞–ø—Ä–æ—Å –æ—Ç {interaction.user}")
            
            import time
            start_time = time.time()
            
            success = await initialize_user_cache(force_refresh=True)
            
            load_time = time.time() - start_time
            stats = get_cache_statistics()
            
            if success:
                await interaction.followup.send(
                    f"‚úÖ **–ú–∞—Å—Å–æ–≤–∞—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞**\n\n"
                    f"‚è±Ô∏è **–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:** {load_time:.2f} —Å–µ–∫—É–Ω–¥\n"
                    f"üì¶ **–†–µ–∑—É–ª—å—Ç–∞—Ç:**\n"
                    f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {stats.get('bulk_preload_count', 0)}\n"
                    f"‚Ä¢ –†–∞–∑–º–µ—Ä –∫—ç—à–∞: {stats['cache_size']} –∑–∞–ø–∏—Å–µ–π\n"
                    f"‚Ä¢ –°—Ç–∞—Ç—É—Å: {'–ê–∫—Ç–∏–≤–µ–Ω' if is_cache_initialized() else '–û—à–∏–±–∫–∞'}\n\n"
                    f"üöÄ **–≠—Ñ—Ñ–µ–∫—Ç:**\n"
                    f"‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º\n"
                    f"‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ—à–∏–±–æ–∫ PostgreSQL\n"
                    f"‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è —Ä–∞–±–æ—Ç–∞ –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º",
                    ephemeral=True
                )
            else:
                await interaction.followup.send(
                    f"‚ùå **–û—à–∏–±–∫–∞ –º–∞—Å—Å–æ–≤–æ–π –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏**\n\n"
                    f"‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {load_time:.2f} —Å–µ–∫—É–Ω–¥\n"
                    f"üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –±–æ—Ç–∞ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π\n"
                    f"üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
                    f"‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º\n"
                    f"‚Ä¢ –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤\n"
                    f"‚Ä¢ –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ª–∏—Å—Ç–∞ '–õ–∏—á–Ω—ã–π –°–æ—Å—Ç–∞–≤'",
                    ephemeral=True
                )
        
        except Exception as e:
            print(f"‚ùå Error in bulk init command: {e}")
            try:
                await interaction.followup.send(
                    f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}",
                    ephemeral=True
                )
            except:
                pass

async def setup(bot):
    """–ó–∞–≥—Ä—É–∑–∫–∞ Cog"""
    await bot.add_cog(CacheAdminSlashCommands(bot))
