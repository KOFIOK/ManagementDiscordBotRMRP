"""
Slash-–∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import discord
import time
from discord.ext import commands
from discord import app_commands
from typing import Optional
from utils.user_cache import (
    get_cache_statistics, clear_user_cache, invalidate_user_cache,
    get_cached_user_info, preload_user_data, get_user_name_fast,
    get_user_department_fast, get_user_rank_fast
)


class CacheAdminSlashCommands(commands.Cog):
    """Slash-–∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—ç—à–µ–º"""
    
    def __init__(self, bot):
        self.bot = bot
    
    @app_commands.command(name='cache_stats', description='–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫—ç—à–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
    @app_commands.default_permissions(administrator=True)
    async def cache_statistics(self, interaction: discord.Interaction):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫—ç—à–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        try:
            stats = get_cache_statistics()
            
            embed = discord.Embed(
                title="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—ç—à–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                color=discord.Color.blue(),
                timestamp=discord.utils.utcnow()
            )
            
            # –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            embed.add_field(
                name="üìà –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
                value=f"**Hit Rate:** {stats['hit_rate_percent']}%\n"
                      f"**–í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤:** {stats['total_requests']}\n"
                      f"**Cache Hits:** {stats['hits']}\n"
                      f"**Cache Misses:** {stats['misses']}",
                inline=True
            )
            
            # –†–∞–∑–º–µ—Ä –∫—ç—à–∞
            embed.add_field(
                name="üíæ –†–∞–∑–º–µ—Ä –∫—ç—à–∞",
                value=f"**–ó–∞–ø–∏—Å–µ–π –≤ –∫—ç—à–µ:** {stats['cache_size']}\n"
                      f"**–ò—Å—Ç–µ–∫—à–∏—Ö –∑–∞–ø–∏—Å–µ–π:** {stats['expired_entries']}\n"
                      f"**–ü–∞–º—è—Ç—å (–ø—Ä–∏–º–µ—Ä–Ω–æ):** {stats['memory_usage_estimate']} –±–∞–π—Ç",
                inline=True
            )
            
            # –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—á–∏—Å—Ç–∫–∏
            last_cleanup = stats['last_cleanup'].strftime('%H:%M:%S %d.%m.%Y')
            embed.add_field(
                name="üßπ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ",
                value=f"**–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—á–∏—Å—Ç–∫–∞:** {last_cleanup}",
                inline=False
            )
            
            # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            recommendations = []
            if stats['hit_rate_percent'] < 70:
                recommendations.append("üî∏ –ù–∏–∑–∫–∏–π Hit Rate - —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ TTL –∫—ç—à–∞")
            if stats['expired_entries'] > stats['cache_size'] * 0.3:
                recommendations.append("üî∏ –ú–Ω–æ–≥–æ –∏—Å—Ç–µ–∫—à–∏—Ö –∑–∞–ø–∏—Å–µ–π - –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –æ—á–∏—Å—Ç–∫—É")
            if stats['cache_size'] > 500:
                recommendations.append("üî∏ –ë–æ–ª—å—à–æ–π —Ä–∞–∑–º–µ—Ä –∫—ç—à–∞ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–º—è—Ç—å —Å–µ—Ä–≤–µ—Ä–∞")
            
            if recommendations:
                embed.add_field(
                    name="üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
                    value="\n".join(recommendations),
                    inline=False
                )
            
            embed.set_footer(text="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cache_clear –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞")
            
            await interaction.response.send_message(embed=embed)
            
        except Exception as e:
            embed = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description=f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫—ç—à–∞: {e}",
                color=discord.Color.red()
            )
            await interaction.response.send_message(embed=embed)
    
    @app_commands.command(name='cache_clear', description='–ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
    @app_commands.default_permissions(administrator=True)
    async def clear_cache(self, interaction: discord.Interaction):
        """–ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        try:
            stats_before = get_cache_statistics()
            clear_user_cache()
            
            embed = discord.Embed(
                title="üßπ –ö—ç—à –æ—á–∏—â–µ–Ω",
                description=f"–£–¥–∞–ª–µ–Ω–æ {stats_before['cache_size']} –∑–∞–ø–∏—Å–µ–π –∏–∑ –∫—ç—à–∞",
                color=discord.Color.green()
            )
            
            await interaction.response.send_message(embed=embed)
            
        except Exception as e:
            embed = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description=f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à: {e}",
                color=discord.Color.red()
            )
            await interaction.response.send_message(embed=embed)
    
    @app_commands.command(name='cache_invalidate', description='–£–¥–∞–ª–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫—ç—à–∞')
    @app_commands.describe(user='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∫—ç—à–∞')
    @app_commands.default_permissions(administrator=True)
    async def invalidate_user(self, interaction: discord.Interaction, user: discord.Member):
        """–£–¥–∞–ª–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫—ç—à–∞"""
        try:
            invalidate_user_cache(user.id)
            
            embed = discord.Embed(
                title="üóëÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ –∫—ç—à–∞",
                description=f"–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.mention} —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∫—ç—à–∞",
                color=discord.Color.orange()
            )
            
            await interaction.response.send_message(embed=embed)
            
        except Exception as e:
            embed = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description=f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫—ç—à–∞: {e}",
                color=discord.Color.red()
            )
            await interaction.response.send_message(embed=embed)
    
    @app_commands.command(name='cache_test_user', description='–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –∫—ç—à')
    @app_commands.describe(user='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
    @app_commands.default_permissions(administrator=True)
    async def test_user_cache(self, interaction: discord.Interaction, user: discord.Member):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –∫—ç—à"""
        try:
            await interaction.response.defer()
            
            # –û—á–∏—â–∞–µ–º –∫—ç—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
            invalidate_user_cache(user.id)
            
            embed = discord.Embed(
                title="üß™ –¢–µ—Å—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                description=f"–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {user.mention}",
                color=discord.Color.blue()
            )
            
            # –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å MISS)
            start_time = time.time()
            user_data_1 = await get_cached_user_info(user.id)
            first_request_time = time.time() - start_time
            
            # –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å HIT)
            start_time = time.time()
            user_data_2 = await get_cached_user_info(user.id)
            second_request_time = time.time() - start_time
            
            if user_data_1:
                embed.add_field(
                    name="üë§ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
                    value=f"**–ò–º—è:** {user_data_1.get('full_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                          f"**–°—Ç–∞—Ç–∏–∫:** {user_data_1.get('static', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                          f"**–ó–≤–∞–Ω–∏–µ:** {user_data_1.get('rank', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                          f"**–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ:** {user_data_1.get('department', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                          f"**–î–æ–ª–∂–Ω–æ—Å—Ç—å:** {user_data_1.get('position', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
                    inline=False
                )
            else:
                embed.add_field(
                    name="‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç",
                    value="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö",
                    inline=False
                )
            
            speedup_text = f"{first_request_time/second_request_time:.1f}x" if second_request_time > 0 else "‚àûx"
            embed.add_field(
                name="‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
                value=f"**1-–π –∑–∞–ø—Ä–æ—Å (MISS):** {first_request_time:.3f}—Å\n"
                      f"**2-–π –∑–∞–ø—Ä–æ—Å (HIT):** {second_request_time:.3f}—Å\n"
                      f"**–£—Å–∫–æ—Ä–µ–Ω–∏–µ:** {speedup_text}",
                inline=False
            )
            
            # –¢–µ—Å—Ç –±—ã—Å—Ç—Ä—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
            name_fast = await get_user_name_fast(user.id)
            dept_fast = await get_user_department_fast(user.id)
            rank_fast = await get_user_rank_fast(user.id)
            
            embed.add_field(
                name="üöÄ –ë—ã—Å—Ç—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏",
                value=f"**get_user_name_fast:** {name_fast}\n"
                      f"**get_user_department_fast:** {dept_fast}\n"
                      f"**get_user_rank_fast:** {rank_fast}",
                inline=False
            )
            
            await interaction.followup.send(embed=embed)
            
        except Exception as e:
            if interaction.response.is_done():
                await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            else:
                await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")

    @app_commands.command(name='global_cache_status', description='–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—ã–π —Å—Ç–∞—Ç—É—Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è')
    @app_commands.default_permissions(administrator=True)
    async def global_cache_status(self, interaction: discord.Interaction):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—ã–π —Å—Ç–∞—Ç—É—Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è"""
        try:
            stats = get_cache_statistics()
            
            embed = discord.Embed(
                title="üåê –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è",
                description="–°—Ç–∞—Ç—É—Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π –±–æ—Ç–∞",
                color=discord.Color.blue()
            )
            
            # –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            embed.add_field(
                name="üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                value=f"**–†–∞–∑–º–µ—Ä –∫—ç—à–∞:** {stats['cache_size']} –∑–∞–ø–∏—Å–µ–π\n"
                      f"**–í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤:** {stats['total_requests']}\n"
                      f"**–ü–æ–ø–∞–¥–∞–Ω–∏—è:** {stats['hits']}\n"
                      f"**–ü—Ä–æ–º–∞—Ö–∏:** {stats['misses']}\n"
                      f"**Hit Rate:** {stats['hit_rate_percent']:.1f}%",
                inline=True
            )
            
            # –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
            if stats['total_requests'] > 0:
                avg_hit_rate = stats['hit_rate_percent']
                if avg_hit_rate >= 70:
                    performance_status = "üü¢ –û—Ç–ª–∏—á–Ω–æ"
                elif avg_hit_rate >= 50:
                    performance_status = "üü° –•–æ—Ä–æ—à–æ"
                else:
                    performance_status = "üî¥ –¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è"
            else:
                performance_status = "‚ö™ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
            
            embed.add_field(
                name="‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
                value=f"**–°—Ç–∞—Ç—É—Å:** {performance_status}\n"
                      f"**–ò—Å—Ç–µ–∫—à–∏—Ö –∑–∞–ø–∏—Å–µ–π:** {stats['expired_entries']}\n"
                      f"**–ü—Ä–∏–º–µ—Ä–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏:** {stats['memory_usage_estimate']} –±–∞–π—Ç\n"
                      f"**–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—á–∏—Å—Ç–∫–∞:** {stats['last_cleanup'].strftime('%H:%M:%S')}",
                inline=True
            )
            
            # –ú–æ–¥—É–ª–∏, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–µ –∫—ç—à
            cache_modules = [
                "‚úÖ –°–∏—Å—Ç–µ–º–∞ —Å–∫–ª–∞–¥–∞ (warehouse)",
                "‚úÖ UserDatabase (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π)",
                "‚úÖ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è (migrated)",
                "‚úÖ –°–∏—Å—Ç–µ–º–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–π (migrated)",
                "‚úÖ –ó–∞—è–≤–∫–∏ –Ω–∞ –æ—Ç–ø—É—Å–∫ (migrated)"
            ]
            
            embed.add_field(
                name="üéØ –ú–æ–¥—É–ª–∏ —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º",
                value="\n".join(cache_modules),
                inline=False
            )
            
            # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            recommendations = []
            if stats['total_requests'] > 0:
                if avg_hit_rate < 50:
                    recommendations.append("üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
                if stats['expired_entries'] > stats['cache_size'] * 0.3:
                    recommendations.append("üßπ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞")
            if not recommendations:
                recommendations.append("‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ")
            
            embed.add_field(
                name="üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
                value="\n".join(recommendations),
                inline=False
            )
            
            await interaction.response.send_message(embed=embed)
            
        except Exception as e:
            await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {e}")

    @app_commands.command(name='warehouse_test_user', description='–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Å–∫–ª–∞–¥–∞')
    @app_commands.describe(user='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –≤—ã)')
    @app_commands.default_permissions(administrator=True)
    async def test_warehouse_user_data(self, interaction: discord.Interaction, user: Optional[discord.Member] = None):
        """–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Å–∫–ª–∞–¥–∞"""
        target_user = user if user else interaction.user
        
        try:
            await interaction.response.defer()
            
            from utils.warehouse_user_data import get_warehouse_user_data, prepare_modal_data
            
            # –¢–µ—Å—Ç 1: –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            start_time = time.time()
            user_data = await get_warehouse_user_data(target_user.id)
            full_data_time = time.time() - start_time
            
            # –¢–µ—Å—Ç 2: –î–∞–Ω–Ω—ã–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            start_time = time.time()
            modal_data = await prepare_modal_data(target_user.id)
            modal_data_time = time.time() - start_time
            
            embed = discord.Embed(
                title="üß™ –¢–µ—Å—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                description=f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è {target_user.mention}",
                color=discord.Color.blue()
            )
            
            # –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            embed.add_field(
                name="üìã –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                value=f"**–ò–º—è:** {user_data['full_name'] or '–ù–µ –Ω–∞–π–¥–µ–Ω–æ'}\n"
                      f"**–°—Ç–∞—Ç–∏–∫:** {user_data['static'] or '–ù–µ –Ω–∞–π–¥–µ–Ω'}\n"
                      f"**–î–æ–ª–∂–Ω–æ—Å—Ç—å:** {user_data['position']}\n"
                      f"**–ó–≤–∞–Ω–∏–µ:** {user_data['rank']}\n"
                      f"**–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ:** {user_data['department']}\n"
                      f"**–ò—Å—Ç–æ—á–Ω–∏–∫:** {user_data['source']}\n"
                      f"**–í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏:** {full_data_time:.3f}—Å",
                inline=False
            )
            
            # –î–∞–Ω–Ω—ã–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            embed.add_field(
                name="üî§ –î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è",
                value=f"**–ò–º—è (–∑–Ω–∞—á–µ–Ω–∏–µ):** {modal_data['name_value'] or '–ü—É—Å—Ç–æ'}\n"
                      f"**–°—Ç–∞—Ç–∏–∫ (–∑–Ω–∞—á–µ–Ω–∏–µ):** {modal_data['static_value'] or '–ü—É—Å—Ç–æ'}\n"
                      f"**–ò–º–µ–µ—Ç –¥–∞–Ω–Ω—ã–µ:** {'–î–∞' if modal_data['has_data'] else '–ù–µ—Ç'}\n"
                      f"**–ò—Å—Ç–æ—á–Ω–∏–∫:** {modal_data['source']}\n"
                      f"**–í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏:** {modal_data_time:.3f}—Å",
                inline=False
            )
            
            # –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            status_emoji = "üü¢" if full_data_time < 1.0 else "üü°" if full_data_time < 3.0 else "üî¥"
            embed.add_field(
                name=f"{status_emoji} –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
                value=f"**–°—Ç–∞—Ç—É—Å:** {'–û—Ç–ª–∏—á–Ω–æ' if full_data_time < 1.0 else '–ü—Ä–∏–µ–º–ª–µ–º–æ' if full_data_time < 3.0 else '–ú–µ–¥–ª–µ–Ω–Ω–æ'}\n"
                      f"**–†–∏—Å–∫ —Ç–∞–π–º–∞—É—Ç–∞ Discord:** {'–ù–∏–∑–∫–∏–π' if full_data_time < 2.0 else '–°—Ä–µ–¥–Ω–∏–π' if full_data_time < 3.0 else '–í—ã—Å–æ–∫–∏–π'}",
                inline=False
            )
            
            await interaction.followup.send(embed=embed)
            
        except Exception as e:
            if interaction.response.is_done():
                await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
            else:
                await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")


async def setup(bot):
    """–ó–∞–≥—Ä—É–∑–∫–∞ Cog"""
    await bot.add_cog(CacheAdminSlashCommands(bot))
