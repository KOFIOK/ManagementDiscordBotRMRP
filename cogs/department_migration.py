"""
Department Applications Migration - Only migration command
"""
import discord
from discord.ext import commands
from discord import app_commands
import logging

from utils.config_manager import load_config, save_config
from utils.ping_manager import ping_manager

logger = logging.getLogger(__name__)

class DepartmentMigrationCog(commands.Cog):
    """Cog for department migration utilities"""
    
    def __init__(self, bot: commands.Bot):
        self.bot = bot
    
    @app_commands.command(name="migrate-ping-settings", description="–ú–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏–Ω–≥–æ–≤ –≤ –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É")
    @app_commands.default_permissions(administrator=True)
    async def migrate_ping_settings(self, interaction: discord.Interaction):
        """Migrate legacy ping settings to new system"""
        try:
            await interaction.response.defer()
            
            config = load_config()
            ping_settings = config.get('ping_settings', {})
            departments = config.get('departments', {})
            
            if not ping_settings:
                embed = discord.Embed(
                    title="‚ÑπÔ∏è –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è",
                    description="–°—Ç–∞—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏–Ω–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.",
                    color=discord.Color.blue()
                )
                await interaction.followup.send(embed=embed)
                return
            
            migrated_count = 0
            migration_log = []
            
            # Migrate old ping settings to new department structure
            for dept_pattern, role_ids in ping_settings.items():
                # Find matching department
                dept_code = None
                for code, patterns in ping_manager.DEPARTMENT_PATTERNS.items():
                    if dept_pattern.lower() in [p.lower() for p in patterns]:
                        dept_code = code
                        break
                
                if dept_code and dept_code in departments:
                    if 'ping_contexts' not in departments[dept_code]:
                        departments[dept_code]['ping_contexts'] = {}
                    
                    # Migrate to applications context
                    departments[dept_code]['ping_contexts']['applications'] = role_ids
                    migrated_count += 1
                    migration_log.append(f"‚úÖ {dept_pattern} ‚Üí {dept_code} (applications): {len(role_ids)} —Ä–æ–ª–µ–π")
                else:
                    migration_log.append(f"‚ùå {dept_pattern}: –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
            if migrated_count > 0:
                # Save updated config
                save_config(config)
                
                # Auto-reload config
                try:
                    ping_manager.reload_config()
                except:
                    pass
                
                embed = discord.Embed(
                    title="‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞",
                    description=f"–ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ {migrated_count} –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–∏–Ω–≥–æ–≤",
                    color=discord.Color.green()
                )
                
                log_text = "\n".join(migration_log[:15])
                if len(migration_log) > 15:
                    log_text += f"\n... –∏ –µ—â–µ {len(migration_log) - 15} –∑–∞–ø–∏—Å–µ–π"
                
                embed.add_field(
                    name="üìù –î–µ—Ç–∞–ª–∏ –º–∏–≥—Ä–∞—Ü–∏–∏",
                    value=log_text,
                    inline=False
                )
                
                embed.add_field(
                    name="üí° –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
                    value="–°—Ç–∞—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏.\n"
                          "–ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É ping_contexts.",
                    inline=False
                )
            else:
                embed = discord.Embed(
                    title="‚ö†Ô∏è –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞",
                    description="–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–ø–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è–º–∏.",
                    color=discord.Color.orange()
                )
                
                embed.add_field(
                    name="üìù –ü—Ä–æ–±–ª–µ–º—ã",
                    value="\n".join(migration_log[:10]),
                    inline=False
                )
            
            await interaction.followup.send(embed=embed)
            
        except Exception as e:
            logger.error(f"Error in ping settings migration: {e}")
            error_embed = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏",
                description=f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}",
                color=discord.Color.red()
            )
            await interaction.followup.send(embed=error_embed)

async def setup(bot):
    """–ó–∞–≥—Ä—É–∑–∫–∞ Cog"""
    await bot.add_cog(DepartmentMigrationCog(bot))
