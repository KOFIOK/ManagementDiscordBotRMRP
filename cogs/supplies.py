import discord
from discord.ext import commands
from datetime import datetime
from forms.supplies import SuppliesManager
from utils.config_manager import load_config


class SuppliesCog(commands.Cog):
    """–ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π –ø–æ—Å—Ç–∞–≤–æ–∫"""
    
    def __init__(self, bot):
        self.bot = bot
        self.supplies_manager = SuppliesManager(self.bot)

    async def supplies_object_autocomplete(
        self,
        interaction: discord.Interaction,
        current: str,
    ) -> list[discord.app_commands.Choice[str]]:
        """–ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ—Å—Ç–∞–≤–æ–∫"""
        try:
            choices = []
            for category_key, category_objects in self.supplies_manager.categories.items():
                for object_key, object_info in category_objects.items():
                    choice_name = f"{object_info['emoji']} {object_info['name']}"
                    # –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–º—É —Ç–µ–∫—Å—Ç—É
                    if current.lower() in choice_name.lower() or current.lower() in object_key.lower():
                        choices.append(discord.app_commands.Choice(name=choice_name, value=object_key))
                        
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 25 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ (–ª–∏–º–∏—Ç Discord)
            return choices[:25]
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ—Å—Ç–∞–≤–æ–∫: {e}")
            return []
    
    @discord.app_commands.command(
        name="supplies-reset",
        description="–°–±—Ä–æ—Å–∏—Ç—å —Ç–∞–π–º–µ—Ä –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤–æ–µ–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞"
    )
    @discord.app_commands.describe(
        –æ–±—ä–µ–∫—Ç="–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ç–∞–π–º–µ—Ä–∞"
    )
    @discord.app_commands.autocomplete(–æ–±—ä–µ–∫—Ç=supplies_object_autocomplete)
    async def supplies_reset(self, interaction: discord.Interaction, –æ–±—ä–µ–∫—Ç: str):
        """–°–±—Ä–æ—Å —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (–º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã/–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∏–ª–∏ Discord-–∞–¥–º–∏–Ω—ã)
            config = load_config()
            moderator_role_ids = config.get('moderators', {}).get('roles', [])
            administrator_role_ids = config.get('administrators', {}).get('roles', [])
            
            user_role_ids = [role.id for role in interaction.user.roles]
            is_bot_moderator_or_admin = any(role_id in user_role_ids for role_id in moderator_role_ids + administrator_role_ids)
            is_discord_admin = interaction.user.guild_permissions.administrator
            
            if not (is_bot_moderator_or_admin or is_discord_admin):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤–∫–∞–º–∏.",
                    ephemeral=True
                )
                return
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—ä–µ–∫—Ç–µ
            object_info = self.supplies_manager.objects.get(–æ–±—ä–µ–∫—Ç)
            if not object_info:
                await interaction.response.send_message(
                    "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç.",
                    ephemeral=True
                )
                return
            
            object_name = object_info["name"]
            emoji = object_info["emoji"]
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π —Ç–∞–π–º–µ—Ä
            if not self.supplies_manager.is_timer_active(–æ–±—ä–µ–∫—Ç):
                await interaction.response.send_message(
                    f"‚ÑπÔ∏è {emoji} **{object_name}** –Ω–µ –∏–º–µ–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞.",
                    ephemeral=True
                )
                return
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –∏ —É–¥–∞–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            success = await self.supplies_manager.cancel_timer_with_cleanup(–æ–±—ä–µ–∫—Ç)
            
            if success:
                await interaction.response.send_message(
                    f"‚úÖ {emoji} –¢–∞–π–º–µ—Ä –¥–ª—è **{object_name}** —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω!\n"
                    f"üë§ –°–±—Ä–æ—à–µ–Ω: {interaction.user.mention}",
                    ephemeral=True
                )
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                await self._update_control_message_after_reset()
            else:
                await interaction.response.send_message(
                    f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è **{object_name}**.",
                    ephemeral=True
                )
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ supplies-reset: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.",
                ephemeral=True
            )
    
    @discord.app_commands.command(
        name="supplies-setup",
        description="–°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å—Ç–∞–≤–æ–∫ –≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö"
    )
    async def supplies_setup(self, interaction: discord.Interaction):
        """–°–æ–∑–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤–æ–∫ –≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∏–ª–∏ Discord-–∞–¥–º–∏–Ω—ã)
            config = load_config()
            administrator_role_ids = config.get('administrators', {}).get('roles', [])
            
            user_role_ids = [role.id for role in interaction.user.roles]
            is_bot_admin = any(role_id in user_role_ids for role_id in administrator_role_ids)
            is_discord_admin = interaction.user.guild_permissions.administrator
            
            if not (is_bot_admin or is_discord_admin):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å—Ç–∞–≤–æ–∫.",
                    ephemeral=True
                )
                return
            
            await interaction.response.defer(ephemeral=True)
            
            supplies_config = config.get('supplies', {})
            
            # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            control_result = await self._setup_control_message(supplies_config)
            
            # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏  
            subscription_result = await self._setup_subscription_message(supplies_config)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            results = []
            if control_result:
                results.append(f"‚úÖ {control_result}")
            if subscription_result:
                results.append(f"‚úÖ {subscription_result}")
            
            if not results:
                results.append("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–æ–≤")
            
            message = "üöö **–†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å—Ç–∞–≤–æ–∫:**\n\n" + "\n".join(results)
            await interaction.followup.send(message, ephemeral=True)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ supplies-setup: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å—Ç–∞–≤–æ–∫.",
                ephemeral=True
            )
    
    async def _setup_control_message(self, supplies_config: dict) -> str:
        """–°–æ–∑–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤–∫–∞–º–∏"""
        try:
            control_channel_id = supplies_config.get('control_channel_id')
            if not control_channel_id:
                return None
            
            channel = self.bot.get_channel(control_channel_id)
            if not channel:
                return None
            
            from forms.supplies.supplies_control_view import send_supplies_control_message
            message = await send_supplies_control_message(channel)
            
            if message:
                return f"–°–æ–æ–±—â–µ–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–æ –≤ #{channel.name}"
            return None
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {e}")
            return None
    
    async def _setup_subscription_message(self, supplies_config: dict) -> str:
        """–°–æ–∑–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏"""
        try:
            subscription_channel_id = supplies_config.get('subscription_channel_id')
            if not subscription_channel_id:
                return None
            
            channel = self.bot.get_channel(subscription_channel_id)
            if not channel:
                return None
            
            from forms.supplies.supplies_subscription_view import send_supplies_subscription_message
            message = await send_supplies_subscription_message(channel)
            
            if message:
                return f"–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–æ –≤ #{channel.name}"
            return None
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
            return None
    
    async def _update_control_message_after_reset(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞ —Ç–∞–π–º–µ—Ä–∞"""
        try:
            from utils.supplies_restore import get_supplies_restore_manager
            restore_manager = get_supplies_restore_manager()
            if restore_manager:
                await restore_manager.update_control_message_timers()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞: {e}")
    
    @discord.app_commands.command(
        name="supplies-debug", 
        description="[DEV] –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ –ø–æ—Å—Ç–∞–≤–æ–∫"
    )
    async def supplies_debug(self, interaction: discord.Interaction):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ –ø–æ—Å—Ç–∞–≤–æ–∫"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∏–ª–∏ Discord-–∞–¥–º–∏–Ω—ã)
            config = load_config()
            administrator_role_ids = config.get('administrators', {}).get('roles', [])
            
            user_role_ids = [role.id for role in interaction.user.roles]
            is_bot_admin = any(role_id in user_role_ids for role_id in administrator_role_ids)
            is_discord_admin = interaction.user.guild_permissions.administrator
            
            if not (is_bot_admin or is_discord_admin):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å—Ç–∞–≤–æ–∫.",
                    ephemeral=True
                )
                return
            
            # –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            supplies_config = config.get('supplies', {})
            active_timers = self.supplies_manager.get_active_timers()
            
            embed = discord.Embed(
                title="üîß –û—Ç–ª–∞–¥–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å—Ç–∞–≤–æ–∫",
                color=discord.Color.orange(),
                timestamp=datetime.now()
            )
            
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–æ–≤
            embed.add_field(
                name="üì∫ –ö–∞–Ω–∞–ª—ã",
                value=(
                    f"üéÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {supplies_config.get('control_channel_id', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')}\n"
                    f"üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {supplies_config.get('notification_channel_id', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')}\n"
                    f"üîî –ü–æ–¥–ø–∏—Å–∫–∞: {supplies_config.get('subscription_channel_id', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')}"
                ),
                inline=False
            )
            
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
            embed.add_field(
                name="‚è∞ –í—Ä–µ–º—è",
                value=(
                    f"‚è≥ –¢–∞–π–º–µ—Ä: {supplies_config.get('timer_duration_hours', 4)} —á.\n"
                    f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: {supplies_config.get('warning_minutes', 20)} –º–∏–Ω.\n"
                    f"üîî –†–æ–ª—å: {supplies_config.get('subscription_role_id', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞')}"
                ),
                inline=True
            )
            
            # –ê–∫—Ç–∏–≤–Ω—ã–µ —Ç–∞–π–º–µ—Ä—ã
            if active_timers:
                timer_info = []
                for obj_key, timer_data in active_timers.items():
                    remaining = self.supplies_manager.get_remaining_time(obj_key)
                    timer_info.append(f"‚Ä¢ {timer_data.get('emoji', 'üì¶')} {timer_data.get('object_name', obj_key)}: {remaining}")
                
                embed.add_field(
                    name=f"‚è∞ –ê–∫—Ç–∏–≤–Ω—ã–µ —Ç–∞–π–º–µ—Ä—ã ({len(active_timers)})",
                    value="\n".join(timer_info) if timer_info else "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∞–π–º–µ—Ä–æ–≤",
                    inline=False
                )
            else:
                embed.add_field(
                    name="‚è∞ –ê–∫—Ç–∏–≤–Ω—ã–µ —Ç–∞–π–º–µ—Ä—ã",
                    value="üü¢ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∞–π–º–µ—Ä–æ–≤",
                    inline=False
                )
            
            # –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
            from utils.supplies_scheduler import get_supplies_scheduler
            scheduler = get_supplies_scheduler()
            scheduler_status = "üü¢ –ê–∫—Ç–∏–≤–µ–Ω" if scheduler and scheduler.is_running else "üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"
            
            embed.add_field(
                name="ü§ñ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫",
                value=f"–°—Ç–∞—Ç—É—Å: {scheduler_status}",
                inline=True
            )
            
            embed.set_footer(text="–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å—Ç–∞–≤–æ–∫")
            
            await interaction.response.send_message(embed=embed, ephemeral=True)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ supplies-debug: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.",
                ephemeral=True
            )


async def setup(bot):
    """–§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ cog"""
    await bot.add_cog(SuppliesCog(bot))
    print("‚úÖ Supplies cog loaded successfully")
