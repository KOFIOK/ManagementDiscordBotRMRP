"""
Moderator registration system

This module provides a registration interface for moderators to access the system.
"""

import discord
from discord import ui
from utils.config_manager import load_config, is_moderator_or_admin
from utils.moderator_auth import ModeratorAuthModal
from utils.google_sheets import sheets_manager


class ModeratorRegistrationView(ui.View):
    """View with registration button for moderators"""
    
    def __init__(self):
        super().__init__(timeout=None)
    
    @discord.ui.button(label="üîê –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞", style=discord.ButtonStyle.primary, custom_id="moderator_registration")
    async def register_moderator(self, interaction: discord.Interaction, button: discord.ui.Button):
        """Handle moderator registration button click"""
        try:
            # Check if user has moderator permissions
            config = load_config()
            if not is_moderator_or_admin(interaction.user, config):
                await interaction.response.send_message(
                    "‚ùå **–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω**\n"
                    "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º.\n"
                    "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.",
                    ephemeral=True
                )
                return
            
            # Check if moderator is already registered
            auth_result = await sheets_manager.check_moderator_authorization(interaction.user)
            if auth_result["found"]:
                await interaction.response.send_message(
                    f"‚úÖ **–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ**\n"
                    f"–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ: {auth_result['info']}\n\n"
                    "–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏.",
                    ephemeral=True
                )
                return
            
            # Show registration modal
            registration_modal = ModeratorAuthModal(
                self._handle_registration_complete,
                interaction
            )            
            await interaction.response.send_modal(registration_modal)
            
        except Exception as e:
            print(f"Error in moderator registration: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                ephemeral=True
            )
    
    async def _handle_registration_complete(self, interaction, moderator_data, original_interaction):
        """Handle successful moderator registration"""
        try:
            # Send success message to the user
            await interaction.followup.send(
                f"‚úÖ **–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!**\n"
                f"–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ: {moderator_data['full_info']}\n\n"
                "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–∞—è–≤–∫–∏ –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π.",
                ephemeral=True
            )
                    
        except Exception as e:
            print(f"Error in registration completion: {e}")


def create_moderator_registration_embed():
    """Create embed for moderator registration message"""
    embed = discord.Embed(
        title="üîê –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ",
        description=(
            "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–∏—Å—Ç–µ–º–æ–π –∫–∞–¥—Ä–æ–≤–æ–≥–æ —É—á—ë—Ç–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –¥–æ–ª–∂–Ω—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.\n\n"
            "**–ß—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:**\n"
            "‚Ä¢ Email –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ Google Sheets\n"
            "‚Ä¢ –ò–º—è –∏ –§–∞–º–∏–ª–∏—è –≤–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞\n"
            "‚Ä¢ –°—Ç–∞—Ç–∏–∫ (123-456)\n"
            "‚Ä¢ –î–æ–ª–∂–Ω–æ—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä: `–ù–∞—á. –ø–æ –ö–†`).\n"
            "   *–ù–µ—Ç –¥–æ–ª–∂–Ω–æ—Å—Ç–∏? –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—ë –∑–≤–∞–Ω–∏–µ.*\n\n"
            "–ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∫–∞–¥—Ä–æ–≤—ã–º —Ç–∞–±–ª–∏—Ü–∞–º –∏ —Å–º–æ–∂–µ—Ç–µ "
            "–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–∞—è–≤–∫–∏ –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π.\n\n"
            "**‚ö†Ô∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Å–æ –∑–≤–∞–Ω–∏—è –ö–∞–ø–∏—Ç–∞–Ω–∞.**"
        ),
        color=discord.Color.blue()
    )
    embed.set_footer(text="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
    return embed


async def ensure_moderator_registration_message(guild, channel_id):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ —Å–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ"""
    if not channel_id:
        print("‚ö†Ô∏è Moderator registration channel not configured")
        return None
    
    channel = guild.get_channel(channel_id)
    if not channel:
        print(f"‚ö†Ô∏è Moderator registration channel not found: {channel_id}")
        return None
    
    try:
        # –ü–æ–∏—Å–∫ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        pinned_messages = await channel.pins()
        for message in pinned_messages:
            if (message.author.id == guild.me.id and 
                message.embeds and 
                "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤" in message.embeds[0].title):
                print(f"‚úÖ Moderator registration message already exists in {channel.name}")
                return message
        
        # –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        embed = create_moderator_registration_embed()
        view = ModeratorRegistrationView()
        
        message = await channel.send(embed=embed, view=view)
        await message.pin(reason="–°–∏—Å—Ç–µ–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤")
        
        print(f"‚úÖ Created moderator registration message in {channel.name}")
        return message
        
    except discord.Forbidden:
        print(f"‚ùå No permission to manage messages in {channel.name}")
        return None
    except Exception as e:
        print(f"‚ùå Error setting up moderator registration message: {e}")
        return None
