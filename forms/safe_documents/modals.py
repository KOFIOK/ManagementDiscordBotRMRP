import discord
from typing import Optional

from utils.user_cache import get_cached_user_info
from utils.warehouse_user_data import get_warehouse_user_data
from .manager import SafeDocumentsManager


class SafeDocumentsModal(discord.ui.Modal):
    def __init__(self, edit_mode: bool = False, existing_data: Optional[dict] = None):
        super().__init__(
            title="üìã –§–æ—Ä–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
            timeout=300
        )
        
        self.edit_mode = edit_mode
        self.existing_data = existing_data or {}
        
        # –ü–æ–ª—è —Ñ–æ—Ä–º—ã
        self.name_field = discord.ui.TextInput(
            label="–ò–º—è –§–∞–º–∏–ª–∏—è",
            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é",
            required=True,
            max_length=100,
            default=self.existing_data.get('name', '')
        )
        
        self.static_field = discord.ui.TextInput(
            label="–°—Ç–∞—Ç–∏–∫",
            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Å—Ç–∞—Ç–∏–∫",
            required=True,
            max_length=100,
            default=self.existing_data.get('static', '')
        )
        
        self.documents_field = discord.ui.TextInput(
            label="–ö–æ–ø–∏—è –≤—Å–µ—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
            placeholder="–°—Å—ã–ª–∫–∏ –Ω–∞: –ø–∞—Å–ø–æ—Ä—Ç, –º–µ–¥ –∫–Ω–∏–∂–∫–∞, —Å–ø—Ä–∞–≤–∫–∞ –Ω–∞—Ä–∫–æ–ª–æ–≥–∞, –ø—Ä–∞–≤–∞, –≤–æ–µ–Ω–Ω—ã–π –±–∏–ª–µ—Ç",
            required=True,
            style=discord.TextStyle.paragraph,
            max_length=1000,
            default=self.existing_data.get('documents', '')
        )
        
        self.phone_field = discord.ui.TextInput(
            label="–ò–≥—Ä–æ–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∏–≥—Ä–æ–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
            required=True,
            max_length=50,
            default=self.existing_data.get('phone', '')
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –≤ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        self.add_item(self.name_field)
        self.add_item(self.static_field)
        self.add_item(self.documents_field)
        self.add_item(self.phone_field)

    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã"""
        try:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º email –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_email = f"{interaction.user.name}@rmrp.ru"
            
            # –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
            form_data = {
                'name': self.name_field.value.strip(),
                'static': self.static_field.value.strip(),
                'documents': self.documents_field.value.strip(),
                'phone': self.phone_field.value.strip(),
                'email': user_email  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ—á—Ç–∞
            }
            
            manager = SafeDocumentsManager()
            
            if self.edit_mode:
                # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞—è–≤–∫–∏
                await manager.handle_edit_submission(interaction, form_data, self.existing_data)
            else:
                # –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞
                await manager.handle_new_submission(interaction, form_data)
                
        except Exception as e:
            await interaction.response.send_message(
                f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ä–º—ã: {str(e)}",
                ephemeral=True
            )

    async def autofill_from_cache(self, user_id: int):
        """–ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π –∏–∑ –∫—ç—à–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ user_cache
            cached_data = await get_cached_user_info(user_id)
            
            if cached_data:
                # –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é
                if 'full_name' in cached_data and cached_data['full_name']:
                    self.name_field.default = cached_data['full_name']
                elif 'first_name' in cached_data and 'last_name' in cached_data:
                    # –ï—Å–ª–∏ –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è, –æ–±—ä–µ–¥–∏–Ω—è–µ–º –∏—Ö
                    first_name = cached_data['first_name'].strip()
                    last_name = cached_data['last_name'].strip()
                    if first_name or last_name:
                        self.name_field.default = f"{first_name} {last_name}".strip()
                
                # –ó–∞–ø–æ–ª–Ω—è–µ–º —Å—Ç–∞—Ç–∏–∫
                if 'static' in cached_data and cached_data['static']:
                    self.static_field.default = cached_data['static']
                elif 'position' in cached_data and cached_data['position']:
                    self.static_field.default = cached_data['position']
            
            # –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ user_cache, –ø—Ä–æ–±—É–µ–º warehouse_user_data
            if not cached_data:
                warehouse_data = await get_warehouse_user_data(user_id)
                if warehouse_data:
                    if 'static' in warehouse_data:
                        static_data = warehouse_data['static']
                        
                        # –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –∏–∑ warehouse_user_data
                        if 'name' in static_data and static_data['name']:
                            self.name_field.default = static_data['name']
                        
                        if 'static' in static_data and static_data['static']:
                            self.static_field.default = static_data['static']
                        elif 'position' in static_data and static_data['position']:
                            self.static_field.default = static_data['position']
                            
        except Exception as e:
            # –ï—Å–ª–∏ –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –ø—É—Å—Ç—ã–º–∏ –ø–æ–ª—è–º–∏
            print(f"Warning: Could not autofill safe documents form for user {user_id}: {e}")


class SafeDocumentsRejectionModal(discord.ui.Modal):
    def __init__(self, application_data: dict):
        super().__init__(
            title="‚ùå –ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è",
            timeout=300
        )
        
        self.application_data = application_data
        
        self.reason_field = discord.ui.TextInput(
            label="–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è",
            placeholder="–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏...",
            required=True,
            style=discord.TextStyle.paragraph,
            max_length=500
        )
        
        self.add_item(self.reason_field)

    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏"""
        try:
            reason = self.reason_field.value.strip()
            
            manager = SafeDocumentsManager()
            await manager.handle_rejection(interaction, self.application_data, reason)
            
        except Exception as e:
            await interaction.response.send_message(
                f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏: {str(e)}",
                ephemeral=True
            )


class SafeDocumentsEditModal(discord.ui.Modal):
    def __init__(self, application_data: dict):
        super().__init__(
            title="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏",
            timeout=300
        )
        
        self.application_data = application_data
        
        # –ü—Ä–µ–¥–∑–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è —Ç–µ–∫—É—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        self.name_field = discord.ui.TextInput(
            label="–ò–º—è –§–∞–º–∏–ª–∏—è",
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é",
            required=True,
            max_length=100,
            default=application_data.get('name', '')
        )
        
        self.static_field = discord.ui.TextInput(
            label="–°—Ç–∞—Ç–∏–∫",
            placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞—Ç–∏–∫",
            required=True,
            max_length=100,
            default=application_data.get('static', '')
        )
        
        self.documents_field = discord.ui.TextInput(
            label="–ö–æ–ø–∏—è –≤—Å–µ—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
            placeholder="–°—Å—ã–ª–∫–∏ –Ω–∞: –ø–∞—Å–ø–æ—Ä—Ç, –º–µ–¥ –∫–Ω–∏–∂–∫–∞, —Å–ø—Ä–∞–≤–∫–∞ –Ω–∞—Ä–∫–æ–ª–æ–≥–∞, –ø—Ä–∞–≤–∞, –≤–æ–µ–Ω–Ω—ã–π –±–∏–ª–µ—Ç",
            required=True,
            style=discord.TextStyle.paragraph,
            max_length=1000,
            default=application_data.get('documents', '')
        )
        
        self.phone_field = discord.ui.TextInput(
            label="–ò–≥—Ä–æ–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–≥—Ä–æ–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
            required=True,
            max_length=50,
            default=application_data.get('phone', '')
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è
        self.add_item(self.name_field)
        self.add_item(self.static_field)
        self.add_item(self.documents_field)
        self.add_item(self.phone_field)

    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞—è–≤–∫–∏"""
        try:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º email –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_email = f"{interaction.user.name}@rmrp.ru"
            
            # –°–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            updated_data = {
                'name': self.name_field.value.strip(),
                'static': self.static_field.value.strip(),
                'documents': self.documents_field.value.strip(),
                'phone': self.phone_field.value.strip(),
                'email': user_email,  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ—á—Ç–∞
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                'user_id': self.application_data['user_id'],
                'timestamp': self.application_data['timestamp'],
                'message_id': self.application_data.get('message_id')
            }
            
            manager = SafeDocumentsManager()
            await manager.handle_edit_update(interaction, updated_data, self.application_data)
            
        except Exception as e:
            await interaction.response.send_message(
                f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏: {str(e)}",
                ephemeral=True
            )
