"""
Channel configuration forms and views
"""
import discord
from discord import ui
from utils.config_manager import load_config, save_config
from forms.dismissal_form import send_dismissal_button_message
from .base import BaseSettingsView, BaseSettingsModal, ChannelParser, ConfigDisplayHelper


class ChannelsConfigView(BaseSettingsView):
    """View for channel configuration selection"""
    
    def __init__(self):
        super().__init__()
        self.add_item(ChannelConfigSelect())


class ChannelConfigSelect(ui.Select):
    """Select menu for choosing which channel to configure"""
    
    def __init__(self):
        options = [
            discord.SelectOption(
                label="–ö–∞–Ω–∞–ª —É–≤–æ–ª—å–Ω–µ–Ω–∏–π",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è —Ä–∞–ø–æ—Ä—Ç–æ–≤ –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ",
                emoji="üìù",
                value="dismissal"
            ),
            discord.SelectOption(
                label="–ö–∞–Ω–∞–ª –∞—É–¥–∏—Ç–∞",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –∫–∞–¥—Ä–æ–≤–æ–≥–æ –∞—É–¥–∏—Ç–∞",
                emoji="üîç",
                value="audit"
            ),
            discord.SelectOption(
                label="–ö–∞–Ω–∞–ª —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞",
                emoji="üö´",
                value="blacklist"
            ),
            discord.SelectOption(
                label="–ö–∞–Ω–∞–ª –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–æ–µ–Ω–Ω–æ–π/–≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–π —Ä–æ–ª–∏",
                emoji="üéñÔ∏è",
                value="role_assignment"
            )
        ]
        
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...",
            min_values=1,
            max_values=1,
            options=options,
            custom_id="channel_config_select"
        )
    
    async def callback(self, interaction: discord.Interaction):
        selected_option = self.values[0]
        await self.show_channel_selection(interaction, selected_option)
    
    async def show_channel_selection(self, interaction: discord.Interaction, config_type: str):
        """Show channel selection interface"""
        if config_type == "role_assignment":
            await self.show_role_assignment_config(interaction)
        else:
            # Create channel selection modal for other channel types
            modal = ChannelSelectionModal(config_type)
            await interaction.response.send_modal(modal)
    
    async def show_role_assignment_config(self, interaction: discord.Interaction):
        """Show role assignment channel configuration with role management"""
        embed = discord.Embed(
            title="üéñÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π",
            description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–º –∏ —Ä–æ–ª—è–º–∏ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π.",
            color=discord.Color.blue(),
            timestamp=discord.utils.utcnow()
        )
        
        config = load_config()
        helper = ConfigDisplayHelper()
        
        # Show current channel
        embed.add_field(
            name="üìÇ –¢–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª:",
            value=helper.format_channel_info(config, 'role_assignment_channel', interaction.guild),
            inline=False
        )
        
        # Show current roles
        embed.add_field(
            name="ü™ñ –†–æ–ª—å –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–≥–æ:",
            value=helper.format_role_info(config, 'military_role', interaction.guild),
            inline=True
        )
        embed.add_field(
            name="üë§ –†–æ–ª—å –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–≥–æ:",
            value=helper.format_role_info(config, 'civilian_role', interaction.guild),
            inline=True
        )
        
        embed.add_field(
            name="‚ÑπÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:",
            value=(
                "‚Ä¢ **–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª** - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π\n"
                "‚Ä¢ **–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–æ–ª–∏** - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–æ–µ–Ω–Ω—É—é –∏ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫—É—é —Ä–æ–ª–∏\n"
                "‚Ä¢ **–ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞** - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Å—ë —Å—Ä–∞–∑—É"
            ),
            inline=False
        )
        
        view = RoleAssignmentChannelView()
        await interaction.response.send_message(embed=embed, view=view, ephemeral=True)


class RoleAssignmentChannelView(BaseSettingsView):
    """View for role assignment channel configuration"""
    
    @discord.ui.button(label="üìÇ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª", style=discord.ButtonStyle.green)
    async def set_channel(self, interaction: discord.Interaction, button: discord.ui.Button):
        modal = ChannelSelectionModal("role_assignment")
        await interaction.response.send_modal(modal)
    
    @discord.ui.button(label="ü™ñ –†–æ–ª—å –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–≥–æ", style=discord.ButtonStyle.primary)
    async def set_military_role(self, interaction: discord.Interaction, button: discord.ui.Button):
        from .role_config import SetRoleModal
        modal = SetRoleModal("military_role", "ü™ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–∏ –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–≥–æ", "–£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏—Ö")
        await interaction.response.send_modal(modal)
    
    @discord.ui.button(label="üë§ –†–æ–ª—å –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–≥–æ", style=discord.ButtonStyle.secondary)
    async def set_civilian_role(self, interaction: discord.Interaction, button: discord.ui.Button):
        from .role_config import SetRoleModal
        modal = SetRoleModal("civilian_role", "üë§ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–∏ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–≥–æ", "–£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏—Ö")
        await interaction.response.send_modal(modal)
    
    @discord.ui.button(label="‚öîÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–µ–Ω–Ω—ã–µ —Ä–æ–ª–∏", style=discord.ButtonStyle.blurple)
    async def set_additional_military_roles(self, interaction: discord.Interaction, button: discord.ui.Button):
        from .role_config import SetMultipleRolesModal
        modal = SetMultipleRolesModal("additional_military_roles", "‚öîÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–µ–Ω–Ω—ã–µ —Ä–æ–ª–∏", "–£–∫–∞–∂–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–æ–ª–∏ –¥–ª—è –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏—Ö (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)")
        await interaction.response.send_modal(modal)
    
    @discord.ui.button(label="üì¢ Ping-—Ä–æ–ª—å", style=discord.ButtonStyle.green)
    async def set_ping_role(self, interaction: discord.Interaction, button: discord.ui.Button):
        from .role_config import SetRoleModal
        modal = SetRoleModal("role_assignment_ping_role", "üì¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ping-—Ä–æ–ª–∏", "–£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–∫–∞—Ö")
        await interaction.response.send_modal(modal)


class ChannelSelectionModal(BaseSettingsModal):
    """Modal for selecting and configuring channels"""
    
    def __init__(self, config_type: str):
        self.config_type = config_type
        
        type_names = {
            "dismissal": "—É–≤–æ–ª—å–Ω–µ–Ω–∏–π",
            "audit": "–∞—É–¥–∏—Ç–∞", 
            "blacklist": "—á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞",
            "role_assignment": "–ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π"
        }
        
        super().__init__(title=f"–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–∞ {type_names.get(config_type, config_type)}")
        
        self.channel_input = ui.TextInput(
            label="ID –∏–ª–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞",
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: #–∫–∞–Ω–∞–ª-—É–≤–æ–ª—å–Ω–µ–Ω–∏–π –∏–ª–∏ 1234567890123456789",
            min_length=1,
            max_length=100,
            required=True
        )
        self.add_item(self.channel_input)
    
    async def on_submit(self, interaction: discord.Interaction):
        try:
            channel_text = self.channel_input.value.strip()
            
            # Parse channel input
            channel = ChannelParser.parse_channel_input(channel_text, interaction.guild)
            
            if not channel:
                await self.send_error_message(
                    interaction,
                    "–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω",
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª –ø–æ –∑–∞–ø—Ä–æ—Å—É: `{channel_text}`\n"
                    "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞."
                )
                return
            
            if not isinstance(channel, discord.TextChannel):
                await self.send_error_message(
                    interaction,
                    "–ù–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∏–ø –∫–∞–Ω–∞–ª–∞",
                    "–í—ã–±—Ä–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–º –∫–∞–Ω–∞–ª–æ–º."
                )
                return
            
            # Save configuration
            config = load_config()
            config[f'{self.config_type}_channel'] = channel.id
            save_config(config)
            
            # Define type names and handle button messages
            type_names = {
                "dismissal": "—Ä–∞–ø–æ—Ä—Ç–æ–≤ –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ",
                "audit": "–∫–∞–¥—Ä–æ–≤–æ–≥–æ –∞—É–¥–∏—Ç–∞",
                "blacklist": "—á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞",
                "role_assignment": "–ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π"
            }
            type_name = type_names.get(self.config_type, self.config_type)
            
            # Send appropriate button message to the channel
            button_message_added = False
            if self.config_type == "dismissal":
                await send_dismissal_button_message(channel)
                button_message_added = True
            elif self.config_type == "role_assignment":
                # Import and send role assignment button message
                from forms.role_assignment_form import send_role_assignment_message
                await send_role_assignment_message(channel)
                button_message_added = True
            
            success_message = f"–ö–∞–Ω–∞–ª {type_name} —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ {channel.mention}!"
            if button_message_added:
                success_message += "\n–°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª."
            
            await self.send_success_message(
                interaction,
                "–ö–∞–Ω–∞–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω",
                success_message
            )
            
        except ValueError as e:
            await self.send_error_message(
                interaction,
                "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
                f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {str(e)}"
            )
        except Exception as e:
            await self.send_error_message(
                interaction,
                "–û—à–∏–±–∫–∞",
                f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∫–∞–Ω–∞–ª–∞: {str(e)}"
            )
