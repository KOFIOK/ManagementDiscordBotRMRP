"""
Channel configuration forms and views - Main navigation
"""
import discord
from discord import ui
from utils.config_manager import load_config, save_config
from .base import BaseSettingsView, BaseSettingsModal, ChannelParser, ConfigDisplayHelper

# Import specific channel configuration modules
from .channels_role_assignment import show_role_assignment_config
from .channels_dismissal import show_dismissal_config
from .channels_other import (
    show_blacklist_config, 
    show_moderator_registration_config, 
    show_leave_requests_config, 
    show_medical_registration_config
)
from .channels_promotion import show_promotion_reports_config
from .channels_warehouse import show_warehouse_config


class ChannelsConfigView(BaseSettingsView):
    """View for channel configuration selection"""
    
    def __init__(self):
        super().__init__()
        self.add_item(ChannelConfigSelect())


class ChannelConfigSelect(ui.Select):
    """Select menu for choosing which channel to configure"""
    
    def __init__(self):
        options = [
            discord.SelectOption(
                label="–ö–∞–Ω–∞–ª —É–≤–æ–ª—å–Ω–µ–Ω–∏–π",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è —Ä–∞–ø–æ—Ä—Ç–æ–≤ –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ",
                emoji="üìù",
                value="dismissal"
            ),
            discord.SelectOption(
                label="–ö–∞–Ω–∞–ª –∞—É–¥–∏—Ç–∞",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –∫–∞–¥—Ä–æ–≤–æ–≥–æ –∞—É–¥–∏—Ç–∞",
                emoji="üîç",
                value="audit"
            ),
            discord.SelectOption(
                label="–ö–∞–Ω–∞–ª —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞",
                emoji="üö´",
                value="blacklist"
            ),
            discord.SelectOption(
                label="–ö–∞–Ω–∞–ª –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–æ–µ–Ω–Ω–æ–π/–≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–π —Ä–æ–ª–∏",
                emoji="üéñÔ∏è",
                value="role_assignment"
            ),
            discord.SelectOption(
                label="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ",
                emoji="üîê",
                value="moderator_registration"
            ),
            discord.SelectOption(
                label="–ö–∞–Ω–∞–ª—ã –æ—Ç—á—ë—Ç–æ–≤ –Ω–∞ –ø–æ–≤—ã—à–µ–Ω–∏–µ",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª—ã –¥–ª—è –æ—Ç—á—ë—Ç–æ–≤ –Ω–∞ –ø–æ–≤—ã—à–µ–Ω–∏–µ –ø–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è–º",
                emoji="üìà",
                value="promotion_reports"
            ),
            discord.SelectOption(
                label="–ö–∞–Ω–∞–ª –æ—Ç–≥—É–ª–æ–≤",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫ –Ω–∞ –æ—Ç–≥—É–ª—ã",
                emoji="üèñÔ∏è",
                value="leave_requests"
            ),
            discord.SelectOption(
                label="–ó–∞–ø–∏—Å—å –∫ –≤—Ä–∞—á—É",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞–ø–∏—Å–∏ –∫ –≤—Ä–∞—á—É –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π —Ä–æ—Ç—ã",
                emoji="üè•",
                value="medical_registration"
            ),
            discord.SelectOption(
                label="–ö–∞–Ω–∞–ª—ã —Å–∫–ª–∞–¥–∞",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª—ã –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥—Å–∫–æ–≥–æ –∏–º—É—â–µ—Å—Ç–≤–∞",
                emoji="üì¶",
                value="warehouse"
            ),
            discord.SelectOption(
                label="–ó–∞—è–≤–ª–µ–Ω–∏—è –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª—ã –¥–ª—è –∑–∞—è–≤–ª–µ–Ω–∏–π –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è",
                emoji="üéì",
                value="departments"
            )
        ]
        
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...",
            min_values=1,
            max_values=1,
            options=options,
            custom_id="channel_config_select"
        )
    
    async def callback(self, interaction: discord.Interaction):
        selected_option = self.values[0]
        await self.show_channel_selection(interaction, selected_option)

    async def show_channel_selection(self, interaction: discord.Interaction, config_type: str):
        """Show channel selection interface"""
        try:
            if config_type == "role_assignment":
                await show_role_assignment_config(interaction)
            elif config_type == "dismissal":
                await show_dismissal_config(interaction)
            elif config_type == "blacklist":
                await show_blacklist_config(interaction)
            elif config_type == "moderator_registration":
                await show_moderator_registration_config(interaction)
            elif config_type == "promotion_reports":
                await show_promotion_reports_config(interaction)
            elif config_type == "leave_requests":
                await show_leave_requests_config(interaction)
            elif config_type == "medical_registration":
                await show_medical_registration_config(interaction)
            elif config_type == "warehouse":
                await show_warehouse_config(interaction)
            elif config_type == "departments":
                from .channels_departments import show_department_channels_config
                await show_department_channels_config(interaction)
            else:
                # For audit channel (simple channel selection)
                from .channels_base import ChannelSelectionModal
                modal = ChannelSelectionModal(config_type)
                await interaction.response.send_modal(modal)
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ show_channel_selection –¥–ª—è {config_type}: {e}")
            import traceback
            traceback.print_exc()
            
            if not interaction.response.is_done():
                await interaction.response.send_message(
                    f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞–Ω–∞–ª–∞ {config_type}.",
                    ephemeral=True
                )
            else:
                await interaction.followup.send(
                    f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞–Ω–∞–ª–∞ {config_type}.",
                    ephemeral=True
                )
