"""
Channel configuration forms and views
"""
import discord
from discord import ui
from utils.config_manager import load_config, save_config
from forms.dismissal_form import send_dismissal_button_message
from .base import BaseSettingsView, BaseSettingsModal, ChannelParser, ConfigDisplayHelper


class ChannelsConfigView(BaseSettingsView):
    """View for channel configuration selection"""
    
    def __init__(self):
        super().__init__()
        self.add_item(ChannelConfigSelect())


class ChannelConfigSelect(ui.Select):
    """Select menu for choosing which channel to configure"""
    
    def __init__(self):
        options = [
            discord.SelectOption(
                label="–ö–∞–Ω–∞–ª —É–≤–æ–ª—å–Ω–µ–Ω–∏–π",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è —Ä–∞–ø–æ—Ä—Ç–æ–≤ –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ",
                emoji="üìù",
                value="dismissal"
            ),
            discord.SelectOption(
                label="–ö–∞–Ω–∞–ª –∞—É–¥–∏—Ç–∞",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –∫–∞–¥—Ä–æ–≤–æ–≥–æ –∞—É–¥–∏—Ç–∞",
                emoji="üîç",
                value="audit"
            ),
            discord.SelectOption(
                label="–ö–∞–Ω–∞–ª —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞",
                emoji="üö´",
                value="blacklist"
            ),
            discord.SelectOption(
                label="–ö–∞–Ω–∞–ª –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–æ–µ–Ω–Ω–æ–π/–≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–π —Ä–æ–ª–∏",
                emoji="üéñÔ∏è",
                value="role_assignment"
            )
        ]
        
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...",
            min_values=1,
            max_values=1,
            options=options,
            custom_id="channel_config_select"
        )
    
    async def callback(self, interaction: discord.Interaction):
        selected_option = self.values[0]
        await self.show_channel_selection(interaction, selected_option)
    async def show_channel_selection(self, interaction: discord.Interaction, config_type: str):
        """Show channel selection interface"""
        if config_type == "role_assignment":
            await self.show_role_assignment_config(interaction)
        elif config_type == "dismissal":
            await self.show_dismissal_config(interaction)
        else:
            # Create channel selection modal for other channel types
            modal = ChannelSelectionModal(config_type)
            await interaction.response.send_modal(modal)
    
    async def show_role_assignment_config(self, interaction: discord.Interaction):
        """Show role assignment channel configuration with role management"""
        embed = discord.Embed(
            title="üéñÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π",
            description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–º –∏ —Ä–æ–ª—è–º–∏ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π.",
            color=discord.Color.blue(),
            timestamp=discord.utils.utcnow()
        )
        
        config = load_config()
        helper = ConfigDisplayHelper()
        
        # Show current channel
        embed.add_field(
            name="üìÇ –¢–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª:",
            value=helper.format_channel_info(config, 'role_assignment_channel', interaction.guild),
            inline=False        )
        
        # Show current roles
        embed.add_field(
            name="ü™ñ –†–æ–ª–∏ –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏—Ö:",
            value=helper.format_roles_info(config, 'military_roles', interaction.guild),
            inline=True
        )
        embed.add_field(
            name="üë§ –†–æ–ª–∏ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏—Ö:",
            value=helper.format_roles_info(config, 'civilian_roles', interaction.guild),
            inline=True
        )
          # Show ping roles
        embed.add_field(
            name="üì¢ –ü–∏–Ω–≥ —Ä–æ–ª–∏:",
            value=(
                f"ü™ñ –í–æ–µ–Ω–Ω—ã–µ: {helper.format_roles_list(config, 'military_role_assignment_ping_roles', interaction.guild)}\n"
                f"üë§ –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–µ: {helper.format_roles_list(config, 'civilian_role_assignment_ping_roles', interaction.guild)}"
            ),
            inline=False
        )
        
        embed.add_field(
            name="‚ÑπÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:",
            value=(
                "‚Ä¢ **–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª** - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π\n"
                "‚Ä¢ **–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–æ–ª–∏** - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–æ–µ–Ω–Ω—É—é –∏ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫—É—é —Ä–æ–ª–∏\n"
                "‚Ä¢ **–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∏–Ω–≥–∏** - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–æ–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n"
                "‚Ä¢ **–ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞** - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Å—ë —Å—Ä–∞–∑—É"
            ),
            inline=False
        )
        view = RoleAssignmentChannelView()
        await interaction.response.send_message(embed=embed, view=view, ephemeral=True)
    
    async def show_dismissal_config(self, interaction: discord.Interaction):
        """Show dismissal channel configuration with ping management"""
        embed = discord.Embed(
            title="üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–π",
            description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–º —É–≤–æ–ª—å–Ω–µ–Ω–∏–π –∏ –ø–∏–Ω–≥–∞–º–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è–º.",
            color=discord.Color.red(),
            timestamp=discord.utils.utcnow()
        )
        
        config = load_config()
        helper = ConfigDisplayHelper()
        
        # Show current channel
        embed.add_field(
            name="üìÇ –¢–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª:",
            value=helper.format_channel_info(config, 'dismissal_channel', interaction.guild),
            inline=False
        )
        
        # Show ping settings
        ping_settings = config.get('ping_settings', {})
        if ping_settings:
            ping_text = ""
            for department_role_id, ping_roles_ids in ping_settings.items():
                department_role = interaction.guild.get_role(int(department_role_id))
                if department_role:
                    ping_roles = []
                    for ping_role_id in ping_roles_ids:
                        ping_role = interaction.guild.get_role(ping_role_id)
                        if ping_role:
                            ping_roles.append(ping_role.mention)
                    if ping_roles:
                        ping_text += f"‚Ä¢ {department_role.mention} ‚Üí {', '.join(ping_roles)}\n"
            ping_text = ping_text or "‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏–Ω–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        else:
            ping_text = "‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏–Ω–≥–æ–≤ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
        embed.add_field(
            name="üì¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏–Ω–≥–æ–≤ –ø–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è–º:",
            value=ping_text,
            inline=False
        )
        
        embed.add_field(
            name="‚ÑπÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:",
            value=(
                "‚Ä¢ **–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª** - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è —Ä–∞–ø–æ—Ä—Ç–æ–≤ –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ\n"
                "‚Ä¢ **–î–æ–±–∞–≤–∏—Ç—å –ø–∏–Ω–≥** - –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –¥–ª—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è\n"
                "‚Ä¢ **–£–¥–∞–ª–∏—Ç—å –ø–∏–Ω–≥** - —É–±—Ä–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø–∏–Ω–≥–∞\n"
                "‚Ä¢ **–û—á–∏—Å—Ç–∏—Ç—å –ø–∏–Ω–≥–∏** - —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏–Ω–≥–æ–≤"
            ),
            inline=False
        )
        
        view = DismissalChannelView()
        await interaction.response.send_message(embed=embed, view=view, ephemeral=True)


class RoleAssignmentChannelView(BaseSettingsView):
    """View for role assignment channel configuration"""
    
    @discord.ui.button(label="üìÇ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª", style=discord.ButtonStyle.green)
    async def set_channel(self, interaction: discord.Interaction, button: discord.ui.Button):
        modal = ChannelSelectionModal("role_assignment")
        await interaction.response.send_modal(modal)
    @discord.ui.button(label="ü™ñ –†–æ–ª–∏ –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏—Ö", style=discord.ButtonStyle.primary)
    async def set_military_roles(self, interaction: discord.Interaction, button: discord.ui.Button):
        from .role_config import SetMultipleRolesModal
        modal = SetMultipleRolesModal("military_roles", "ü™ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–π –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏—Ö", "–£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª–∏ –¥–ª—è –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏—Ö (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)")
        await interaction.response.send_modal(modal)
    
    @discord.ui.button(label="üë§ –†–æ–ª–∏ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏—Ö", style=discord.ButtonStyle.secondary)
    async def set_civilian_roles(self, interaction: discord.Interaction, button: discord.ui.Button):
        from .role_config import SetMultipleRolesModal
        modal = SetMultipleRolesModal("civilian_roles", "üë§ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–π –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏—Ö", "–£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª–∏ –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏—Ö (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)")
        await interaction.response.send_modal(modal)
    
    @discord.ui.button(label="üì¢ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å ping-—Ä–æ–ª–∏", style=discord.ButtonStyle.green)
    async def set_ping_roles(self, interaction: discord.Interaction, button: discord.ui.Button):
        view = RolePingConfigView()
        await view.show_ping_config(interaction)


class ChannelSelectionModal(BaseSettingsModal):
    """Modal for selecting and configuring channels"""
    
    def __init__(self, config_type: str):
        self.config_type = config_type
        
        type_names = {
            "dismissal": "—É–≤–æ–ª—å–Ω–µ–Ω–∏–π",
            "audit": "–∞—É–¥–∏—Ç–∞", 
            "blacklist": "—á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞",
            "role_assignment": "–ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π"
        }
        
        super().__init__(title=f"–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–∞ {type_names.get(config_type, config_type)}")
        
        self.channel_input = ui.TextInput(
            label="ID –∏–ª–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞",
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: #–∫–∞–Ω–∞–ª-—É–≤–æ–ª—å–Ω–µ–Ω–∏–π –∏–ª–∏ 1234567890123456789",
            min_length=1,
            max_length=100,
            required=True
        )
        self.add_item(self.channel_input)
    
    async def on_submit(self, interaction: discord.Interaction):
        try:
            channel_text = self.channel_input.value.strip()
            
            # Parse channel input
            channel = ChannelParser.parse_channel_input(channel_text, interaction.guild)
            
            if not channel:
                await self.send_error_message(
                    interaction,
                    "–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω",
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª –ø–æ –∑–∞–ø—Ä–æ—Å—É: `{channel_text}`\n"
                    "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞."
                )
                return
            
            if not isinstance(channel, discord.TextChannel):
                await self.send_error_message(
                    interaction,
                    "–ù–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∏–ø –∫–∞–Ω–∞–ª–∞",
                    "–í—ã–±—Ä–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–º –∫–∞–Ω–∞–ª–æ–º."
                )
                return
            
            # Save configuration
            config = load_config()
            config[f'{self.config_type}_channel'] = channel.id
            save_config(config)
            
            # Define type names and handle button messages
            type_names = {
                "dismissal": "—Ä–∞–ø–æ—Ä—Ç–æ–≤ –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ",
                "audit": "–∫–∞–¥—Ä–æ–≤–æ–≥–æ –∞—É–¥–∏—Ç–∞",
                "blacklist": "—á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞",
                "role_assignment": "–ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π"
            }
            type_name = type_names.get(self.config_type, self.config_type)
            
            # Send appropriate button message to the channel
            button_message_added = False
            if self.config_type == "dismissal":
                await send_dismissal_button_message(channel)
                button_message_added = True
            elif self.config_type == "role_assignment":
                # Import and send role assignment button message
                from forms.role_assignment_form import send_role_assignment_message
                await send_role_assignment_message(channel)
                button_message_added = True
            
            success_message = f"–ö–∞–Ω–∞–ª {type_name} —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ {channel.mention}!"
            if button_message_added:
                success_message += "\n–°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª."
            
            await self.send_success_message(
                interaction,
                "–ö–∞–Ω–∞–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω",
                success_message
            )
            
        except ValueError as e:
            await self.send_error_message(
                interaction,
                "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
                f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {str(e)}"
            )
        except Exception as e:
            await self.send_error_message(
                interaction,
                "–û—à–∏–±–∫–∞",
                f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∫–∞–Ω–∞–ª–∞: {str(e)}"
            )


class RolePingConfigView(BaseSettingsView):
    """View for configuring role assignment ping settings"""
    
    def __init__(self):
        super().__init__()
    
    async def show_ping_config(self, interaction: discord.Interaction):
        """Show ping role configuration interface"""
        embed = discord.Embed(
            title="üì¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∏–Ω–≥-—Ä–æ–ª–µ–π",
            description="–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–æ–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–∫–∞—Ö.",
            color=discord.Color.orange(),            timestamp=discord.utils.utcnow()
        )
        
        config = load_config()
        helper = ConfigDisplayHelper()
        
        embed.add_field(
            name="ü™ñ –ü–∏–Ω–≥-—Ä–æ–ª–∏ –¥–ª—è –≤–æ–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫:",
            value=helper.format_roles_list(config, 'military_role_assignment_ping_roles', interaction.guild),
            inline=False
        )
        
        embed.add_field(
            name="üë§ –ü–∏–Ω–≥-—Ä–æ–ª–∏ –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏—Ö –∑–∞—è–≤–æ–∫:",
            value=helper.format_roles_list(config, 'civilian_role_assignment_ping_roles', interaction.guild),
            inline=False
        )
        
        embed.add_field(
            name="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:",
            value="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –ø–æ–¥–∞—á–µ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫. –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–æ–ª–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é. –§–æ—Ä–º–∞—Ç –ø–∏–Ω–≥–∞: `-# @—Ä–æ–ª—å1 @—Ä–æ–ª—å2`",
            inline=False
        )
        
        view = RolePingButtonsView()
        await interaction.response.send_message(embed=embed, view=view, ephemeral=True)


class RolePingButtonsView(BaseSettingsView):
    """Buttons for ping role configuration"""
    
    @discord.ui.button(label="ü™ñ –ü–∏–Ω–≥ –≤–æ–µ–Ω–Ω—ã—Ö", style=discord.ButtonStyle.green)
    async def set_military_ping(self, interaction: discord.Interaction, button: discord.ui.Button):
        from .role_config import SetMultipleRolesModal
        modal = SetMultipleRolesModal("military_role_assignment_ping_roles", "ü™ñ –ü–∏–Ω–≥-—Ä–æ–ª–∏ –¥–ª—è –≤–æ–µ–Ω–Ω—ã—Ö", "–£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –≤–æ–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–∫–∞—Ö")
        await interaction.response.send_modal(modal)
    
    @discord.ui.button(label="üë§ –ü–∏–Ω–≥ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏—Ö", style=discord.ButtonStyle.secondary)
    async def set_civilian_ping(self, interaction: discord.Interaction, button: discord.ui.Button):
        from .role_config import SetMultipleRolesModal
        modal = SetMultipleRolesModal("civilian_role_assignment_ping_roles", "üë§ –ü–∏–Ω–≥-—Ä–æ–ª–∏ –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏—Ö", "–£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏—Ö –∑–∞—è–≤–∫–∞—Ö")
        await interaction.response.send_modal(modal)


class DismissalChannelView(BaseSettingsView):
    """View for dismissal channel and ping configuration"""
    
    @discord.ui.button(label="üìÇ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª", style=discord.ButtonStyle.green)
    async def set_channel(self, interaction: discord.Interaction, button: discord.ui.Button):
        modal = ChannelSelectionModal("dismissal")
        await interaction.response.send_modal(modal)
    
    @discord.ui.button(label="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–∏–Ω–≥", style=discord.ButtonStyle.secondary)
    async def add_ping(self, interaction: discord.Interaction, button: discord.ui.Button):
        from .ping_settings import AddPingSettingModal
        modal = AddPingSettingModal()
        await interaction.response.send_modal(modal)
    
    @discord.ui.button(label="‚ûñ –£–¥–∞–ª–∏—Ç—å –ø–∏–Ω–≥", style=discord.ButtonStyle.red)
    async def remove_ping(self, interaction: discord.Interaction, button: discord.ui.Button):
        config = load_config()
        ping_settings = config.get('ping_settings', {})
        
        if not ping_settings:
            await self.send_error_message(
                interaction,
                "–ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è",
                "–ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –ø–∏–Ω–≥–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è."
            )
            return
        
        from .ping_settings import RemovePingSettingModal
        modal = RemovePingSettingModal()
        await interaction.response.send_modal(modal)
    
    @discord.ui.button(label="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –ø–∏–Ω–≥–∏", style=discord.ButtonStyle.danger)
    async def clear_pings(self, interaction: discord.Interaction, button: discord.ui.Button):
        config = load_config()
        config['ping_settings'] = {}
        save_config(config)
        
        await self.send_success_message(
            interaction,
            "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏–Ω–≥–æ–≤ –æ—á–∏—â–µ–Ω—ã",
            "–í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏–Ω–≥–æ–≤ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã. –¢–µ–ø–µ—Ä—å –ø—Ä–∏ –ø–æ–¥–∞—á–µ —Ä–∞–ø–æ—Ä—Ç–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –Ω–µ –±—É–¥—É—Ç."
        )
