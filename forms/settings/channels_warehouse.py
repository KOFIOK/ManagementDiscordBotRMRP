"""
Warehouse channels configuration
"""
import discord
from discord import ui
from utils.config_manager import load_config, save_config
from .base import BaseSettingsView, BaseSettingsModal, ChannelParser, ConfigDisplayHelper


class WarehouseChannelsConfigView(BaseSettingsView):
    """View for warehouse channels configuration"""
    
    def __init__(self):
        super().__init__()
        
    @discord.ui.button(label="üì¶ –ö–∞–Ω–∞–ª –∑–∞–ø—Ä–æ—Å–æ–≤", style=discord.ButtonStyle.primary, emoji="üì¶")
    async def set_request_channel(self, interaction: discord.Interaction, button: discord.ui.Button):
        modal = WarehouseChannelSelectionModal("warehouse_request_channel", "üì¶ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–∫–ª–∞–¥–∞")
        await interaction.response.send_modal(modal)
    
    @discord.ui.button(label="üì§ –ö–∞–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–æ–∫", style=discord.ButtonStyle.primary, emoji="üì§")
    async def set_submission_channel(self, interaction: discord.Interaction, button: discord.ui.Button):
        modal = WarehouseChannelSelectionModal("warehouse_submission_channel", "üì§ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–æ–∫")
        await interaction.response.send_modal(modal)
        
    @discord.ui.button(label="üìä –ö–∞–Ω–∞–ª –∞—É–¥–∏—Ç–∞", style=discord.ButtonStyle.primary, emoji="üìä")
    async def set_audit_channel(self, interaction: discord.Interaction, button: discord.ui.Button):
        modal = WarehouseChannelSelectionModal("warehouse_audit_channel", "üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–∞ –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞")
        await interaction.response.send_modal(modal)


class WarehouseChannelSelectionModal(BaseSettingsModal):
    """Modal for setting warehouse channels"""
    
    def __init__(self, config_key: str, title: str):
        super().__init__(title=title)
        self.config_key = config_key
        
        self.channel_input = discord.ui.TextInput(
            label="–ö–∞–Ω–∞–ª",
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞, ID –∏–ª–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ (#–∫–∞–Ω–∞–ª)",
            min_length=1,
            max_length=100,
            required=True
        )
        self.add_item(self.channel_input)
    
    async def on_submit(self, interaction: discord.Interaction):
        try:
            channel_text = self.channel_input.value.strip()
            
            # Parse channel input
            channel = ChannelParser.parse_channel_input(channel_text, interaction.guild)
            
            if not channel:
                await self.send_error_message(
                    interaction,
                    "–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω",
                    f"–ö–∞–Ω–∞–ª '{channel_text}' –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ."
                )
                return
            
            if not isinstance(channel, discord.TextChannel):
                await self.send_error_message(
                    interaction,
                    "–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –∫–∞–Ω–∞–ª–∞",
                    "–ú–æ–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã."
                )
                return
              # Save configuration
            config = load_config()
            config[self.config_key] = channel.id
            save_config(config)
            
            channel_names = {
                "warehouse_request_channel": "–∑–∞–ø—Ä–æ—Å–æ–≤ —Å–∫–ª–∞–¥–∞",
                "warehouse_submission_channel": "–æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–æ–∫ —Å–∫–ª–∞–¥–∞",
                "warehouse_audit_channel": "–∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞"
            }
            
            channel_name = channel_names.get(self.config_key, self.config_key)
            
            success_message = f"–ö–∞–Ω–∞–ª {channel_name} —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ {channel.mention}!"
            
            # Special handling for different channel types
            if self.config_key == "warehouse_request_channel":
                try:
                    from utils.warehouse_utils import send_warehouse_message
                    await send_warehouse_message(channel)
                    success_message += "\n\n‚úÖ –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª."
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–∫–ª–∞–¥–∞: {e}")
                    success_message += "\n\n‚ö†Ô∏è –ö–∞–Ω–∞–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/warehouse_setup` –≤ –∫–∞–Ω–∞–ª–µ."
            elif self.config_key == "warehouse_submission_channel":
                success_message += "\n\nüì§ –í—Å–µ –∑–∞—è–≤–∫–∏ —Å–∫–ª–∞–¥–∞ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª!"
            
            await self.send_success_message(
                interaction,
                "–ö–∞–Ω–∞–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω",
                success_message
            )
            
        except Exception as e:
            await self.send_error_message(
                interaction,
                "–û—à–∏–±–∫–∞",
                f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∫–∞–Ω–∞–ª–∞: {str(e)}"
            )


async def show_warehouse_config(interaction: discord.Interaction):
    """Show warehouse channels configuration"""
    embed = discord.Embed(
        title="üì¶ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–æ–≤ —Å–∫–ª–∞–¥–∞",
        description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Å–∫–ª–∞–¥—Å–∫–æ–≥–æ –∏–º—É—â–µ—Å—Ç–≤–∞.",
        color=discord.Color.blue(),
        timestamp=discord.utils.utcnow()
    )
    
    config = load_config()
    helper = ConfigDisplayHelper()
    
    # Show current warehouse channels
    embed.add_field(
        name="üì¶ –ö–∞–Ω–∞–ª –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–∫–ª–∞–¥–∞",
        value=helper.format_channel_info(config, 'warehouse_request_channel', interaction.guild),
        inline=False
    )
    
    embed.add_field(
        name="üìä –ö–∞–Ω–∞–ª –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞", 
        value=helper.format_channel_info(config, 'warehouse_audit_channel', interaction.guild),
        inline=False
    )
    
    # Show current settings
    cooldown_hours = config.get('warehouse_cooldown_hours', 6)
    limits_mode = config.get('warehouse_limits_mode', {
        'positions_enabled': True,
        'ranks_enabled': False
    })
    
    limits_status = []
    if limits_mode.get('positions_enabled', True):
        limits_status.append("–ü–æ –¥–æ–ª–∂–Ω–æ—Å—Ç—è–º")
    if limits_mode.get('ranks_enabled', False):
        limits_status.append("–ü–æ –∑–≤–∞–Ω–∏—è–º")
    
    if not limits_status:
        limits_text = "–û—Ç–∫–ª—é—á–µ–Ω—ã"
    else:
        limits_text = " + ".join(limits_status)
    
    embed.add_field(
        name="‚öôÔ∏è –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
        value=f"**–ö—É–ª–¥–∞—É–Ω:** {cooldown_hours} —á–∞—Å–æ–≤\n**–õ–∏–º–∏—Ç—ã:** {limits_text}",
        inline=False
    )
    
    embed.add_field(
        name="‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:",
        value=(
            "1. **–ö–∞–Ω–∞–ª –∑–∞–ø—Ä–æ—Å–æ–≤** - –∫—É–¥–∞ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤—ã–¥–∞—á—É\n"
            "2. **–ö–∞–Ω–∞–ª –∞—É–¥–∏—Ç–∞** - –≥–¥–µ –±—É–¥—É—Ç –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤—Å–µ –≤—ã–¥–∞—á–∏\n"
            "3. –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∏–º–∏—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫–ª–∞–¥–∞**"
        ),
        inline=False
    )
    
    view = WarehouseChannelsConfigView()
    await interaction.response.send_message(embed=embed, view=view, ephemeral=True)
