"""
Excluded roles configuration forms and views
"""
import discord
from discord import ui
from utils.config_manager import load_config, save_config
from .base import BaseSettingsView, BaseSettingsModal, RoleParser


class ExcludedRolesView(BaseSettingsView):
    """View for managing excluded roles"""
    
    @discord.ui.button(label="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª–∏", style=discord.ButtonStyle.green)
    async def add_roles(self, interaction: discord.Interaction, button: discord.ui.Button):
        modal = AddExcludedRolesModal()
        await interaction.response.send_modal(modal)
    
    @discord.ui.button(label="‚ûñ –£–¥–∞–ª–∏—Ç—å —Ä–æ–ª–∏", style=discord.ButtonStyle.red)
    async def remove_roles(self, interaction: discord.Interaction, button: discord.ui.Button):
        config = load_config()
        excluded_roles_ids = config.get('excluded_roles', [])
        
        if not excluded_roles_ids:
            await self.send_error_message(
                interaction,
                "–ù–µ—Ç —Ä–æ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è",
                "–ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Ä–æ–ª–µ–π-–∏—Å–∫–ª—é—á–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è."
            )
            return
        
        modal = RemoveExcludedRolesModal()
        await interaction.response.send_modal(modal)
    
    @discord.ui.button(label="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ", style=discord.ButtonStyle.danger)
    async def clear_all_roles(self, interaction: discord.Interaction, button: discord.ui.Button):
        config = load_config()
        config['excluded_roles'] = []
        save_config(config)
        
        await self.send_success_message(
            interaction,
            "–°–ø–∏—Å–æ–∫ –æ—á–∏—â–µ–Ω",
            "–í—Å–µ —Ä–æ–ª–∏-–∏—Å–∫–ª—é—á–µ–Ω–∏—è –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã. –¢–µ–ø–µ—Ä—å –ø—Ä–∏ —É–≤–æ–ª—å–Ω–µ–Ω–∏–∏ –±—É–¥—É—Ç —Å–Ω–∏–º–∞—Ç—å—Å—è –≤—Å–µ —Ä–æ–ª–∏ –∫—Ä–æ–º–µ @everyone."
        )


class AddExcludedRolesModal(BaseSettingsModal):
    """Modal for adding excluded roles"""
    
    def __init__(self):
        super().__init__(title="–î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª–∏-–∏—Å–∫–ª—é—á–µ–Ω–∏—è")
        
        self.roles_input = ui.TextInput(
            label="–†–æ–ª–∏",
            placeholder="@–†–æ–ª—å1, @–†–æ–ª—å2, ID1, ID2 –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–æ–ª–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é",
            style=discord.TextStyle.paragraph,
            min_length=1,
            max_length=1000,
            required=True
        )
        self.add_item(self.roles_input)
    
    async def on_submit(self, interaction: discord.Interaction):
        try:
            roles_text = self.roles_input.value.strip()
            roles = RoleParser.parse_multiple_roles(roles_text, interaction.guild)
            
            if not roles:
                await self.send_error_message(
                    interaction,
                    "–†–æ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã",
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–æ–ª–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É: `{roles_text}`\n"
                    "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è, ID –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–æ–ª–µ–π."
                )
                return
            
            # Load current config and add new roles
            config = load_config()
            excluded_roles = set(config.get('excluded_roles', []))
            
            added_roles = []
            for role in roles:
                if role.id not in excluded_roles:
                    excluded_roles.add(role.id)
                    added_roles.append(role.mention)
            
            if not added_roles:
                await self.send_error_message(
                    interaction,
                    "–†–æ–ª–∏ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã",
                    "–í—Å–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Ä–æ–ª–∏ —É–∂–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π."
                )
                return
            
            # Save updated config
            config['excluded_roles'] = list(excluded_roles)
            save_config(config)
            
            await self.send_success_message(
                interaction,
                "–†–æ–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã",
                f"–î–æ–±–∞–≤–ª–µ–Ω—ã —Ä–æ–ª–∏-–∏—Å–∫–ª—é—á–µ–Ω–∏—è:\n{chr(10).join(added_roles)}\n\n"
                "–≠—Ç–∏ —Ä–æ–ª–∏ –Ω–µ –±—É–¥—É—Ç —Å–Ω–∏–º–∞—Ç—å—Å—è –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ —Ä–∞–ø–æ—Ä—Ç–∞ –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ."
            )
            
        except Exception as e:
            await self.send_error_message(
                interaction,
                "–û—à–∏–±–∫–∞",
                f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–æ–ª–µ–π: {str(e)}"
            )


class RemoveExcludedRolesModal(BaseSettingsModal):
    """Modal for removing excluded roles"""
    
    def __init__(self):
        super().__init__(title="–£–¥–∞–ª–∏—Ç—å —Ä–æ–ª–∏-–∏—Å–∫–ª—é—á–µ–Ω–∏—è")
        
        self.roles_input = ui.TextInput(
            label="–†–æ–ª–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è",
            placeholder="@–†–æ–ª—å1, @–†–æ–ª—å2, ID1, ID2 –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–æ–ª–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é",
            style=discord.TextStyle.paragraph,
            min_length=1,
            max_length=1000,
            required=True
        )
        self.add_item(self.roles_input)
    
    async def on_submit(self, interaction: discord.Interaction):
        try:
            roles_text = self.roles_input.value.strip()
            roles = RoleParser.parse_multiple_roles(roles_text, interaction.guild)
            
            if not roles:
                await self.send_error_message(
                    interaction,
                    "–†–æ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã",
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–æ–ª–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É: `{roles_text}`"
                )
                return
            
            # Load current config and remove roles
            config = load_config()
            excluded_roles = set(config.get('excluded_roles', []))
            
            removed_roles = []
            for role in roles:
                if role.id in excluded_roles:
                    excluded_roles.remove(role.id)
                    removed_roles.append(role.mention)
            
            if not removed_roles:
                await self.send_error_message(
                    interaction,
                    "–†–æ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Å–ø–∏—Å–∫–µ",
                    "–£–∫–∞–∑–∞–Ω–Ω—ã–µ —Ä–æ–ª–∏ –Ω–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π."
                )
                return
            
            # Save updated config
            config['excluded_roles'] = list(excluded_roles)
            save_config(config)
            
            await self.send_success_message(
                interaction,
                "–†–æ–ª–∏ —É–¥–∞–ª–µ–Ω—ã",
                f"–£–¥–∞–ª–µ–Ω—ã —Ä–æ–ª–∏-–∏—Å–∫–ª—é—á–µ–Ω–∏—è:\n{chr(10).join(removed_roles)}\n\n"
                "–¢–µ–ø–µ—Ä—å —ç—Ç–∏ —Ä–æ–ª–∏ –±—É–¥—É—Ç —Å–Ω–∏–º–∞—Ç—å—Å—è –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ —Ä–∞–ø–æ—Ä—Ç–∞ –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ."
            )
            
        except Exception as e:
            await self.send_error_message(
                interaction,
                "–û—à–∏–±–∫–∞",
                f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ä–æ–ª–µ–π: {str(e)}"
            )
