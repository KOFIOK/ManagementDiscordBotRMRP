"""
Main settings interface
"""
import discord
from discord import ui
from utils.config_manager import load_config
from .base import BaseSettingsView, ConfigDisplayHelper


class MainSettingsSelect(ui.Select):
    """Main settings dropdown menu"""
    
    def __init__(self):
        options = [
            discord.SelectOption(
                label="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–æ–≤",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –±–æ—Ç–∞",
                emoji="üìÇ",
                value="channels"
            ),
            discord.SelectOption(
                label="–†–æ–ª–∏-–∏—Å–∫–ª—é—á–µ–Ω–∏—è",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–æ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–Ω–∏–º–∞—é—Ç—Å—è –ø—Ä–∏ —É–≤–æ–ª—å–Ω–µ–Ω–∏–∏",
                emoji="üõ°Ô∏è",
                value="excluded_roles"
            ),
            discord.SelectOption(
                label="–ü–∏–Ω–≥–∏",
                description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∏–Ω–≥–∏ –¥–ª—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π –ø—Ä–∏ —Ä–∞–ø–æ—Ä—Ç–∞—Ö",
                emoji="üì¢",
                value="pings"
            ),
            discord.SelectOption(
                label="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
                description="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
                emoji="‚öôÔ∏è",
                value="show_config"
            )
        ]
        
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–∫...",
            min_values=1,
            max_values=1,
            options=options,
            custom_id="main_settings_select"
        )
    
    async def callback(self, interaction: discord.Interaction):
        selected_option = self.values[0]
        
        if selected_option == "channels":
            await self.show_channels_menu(interaction)
        elif selected_option == "show_config":
            await self.show_current_config(interaction)
        elif selected_option == "excluded_roles":
            await self.show_excluded_roles_config(interaction)
        elif selected_option == "pings":
            await self.show_pings_config(interaction)
    
    async def show_channels_menu(self, interaction: discord.Interaction):
        """Show submenu for channel configuration"""
        from .channels import ChannelsConfigView
        
        embed = discord.Embed(
            title="üìÇ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–æ–≤",
            description="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.",
            color=discord.Color.blue(),
            timestamp=discord.utils.utcnow()
        )
        
        embed.add_field(
            name="üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞–Ω–∞–ª—ã:",
            value=(
                "‚Ä¢ **–ö–∞–Ω–∞–ª —É–≤–æ–ª—å–Ω–µ–Ω–∏–π** - –¥–ª—è —Ä–∞–ø–æ—Ä—Ç–æ–≤ –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ\n"
                "‚Ä¢ **–ö–∞–Ω–∞–ª –∞—É–¥–∏—Ç–∞** - –¥–ª—è –∫–∞–¥—Ä–æ–≤–æ–≥–æ –∞—É–¥–∏—Ç–∞\n"
                "‚Ä¢ **–ö–∞–Ω–∞–ª —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞** - –¥–ª—è –∑–∞–ø–∏—Å–µ–π —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞\n"
                "‚Ä¢ **–ö–∞–Ω–∞–ª –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π** - –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–æ–µ–Ω–Ω–æ–π/–≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–π —Ä–æ–ª–∏"
            ),
            inline=False
        )
        
        embed.add_field(
            name="‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:",
            value="1. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–∞–Ω–∞–ª–∞ –∏–∑ —Å–ø–∏—Å–∫–∞\n2. –£–∫–∞–∂–∏—Ç–µ –∫–∞–Ω–∞–ª (ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ)\n3. –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç –∫–∞–Ω–∞–ª –∏ –¥–æ–±–∞–≤–∏—Ç –∫–Ω–æ–ø–∫–∏",
            inline=False
        )
        
        view = ChannelsConfigView()
        await interaction.response.send_message(embed=embed, view=view, ephemeral=True)
    
    async def show_current_config(self, interaction: discord.Interaction):
        """Show current configuration"""
        config = load_config()
        helper = ConfigDisplayHelper()
        
        embed = discord.Embed(
            title="‚öôÔ∏è –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
            color=discord.Color.blue(),
            timestamp=discord.utils.utcnow()
        )
        
        # Channel configurations
        embed.add_field(
            name="üìù –ö–∞–Ω–∞–ª —É–≤–æ–ª—å–Ω–µ–Ω–∏–π", 
            value=helper.format_channel_info(config, 'dismissal_channel', interaction.guild), 
            inline=False
        )
        embed.add_field(
            name="üîç –ö–∞–Ω–∞–ª –∞—É–¥–∏—Ç–∞", 
            value=helper.format_channel_info(config, 'audit_channel', interaction.guild), 
            inline=False
        )
        embed.add_field(
            name="üö´ –ö–∞–Ω–∞–ª —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞", 
            value=helper.format_channel_info(config, 'blacklist_channel', interaction.guild), 
            inline=False
        )
        embed.add_field(
            name="üéñÔ∏è –ö–∞–Ω–∞–ª –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π", 
            value=helper.format_channel_info(config, 'role_assignment_channel', interaction.guild), 
            inline=False
        )
        
        # Role configurations
        embed.add_field(
            name="üõ°Ô∏è –†–æ–ª–∏-–∏—Å–∫–ª—é—á–µ–Ω–∏—è", 
            value=helper.format_roles_list(config, 'excluded_roles', interaction.guild), 
            inline=False
        )
        embed.add_field(
            name="ü™ñ –†–æ–ª—å –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–≥–æ", 
            value=helper.format_role_info(config, 'military_role', interaction.guild), 
            inline=True
        )
        embed.add_field(
            name="üë§ –†–æ–ª—å –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–≥–æ", 
            value=helper.format_role_info(config, 'civilian_role', interaction.guild), 
            inline=True
        )
        embed.add_field(
            name="‚öîÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–µ–Ω–Ω—ã–µ —Ä–æ–ª–∏", 
            value=helper.format_roles_list(config, 'additional_military_roles', interaction.guild), 
            inline=False
        )
        embed.add_field(
            name="üì¢ Ping-—Ä–æ–ª—å –¥–ª—è –∑–∞—è–≤–æ–∫", 
            value=helper.format_role_info(config, 'role_assignment_ping_role', interaction.guild), 
            inline=False
        )
        
        # Ping settings
        ping_settings = config.get('ping_settings', {})
        if ping_settings:
            ping_text = ""
            for department_role_id, ping_roles_ids in ping_settings.items():
                department_role = interaction.guild.get_role(int(department_role_id))
                if department_role:
                    ping_roles = []
                    for ping_role_id in ping_roles_ids:
                        ping_role = interaction.guild.get_role(ping_role_id)
                        if ping_role:
                            ping_roles.append(ping_role.mention)
                    if ping_roles:
                        ping_text += f"‚Ä¢ {department_role.mention} ‚Üí {', '.join(ping_roles)}\n"
            ping_text = ping_text or "‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        else:
            ping_text = "‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
        
        embed.add_field(name="üì¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏–Ω–≥–æ–≤", value=ping_text, inline=False)
        
        await interaction.response.send_message(embed=embed, ephemeral=True)
    
    async def show_excluded_roles_config(self, interaction: discord.Interaction):
        """Show interface for managing excluded roles"""
        from .excluded_roles import ExcludedRolesView
        
        config = load_config()
        excluded_roles_ids = config.get('excluded_roles', [])
        
        embed = discord.Embed(
            title="üõ°Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏-–∏—Å–∫–ª—é—á–µ–Ω–∏—è–º–∏",
            description="–†–æ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –±—É–¥—É—Ç —Å–Ω–∏–º–∞—Ç—å—Å—è –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ —Ä–∞–ø–æ—Ä—Ç–∞ –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ.",
            color=discord.Color.blue(),
            timestamp=discord.utils.utcnow()
        )
        
        # Show current excluded roles
        if excluded_roles_ids:
            excluded_roles = []
            for role_id in excluded_roles_ids:
                role = interaction.guild.get_role(role_id)
                if role:
                    excluded_roles.append(f"‚Ä¢ {role.mention}")
                else:
                    excluded_roles.append(f"‚Ä¢ ‚ùå –†–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (ID: {role_id})")
            excluded_text = "\n".join(excluded_roles)
        else:
            excluded_text = "‚ùå –†–æ–ª–∏-–∏—Å–∫–ª—é—á–µ–Ω–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
        
        embed.add_field(name="–¢–µ–∫—É—â–∏–µ —Ä–æ–ª–∏-–∏—Å–∫–ª—é—á–µ–Ω–∏—è:", value=excluded_text, inline=False)
        
        embed.add_field(
            name="‚ÑπÔ∏è –î–µ–π—Å—Ç–≤–∏—è:",
            value=(
                "‚Ä¢ **–î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª–∏** - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —Ä–æ–ª–∏ –≤ —Å–ø–∏—Å–æ–∫ –∏—Å–∫–ª—é—á–µ–Ω–∏–π\n"
                "‚Ä¢ **–£–¥–∞–ª–∏—Ç—å —Ä–æ–ª–∏** - —É–±—Ä–∞—Ç—å —Ä–æ–ª–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π\n"
                "‚Ä¢ **–û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫** - —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ä–æ–ª–∏-–∏—Å–∫–ª—é—á–µ–Ω–∏—è"
            ),
            inline=False
        )
        
        view = ExcludedRolesView()
        await interaction.response.send_message(embed=embed, view=view, ephemeral=True)
    
    async def show_pings_config(self, interaction: discord.Interaction):
        """Show interface for managing ping settings for departments"""
        from .ping_settings import PingSettingsView
        
        config = load_config()
        ping_settings = config.get('ping_settings', {})
        
        embed = discord.Embed(
            title="üì¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∏–Ω–≥–∞–º–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π",
            description="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–π –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–∏ –ø–æ–¥–∞—á–µ —Ä–∞–ø–æ—Ä—Ç–æ–≤ –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –ø–æ–¥–∞—é—â–µ–≥–æ.",
            color=discord.Color.blue(),
            timestamp=discord.utils.utcnow()
        )
        
        # Show current ping settings
        if ping_settings:
            ping_text = ""
            for department_role_id, ping_roles_ids in ping_settings.items():
                department_role = interaction.guild.get_role(int(department_role_id))
                if department_role:
                    ping_roles = []
                    for ping_role_id in ping_roles_ids:
                        ping_role = interaction.guild.get_role(ping_role_id)
                        if ping_role:
                            ping_roles.append(ping_role.mention)
                    if ping_roles:
                        ping_text += f"‚Ä¢ {department_role.mention} ‚Üí {', '.join(ping_roles)}\n"
            ping_text = ping_text or "‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏–Ω–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        else:
            ping_text = "‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏–Ω–≥–æ–≤ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
        
        embed.add_field(name="–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏–Ω–≥–æ–≤:", value=ping_text, inline=False)
        
        embed.add_field(
            name="‚ÑπÔ∏è –ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã:",
            value=(
                "–ü—Ä–∏ –ø–æ–¥–∞—á–µ —Ä–∞–ø–æ—Ä—Ç–∞ –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ –±–æ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç —Ä–æ–ª—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —É –ø–æ–¥–∞—é—â–µ–≥–æ "
                "–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω–Ω—ã–º –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Ä–æ–ª—è–º."
            ),
            inline=False
        )
        
        embed.add_field(
            name="üéØ –î–µ–π—Å—Ç–≤–∏—è:",
            value=(
                "‚Ä¢ **–î–æ–±–∞–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É** - —Å–≤—è–∑–∞—Ç—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å —Ä–æ–ª—è–º–∏ –¥–ª—è –ø–∏–Ω–≥–∞\n"
                "‚Ä¢ **–£–¥–∞–ª–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É** - —É–±—Ä–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –¥–ª—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è\n"
                "‚Ä¢ **–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ** - —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏–Ω–≥–æ–≤"
            ),
            inline=False
        )
        
        view = PingSettingsView()
        await interaction.response.send_message(embed=embed, view=view, ephemeral=True)


class SettingsView(BaseSettingsView):
    """Main settings view with persistent functionality"""
    
    def __init__(self):
        super().__init__(timeout=None)  # Persistent view
        self.add_item(MainSettingsSelect())
    
    async def on_timeout(self):
        # This won't be called for persistent views, but good to have
        for item in self.children:
            item.disabled = True


async def send_settings_message(interaction: discord.Interaction):
    """Send the main settings interface"""
    embed = discord.Embed(
        title="‚öôÔ∏è –ü–∞–Ω–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞",
        description="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–æ—Ç–∞! –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã.",
        color=discord.Color.blue(),
        timestamp=discord.utils.utcnow()
    )
    
    embed.add_field(
        name="üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:",
        value=(
            "‚Ä¢ **üìÇ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–æ–≤** - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–∏—Å—Ç–µ–º\n"
            "‚Ä¢ **üõ°Ô∏è –†–æ–ª–∏-–∏—Å–∫–ª—é—á–µ–Ω–∏—è** - —Ä–æ–ª–∏, –Ω–µ —Å–Ω–∏–º–∞–µ–º—ã–µ –ø—Ä–∏ —É–≤–æ–ª—å–Ω–µ–Ω–∏–∏\n"
            "‚Ä¢ **üì¢ –ü–∏–Ω–≥–∏** - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π\n"
            "‚Ä¢ **‚öôÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏** - –ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"
        ),
        inline=False
    )
    
    embed.add_field(
        name="‚ÑπÔ∏è –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:",
        value="1. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é\n2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–¥–º–µ–Ω—é –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤\n3. –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è",
        inline=False
    )
    
    embed.set_footer(text="–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º")
    
    view = SettingsView()
    await interaction.response.send_message(embed=embed, view=view, ephemeral=True)
