"""
Ping settings configuration forms and views
"""
import discord
from discord import ui
from utils.config_manager import load_config, save_config
from .base import BaseSettingsView, BaseSettingsModal, RoleParser


class PingSettingsView(BaseSettingsView):
    """View for managing ping settings"""
    
    @discord.ui.button(label="‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É", style=discord.ButtonStyle.green)
    async def add_ping_setting(self, interaction: discord.Interaction, button: discord.ui.Button):
        modal = AddPingSettingModal()
        await interaction.response.send_modal(modal)
    
    @discord.ui.button(label="‚ûñ –£–¥–∞–ª–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É", style=discord.ButtonStyle.red)
    async def remove_ping_setting(self, interaction: discord.Interaction, button: discord.ui.Button):
        config = load_config()
        ping_settings = config.get('ping_settings', {})
        
        if not ping_settings:
            await self.send_error_message(
                interaction,
                "–ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è",
                "–ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –ø–∏–Ω–≥–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è."
            )
            return
        
        modal = RemovePingSettingModal()
        await interaction.response.send_modal(modal)
    
    @discord.ui.button(label="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ", style=discord.ButtonStyle.danger)
    async def clear_all_pings(self, interaction: discord.Interaction, button: discord.ui.Button):
        config = load_config()
        config['ping_settings'] = {}
        save_config(config)
        
        await self.send_success_message(
            interaction,
            "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏–Ω–≥–æ–≤ –æ—á–∏—â–µ–Ω—ã",
            "–í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏–Ω–≥–æ–≤ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã. –¢–µ–ø–µ—Ä—å –ø—Ä–∏ –ø–æ–¥–∞—á–µ —Ä–∞–ø–æ—Ä—Ç–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –Ω–µ –±—É–¥—É—Ç."
        )


class AddPingSettingModal(BaseSettingsModal):
    """Modal for adding ping settings"""
    
    def __init__(self):
        super().__init__(title="–î–æ–±–∞–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø–∏–Ω–≥–æ–≤")
        
        self.department_role_input = ui.TextInput(
            label="–†–æ–ª—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è",
            placeholder="@–í–æ–µ–Ω–Ω–∞—è –ø–æ–ª–∏—Ü–∏—è, ID —Ä–æ–ª–∏ –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏",
            min_length=1,
            max_length=100,
            required=True
        )
        self.add_item(self.department_role_input)
        
        self.ping_roles_input = ui.TextInput(
            label="–†–æ–ª–∏ –¥–ª—è –ø–∏–Ω–≥–∞",
            placeholder="@–ö–æ–º–∞–Ω–¥–∏—Ä –í–ü, @–ó–∞–º –∫–æ–º–∞–Ω–¥–∏—Ä–∞, ID1, ID2 —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é",
            style=discord.TextStyle.paragraph,
            min_length=1,
            max_length=1000,
            required=True
        )
        self.add_item(self.ping_roles_input)
    
    async def on_submit(self, interaction: discord.Interaction):
        try:
            # Parse department role
            department_role = RoleParser.parse_role_input(
                self.department_role_input.value.strip(), 
                interaction.guild
            )
            
            if not department_role:
                await self.send_error_message(
                    interaction,
                    "–†–æ–ª—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–æ–ª—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è: `{self.department_role_input.value}`"
                )
                return
            
            # Parse ping roles
            ping_roles = RoleParser.parse_multiple_roles(
                self.ping_roles_input.value.strip(), 
                interaction.guild
            )
            
            if not ping_roles:
                await self.send_error_message(
                    interaction,
                    "–†–æ–ª–∏ –¥–ª—è –ø–∏–Ω–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã",
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–æ–ª–∏ –¥–ª—è –ø–∏–Ω–≥–∞: `{self.ping_roles_input.value}`"
                )
                return
            
            # Save to config
            config = load_config()
            ping_settings = config.get('ping_settings', {})
            ping_settings[str(department_role.id)] = [role.id for role in ping_roles]
            config['ping_settings'] = ping_settings
            save_config(config)
            
            ping_roles_mentions = [role.mention for role in ping_roles]
            await self.send_success_message(
                interaction,
                "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∏–Ω–≥–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–∞",
                f"–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞:\n"
                f"**–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ:** {department_role.mention}\n"
                f"**–†–æ–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:** {', '.join(ping_roles_mentions)}\n\n"
                f"–¢–µ–ø–µ—Ä—å –ø—Ä–∏ –ø–æ–¥–∞—á–µ —Ä–∞–ø–æ—Ä—Ç–∞ –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º {department_role.mention} "
                f"–±—É–¥—É—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω—ã —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Ä–æ–ª–∏."
            )
            
        except Exception as e:
            await self.send_error_message(
                interaction,
                "–û—à–∏–±–∫–∞",
                f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {str(e)}"
            )


class RemovePingSettingModal(BaseSettingsModal):
    """Modal for removing ping settings"""
    
    def __init__(self):
        super().__init__(title="–£–¥–∞–ª–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø–∏–Ω–≥–æ–≤")
        
        self.department_role_input = ui.TextInput(
            label="–†–æ–ª—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è",
            placeholder="@–í–æ–µ–Ω–Ω–∞—è –ø–æ–ª–∏—Ü–∏—è, ID —Ä–æ–ª–∏ –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏",
            min_length=1,
            max_length=100,
            required=True
        )
        self.add_item(self.department_role_input)
    
    async def on_submit(self, interaction: discord.Interaction):
        try:
            # Parse department role
            department_role = RoleParser.parse_role_input(
                self.department_role_input.value.strip(), 
                interaction.guild
            )
            
            if not department_role:
                await self.send_error_message(
                    interaction,
                    "–†–æ–ª—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–æ–ª—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è: `{self.department_role_input.value}`"
                )
                return
            
            # Remove from config
            config = load_config()
            ping_settings = config.get('ping_settings', {})
            
            if str(department_role.id) not in ping_settings:
                await self.send_error_message(
                    interaction,
                    "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
                    f"–î–ª—è —Ä–æ–ª–∏ {department_role.mention} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–∏–Ω–≥–æ–≤."
                )
                return
            
            del ping_settings[str(department_role.id)]
            config['ping_settings'] = ping_settings
            save_config(config)
            
            await self.send_success_message(
                interaction,
                "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∏–Ω–≥–æ–≤ —É–¥–∞–ª–µ–Ω–∞",
                f"–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∏–Ω–≥–æ–≤ –¥–ª—è —Ä–æ–ª–∏ {department_role.mention} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞."
            )
            
        except Exception as e:
            await self.send_error_message(
                interaction,
                "–û—à–∏–±–∫–∞",
                f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {str(e)}"
            )
