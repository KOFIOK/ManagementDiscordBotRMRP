"""
Role configuration forms and views
"""
import discord
from discord import ui
from utils.config_manager import load_config, save_config
from .base import BaseSettingsView, BaseSettingsModal, RoleParser


class RolesConfigView(BaseSettingsView):
    """View for role configuration"""
    
    @discord.ui.button(label="ü™ñ –†–æ–ª–∏ –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏—Ö", style=discord.ButtonStyle.green, custom_id="set_military_roles")
    async def set_military_roles(self, interaction: discord.Interaction, button: discord.ui.Button):
        modal = SetMultipleRolesModal("military_roles", "ü™ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–π –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏—Ö", "–£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª–∏ –¥–ª—è –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏—Ö (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)")
        await interaction.response.send_modal(modal)
    
    @discord.ui.button(label="üë§ –†–æ–ª–∏ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏—Ö", style=discord.ButtonStyle.secondary, custom_id="set_civilian_roles")
    async def set_civilian_roles(self, interaction: discord.Interaction, button: discord.ui.Button):
        modal = SetMultipleRolesModal("civilian_roles", "üë§ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–π –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏—Ö", "–£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª–∏ –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏—Ö (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)")
        await interaction.response.send_mal(modal)
    
    @discord.ui.button(label="üì¢ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å ping-—Ä–æ–ª–∏", style=discord.ButtonStyle.primary, custom_id="configure_ping_roles")
    async def configure_ping_roles(self, interaction: discord.Interaction, button: discord.ui.Button):
        from .channels import RolePingConfigView
        view = RolePingConfigView()
        await view.show_ping_config(interaction)


class SetRoleModal(BaseSettingsModal):
    """Modal for setting a single role"""
    
    def __init__(self, config_key: str, title: str, description: str):
        super().__init__(title=title)
        self.config_key = config_key
        
        self.role_input = ui.TextInput(
            label="–†–æ–ª—å",
            placeholder="@–†–æ–ª—å, ID —Ä–æ–ª–∏ –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏",
            min_length=1,
            max_length=100,
            required=True
        )
        self.add_item(self.role_input)
    
    async def on_submit(self, interaction: discord.Interaction):
        try:
            role = RoleParser.parse_role_input(self.role_input.value.strip(), interaction.guild)
            
            if not role:
                await self.send_error_message(
                    interaction,
                    "–†–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–æ–ª—å: `{self.role_input.value}`\n"
                    "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, ID –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏."
                )
                return
            
            # Save to config
            config = load_config()
            config[self.config_key] = role.id
            save_config(config)
              # Create user-friendly messages
            role_names = {
                "role_assignment_ping_role": "–¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∑–∞—è–≤–∫–∞—Ö"
            }
            
            role_name = role_names.get(self.config_key, self.config_key)
            
            await self.send_success_message(
                interaction,
                "–†–æ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞",
                f"–†–æ–ª—å {role_name} —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–∞ {role.mention}!"
            )
            
        except Exception as e:
            await self.send_error_message(
                interaction,
                "–û—à–∏–±–∫–∞",
                f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Ä–æ–ª–∏: {str(e)}"
            )


class SetMultipleRolesModal(BaseSettingsModal):
    """Modal for setting multiple roles"""
    
    def __init__(self, config_key: str, title: str, description: str):
        super().__init__(title=title)
        self.config_key = config_key
        
        self.roles_input = ui.TextInput(
            label="–†–æ–ª–∏",
            placeholder="@–†–æ–ª—å1, @–†–æ–ª—å2, ID1, ID2 –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–æ–ª–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é",
            style=discord.TextStyle.paragraph,
            min_length=1,
            max_length=1000,
            required=True
        )
        self.add_item(self.roles_input)
    
    async def on_submit(self, interaction: discord.Interaction):
        try:
            roles = RoleParser.parse_multiple_roles(self.roles_input.value.strip(), interaction.guild)
            
            if not roles:
                await self.send_error_message(
                    interaction,
                    "–†–æ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã",
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–æ–ª–∏: `{self.roles_input.value}`\n"
                    "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è, ID –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–æ–ª–µ–π."
                )
                return
            
            # Save to config
            config = load_config()
            config[self.config_key] = [role.id for role in roles]
            save_config(config)            # Create user-friendly messages
            roles_names = {
                "military_roles": "—Ä–æ–ª–∏ –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏—Ö",
                "civilian_roles": "—Ä–æ–ª–∏ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏—Ö",
                "military_role_assignment_ping_roles": "–ø–∏–Ω–≥-—Ä–æ–ª–∏ –¥–ª—è –≤–æ–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫",
                "civilian_role_assignment_ping_roles": "–ø–∏–Ω–≥-—Ä–æ–ª–∏ –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏—Ö –∑–∞—è–≤–æ–∫"
            }
            
            roles_name = roles_names.get(self.config_key, self.config_key)
            roles_mentions = [role.mention for role in roles]
            
            await self.send_success_message(
                interaction,
                "–†–æ–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã",
                f"–£—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã {roles_name}:\n{chr(10).join(roles_mentions)}"
            )
            
        except Exception as e:
            await self.send_error_message(
                interaction,
                "–û—à–∏–±–∫–∞",
                f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Ä–æ–ª–µ–π: {str(e)}"
            )
