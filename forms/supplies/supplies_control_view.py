import discord
from utils.config_manager import load_config
from datetime import datetime


class SuppliesControlView(discord.ui.View):
    """–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–æ–µ–Ω–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏"""
    
    def __init__(self):
        super().__init__(timeout=None)
        self._create_dynamic_buttons()
        
    def _create_dynamic_buttons(self):
        """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
        try:
            from .supplies_manager import SuppliesManager
            supplies_manager = SuppliesManager()
            categories = supplies_manager.get_categories()
            
            row = 0
            for category_key, category_objects in categories.items():
                if not category_objects:  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                    continue
                    
                for object_key, object_info in category_objects.items():
                    button = discord.ui.Button(
                        label=object_info["name"],
                        emoji=object_info["emoji"],
                        style=discord.ButtonStyle.primary,
                        custom_id=f"supplies_{object_key}",
                        row=row
                    )
                    button.callback = self._create_button_callback(object_key, object_info["name"], object_info["emoji"])
                    self.add_item(button)
                
                row += 1  # –ö–∞–∂–¥–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤ –Ω–æ–≤–æ–º —Ä—è–¥—É
                
            self._update_button_states()
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –∫–Ω–æ–ø–æ–∫: {e}")
    
    def _create_button_callback(self, object_key: str, object_name: str, emoji: str):
        """–°–æ–∑–¥–∞–µ—Ç callback —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∫–Ω–æ–ø–∫–∏"""
        async def button_callback(interaction: discord.Interaction):
            await self._handle_object_button(interaction, object_key, object_name, emoji)
        return button_callback
        
    def _update_button_states(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∞–π–º–µ—Ä–æ–≤"""
        try:
            from .supplies_manager import SuppliesManager
            supplies_manager = SuppliesManager()
            active_timers = supplies_manager.get_active_timers()
            
            print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫. –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∞–π–º–µ—Ä–æ–≤: {len(active_timers)}")
            if active_timers:
                print(f"   –ê–∫—Ç–∏–≤–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã: {list(active_timers.keys())}")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏
            for item in self.children:
                if isinstance(item, discord.ui.Button) and item.custom_id and item.custom_id.startswith("supplies_"):
                    object_key = item.custom_id.replace("supplies_", "")
                    
                    is_active = object_key in active_timers
                    item.disabled = is_active
                    item.style = discord.ButtonStyle.secondary if is_active else discord.ButtonStyle.primary
                    print(f"   {object_key}: {'–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' if is_active else '–¥–æ—Å—Ç—É–ø–µ–Ω'}")
                    
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫: {e}")
        
    async def _handle_object_button(self, interaction: discord.Interaction, object_key: str, object_name: str, emoji: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –æ–±—ä–µ–∫—Ç–∞"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (–º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã/–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∏–ª–∏ Discord-–∞–¥–º–∏–Ω—ã)
            config = load_config()
            moderator_role_ids = config.get('moderators', {}).get('roles', [])
            administrator_role_ids = config.get('administrators', {}).get('roles', [])
            
            user_role_ids = [role.id for role in interaction.user.roles]
            is_bot_moderator_or_admin = any(role_id in user_role_ids for role_id in moderator_role_ids + administrator_role_ids)
            is_discord_admin = interaction.user.guild_permissions.administrator
            
            if not (is_bot_moderator_or_admin or is_discord_admin):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤–∫–∞–º–∏.", 
                    ephemeral=True
                )
                return
            
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ—Å—Ç–∞–≤–æ–∫
            from .supplies_manager import SuppliesManager
            
            supplies_manager = SuppliesManager(interaction.client)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω—ã–π —Ç–∞–π–º–µ—Ä
            if supplies_manager.is_timer_active(object_key):
                remaining_time = supplies_manager.get_remaining_time(object_key)
                await interaction.response.send_message(
                    f"‚è∞ {emoji} **{object_name}** —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–æ—Å—Ç–∞–≤–∫–∏.\n"
                    f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏: **{remaining_time}**",
                    ephemeral=True
                )
                return
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä
            success = await supplies_manager.start_timer(object_key, interaction.user)
            
            if success:
                # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∞–π–º–µ—Ä–∞
                timer_duration_minutes = config.get('supplies', {}).get('timer_duration_minutes', 
                                                   config.get('supplies', {}).get('timer_duration_hours', 4) * 60)
                
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                hours = timer_duration_minutes // 60
                remaining_minutes = timer_duration_minutes % 60
                
                if hours > 0 and remaining_minutes > 0:
                    time_display = f"{hours}—á {remaining_minutes}–º"
                elif hours > 0:
                    time_display = f"{hours}—á"
                else:
                    time_display = f"{remaining_minutes}–º"
                
                await interaction.response.send_message(
                    f"‚úÖ {emoji} **{object_name}** - –ø–æ—Å—Ç–∞–≤–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞!\n"
                    f"‚è∞ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: **{time_display}**\n"
                    f"üë§ –ó–∞–ø—É—Å—Ç–∏–ª: {interaction.user.mention}",
                    ephemeral=True
                )
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
                self._update_button_states()
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–∞–π–º–µ—Ä–∞—Ö
                await self._update_timer_info(interaction.message)
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –æ–ø–æ–≤–µ—â–µ–Ω–∏–π
                await self._send_start_notification(object_key, object_name, emoji, interaction.user)
                
                # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ (–¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è)
                await self._notify_scheduler_update()
            else:
                await interaction.response.send_message(
                    f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è {object_name}",
                    ephemeral=True
                )
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–Ω–æ–ø–∫–∏ –ø–æ—Å—Ç–∞–≤–æ–∫: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.",
                ephemeral=True
            )
    
    async def _update_timer_info(self, message: discord.Message):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞–π–º–µ—Ä–∞—Ö –≤–æ –≤—Ç–æ—Ä–æ–º embed"""
        try:
            from .supplies_manager import SuppliesManager
            
            supplies_manager = SuppliesManager()
            active_timers = supplies_manager.get_active_timers()
            
            # –°–æ–∑–¥–∞–µ–º embed —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–∞–π–º–µ—Ä–∞—Ö
            timer_embed = discord.Embed(
                title="üìä –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ—Å—Ç–∞–≤–∫–∏",
                color=discord.Color.blue(),
                timestamp=datetime.now()
            )
            
            if not active_timers:
                timer_embed.description = "üü¢ –í—Å–µ –æ–±—ä–µ–∫—Ç—ã –≥–æ—Ç–æ–≤—ã –∫ –ø–æ—Å—Ç–∞–≤–∫–µ"
            else:
                for object_key, timer_info in active_timers.items():
                    object_name = timer_info.get('object_name', object_key)
                    emoji = timer_info.get('emoji', 'üì¶')
                    started_by = timer_info.get('started_by_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                    remaining = supplies_manager.get_remaining_time(object_key)
                    
                    timer_embed.add_field(
                        name=f"{emoji} {object_name}",
                        value=f"‚è∞ –û—Å—Ç–∞–ª–æ—Å—å: **{remaining}**\nüë§ –ó–∞–ø—É—Å—Ç–∏–ª: {started_by}",
                        inline=True
                    )
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ (–¥–æ–±–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–π embed –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π)
            embeds = list(message.embeds) if message.embeds else []
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω embed (–æ—Å–Ω–æ–≤–Ω–æ–π), –¥–æ–±–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–π
            if len(embeds) == 1:
                embeds.append(timer_embed)
            elif len(embeds) >= 2:
                # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–π embed
                embeds[1] = timer_embed
            else:
                # –ï—Å–ª–∏ –Ω–µ—Ç embeds, —Å–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–∞–π–º–µ—Ä—ã
                main_embed = discord.Embed(
                    title="üöö –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤–∫–∞–º–∏",
                    description="–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ—Å—Ç–∞–≤–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤",
                    color=discord.Color.green()
                )
                embeds = [main_embed, timer_embed]
            
            await message.edit(embeds=embeds, view=self)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–∞–π–º–µ—Ä–∞—Ö: {e}")
    
    async def _send_start_notification(self, object_key: str, object_name: str, emoji: str, user):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –ø–æ—Å—Ç–∞–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª –æ–ø–æ–≤–µ—â–µ–Ω–∏–π"""
        try:
            config = load_config()
            notification_channel_id = config.get('supplies', {}).get('notification_channel_id')
            
            if not notification_channel_id:
                print("‚ö†Ô∏è –ö–∞–Ω–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                return
            
            # –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª
            channel = user.guild.get_channel(notification_channel_id)
            if not channel:
                print(f"‚ùå –ö–∞–Ω–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω: {notification_channel_id}")
                return
            
            # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
            timer_duration_minutes = config.get('supplies', {}).get('timer_duration_minutes', 
                                               config.get('supplies', {}).get('timer_duration_hours', 4) * 60)
            warning_minutes = config.get('supplies', {}).get('warning_minutes', 20)
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –≤–º–µ—Å—Ç–æ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            from .supplies_manager import SuppliesManager
            supplies_manager = SuppliesManager()
            duration_display = supplies_manager.get_remaining_time(object_key)
            
            # –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –¥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
            warning_time_minutes = timer_duration_minutes - warning_minutes
            warning_hours = warning_time_minutes // 60
            warning_mins = warning_time_minutes % 60
            
            if warning_hours > 0 and warning_mins > 0:
                warning_display = f"{warning_hours}—á {warning_mins}–º"
            elif warning_hours > 0:
                warning_display = f"{warning_hours}—á"
            else:
                warning_display = f"{warning_mins}–º"
            
            # –°–æ–∑–¥–∞–µ–º embed
            embed = discord.Embed(
                title=f"{emoji} –ü–æ—Å—Ç–∞–≤–∫–∞ **{object_name}** –∑–∞–ø—É—â–µ–Ω–∞",
                description="",
                color=discord.Color.blue(),
                timestamp=datetime.now()
            )
            
            embed.add_field(
                name=f"‚è∞ –ë—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ —á–µ—Ä–µ–∑: **{duration_display}**",
                value="",
                inline=False
            )
            
            embed.add_field(
                name="üë§ –ó–∞–ø—É—Å—Ç–∏–ª",
                value=user.mention,
                inline=True
            )
            
            embed.set_footer(text="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –¥–æ –∫–æ–Ω—Ü–∞ —Ç–∞–π–º–µ—Ä–∞")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ë–ï–ó –ø–∏–Ω–≥–∞ —Ä–æ–ª–∏
            message = await channel.send(embed=embed)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
            await supplies_manager.save_notification_message(object_key, message.id, 'start')
            
            print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –ø–æ—Å—Ç–∞–≤–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è {object_name}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–∞—á–∞–ª–µ –ø–æ—Å—Ç–∞–≤–∫–∏: {e}")
    
    async def _notify_scheduler_update(self):
        """–£–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"""
        try:
            from utils.supplies_scheduler import get_supplies_scheduler
            scheduler = get_supplies_scheduler()
            if scheduler:
                # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–π–º–µ—Ä—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
                await scheduler._check_timers()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: {e}")


async def send_supplies_control_message(channel: discord.TextChannel):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤–∫–∞–º–∏"""
    try:
        # –û—Å–Ω–æ–≤–Ω–æ–π embed
        main_embed = discord.Embed(
            title="üöö –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤–∫–∞–º–∏",
            description=(
                "**–í–æ–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –¥–ª—è –ø–æ—Å—Ç–∞–≤–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤**\n\n"
                "‚ö†Ô∏è *–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –æ—Ç –ö–∞–ø–∏—Ç–∞–Ω–∞*"
            ),
            color=discord.Color.green()
        )
        main_embed.set_footer(text="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–∞–π–º–µ—Ä–∞")
        
        # Embed —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–∞–π–º–µ—Ä–∞—Ö
        from .supplies_manager import SuppliesManager
        supplies_manager = SuppliesManager()
        active_timers = supplies_manager.get_active_timers()
        
        timer_embed = discord.Embed(
            title="üìä –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ—Å—Ç–∞–≤–∫–∏",
            color=discord.Color.blue(),
            timestamp=datetime.now()
        )
        
        if not active_timers:
            timer_embed.description = "üü¢ –í—Å–µ –æ–±—ä–µ–∫—Ç—ã –≥–æ—Ç–æ–≤—ã –∫ –ø–æ—Å—Ç–∞–≤–∫–µ"
        else:
            for object_key, timer_info in active_timers.items():
                object_name = timer_info.get('object_name', object_key)
                emoji = timer_info.get('emoji', 'üì¶')
                started_by = timer_info.get('started_by_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                remaining = supplies_manager.get_remaining_time(object_key)
                
                timer_embed.add_field(
                    name=f"{emoji} {object_name}",
                    value=f"‚è∞ –û—Å—Ç–∞–ª–æ—Å—å: **{remaining}**\nüë§ –ó–∞–ø—É—Å—Ç–∏–ª: {started_by}",
                    inline=True
                )
        
        view = SuppliesControlView()
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è
        view._update_button_states()
        message = await channel.send(embeds=[main_embed, timer_embed], view=view)
        return message
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤–∫–∞–º–∏: {e}")
        return None
