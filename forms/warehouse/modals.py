"""
–ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Å–∫–ª–∞–¥–∞
–í–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —Ñ–æ—Ä–º—ã –∑–∞–ø—Ä–æ—Å–æ–≤, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
"""

import re
import discord
from datetime import datetime
from utils.warehouse_manager import WarehouseManager
from .cart import (
    WarehouseRequestItem, WarehouseRequestCart, get_user_cart, 
    clear_user_cart_safe, get_user_cart_message, set_user_cart_message
)


class WarehouseRequestModal(discord.ui.Modal):
    """–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Å–∫–ª–∞–¥–∞"""
    
    def __init__(self, category: str, item_name: str, warehouse_manager: WarehouseManager, user_data=None):
        super().__init__(title=f"–ó–∞–ø—Ä–æ—Å: {item_name}")
        self.category = category
        self.item_name = item_name
        self.warehouse_manager = warehouse_manager
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ü–û–õ–ù–´–ï –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ on_submit
        self.user_data = user_data or {}
        
        # Pre-fill name and static if user data is available
        name_value = ""
        static_value = ""
        name_placeholder = "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é"
        static_placeholder = "–ù–∞–ø—Ä–∏–º–µ—Ä: 123-456"
        
        if user_data:
            name_value = user_data.get('full_name', '')
            static_value = user_data.get('static', '')
            if name_value:
                name_placeholder = f"–î–∞–Ω–Ω—ã–µ –∏–∑ —Ä–µ–µ—Å—Ç—Ä–∞: {name_value}"
            if static_value:
                static_placeholder = f"–î–∞–Ω–Ω—ã–µ –∏–∑ —Ä–µ–µ—Å—Ç—Ä–∞: {static_value}"
        
        # –ü–æ–ª—è —Ñ–æ—Ä–º—ã
        self.name_input = discord.ui.TextInput(
            label="–ò–º—è –§–∞–º–∏–ª–∏—è",
            placeholder=name_placeholder,
            default=name_value,
            min_length=3,
            max_length=50,
            required=True
        )
        
        self.static_input = discord.ui.TextInput(
            label="–°—Ç–∞—Ç–∏–∫",
            placeholder=static_placeholder,
            default=static_value,
            min_length=5,
            max_length=10,
            required=True
        )
        
        self.quantity_input = discord.ui.TextInput(
            label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ",
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤",
            min_length=1,
            max_length=10,
            required=True
        )
        
        self.add_item(self.name_input)
        self.add_item(self.static_input)
        self.add_item(self.quantity_input)

    @classmethod
    async def create_with_user_data(cls, category: str, item_name: str, warehouse_manager: WarehouseManager, user_id: int):
        """
        Create WarehouseRequestModal with auto-filled user data from database
        
        üéØ –ò–°–¢–û–ß–ù–ò–ö –î–ê–ù–ù–´–•: PostgreSQL —á–µ—Ä–µ–∑ utils.user_cache.get_cached_user_info()
        –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–∞—é—Ç—Å—è –∏–∑ —Ç–∞–±–ª–∏—Ü: personnel ‚Üí employees ‚Üí ranks/subdivisions/positions
        –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –Ω–æ –¥–∞–Ω–Ω—ã–µ –≤—Å–µ–≥–¥–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∏–∑ –ë–î
        """
        try:
            # üîó –ß–µ—Ç–∫–∏–π –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö: PostgreSQL —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
            from utils.user_cache import get_cached_user_info
            user_data = await get_cached_user_info(user_id)
            return cls(category, item_name, warehouse_manager, user_data=user_data)
        except Exception as e:
            print(f"‚ùå Error loading user data for warehouse modal: {e}")
            # Fallback to empty modal
            return cls(category, item_name, warehouse_manager)

    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É"""
        try:
            # –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ç–∞–π–º–∞—É—Ç–∞
            await interaction.response.defer(ephemeral=True)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–≤–æ–µ –ª–∏ —ç—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
            cart = get_user_cart(interaction.user.id)
            is_first_item = cart.is_empty()
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–ù–ï —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º original_response —Å –∫–Ω–æ–ø–∫–∞–º–∏!)
            if is_first_item:
                # –î–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ - —Å–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã..."
                loading_embed = discord.Embed(
                    title="üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã...",
                    description="–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∞—à –∑–∞–ø—Ä–æ—Å...",
                    color=discord.Color.orange()
                )
                loading_message = await interaction.followup.send(embed=loading_embed, ephemeral=True)
            else:
                # –î–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ - —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
                loading_message = None
            
            # –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
            try:
                quantity = int(self.quantity_input.value.strip())
                if quantity <= 0:
                    raise ValueError("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0")
            except ValueError:
                error_embed = discord.Embed(
                    title="‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
                    description="–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ! –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.",
                    color=discord.Color.red()
                )
                await interaction.followup.send(embed=error_embed, ephemeral=True)
                return

            # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏–∫–∞
            static = self._format_static(self.static_input.value.strip())
            if not static:
                error_embed = discord.Embed(
                    title="‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
                    description="–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å—Ç–∞—Ç–∏–∫! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: 123456 –∏–ª–∏ 123-456",
                    color=discord.Color.red()
                )
                await interaction.followup.send(embed=error_embed, ephemeral=True)
                return

            name = self.name_input.value.strip()
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–º–µ—Å—Ç–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
            if self.user_data:
                position = self.user_data.get('position', '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ')
                rank = self.user_data.get('rank', '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ') 
                department = self.user_data.get('department', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ')
                print(f"üîÑ WAREHOUSE MODAL: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - –¥–æ–ª–∂–Ω–æ—Å—Ç—å='{position}', –∑–≤–∞–Ω–∏–µ='{rank}', –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ='{department}'")
            else:
                # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, –ø–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –∫—ç—à–∞/–ë–î
                print(f"‚ö†Ô∏è WAREHOUSE MODAL: –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–∑ –∫—ç—à–∞/–ë–î")
                from utils.user_cache import get_cached_user_info
                fresh_data = await get_cached_user_info(interaction.user.id)
                if fresh_data:
                    position = fresh_data.get('position', '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ')
                    rank = fresh_data.get('rank', '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ')
                    department = fresh_data.get('department', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ')
                    print(f"‚úÖ WAREHOUSE MODAL: –ü–æ–ª—É—á–µ–Ω—ã —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ - –¥–æ–ª–∂–Ω–æ—Å—Ç—å='{position}', –∑–≤–∞–Ω–∏–µ='{rank}', –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ='{department}'")
                else:
                    position = '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ'
                    rank = '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ'
                    department = '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ'
                    print(f"‚ùå WAREHOUSE MODAL: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–æ–≤
            cart = get_user_cart(interaction.user.id)
            
            # –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å —É—á–µ—Ç–æ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            category_key = self._get_category_key(self.category)
            
            is_valid, corrected_quantity, validation_msg = self.warehouse_manager.validate_item_request(
                category_key, self.item_name, quantity, position, rank, cart.items
            )
            
            validation_message = ""
            item_to_add = None  # –§–ª–∞–≥ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, –¥–æ–±–∞–≤–ª—è—Ç—å –ª–∏ –ø—Ä–µ–¥–º–µ—Ç
            
            if corrected_quantity != quantity:
                # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—ã–ª–æ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ
                quantity = corrected_quantity
                validation_message = validation_msg
                # –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
                item_to_add = WarehouseRequestItem(
                    category=self.category,
                    item_name=self.item_name,
                    quantity=quantity,
                    user_name=name,
                    user_static=static,
                    position=position,
                    rank=rank
                )
            elif not is_valid:
                # –ü–æ–ª–Ω—ã–π –æ—Ç–∫–∞–∑ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ—Ä–∑–∏–Ω–µ
                validation_message = validation_msg
                # –ü—Ä–µ–¥–º–µ—Ç –ù–ï –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –∫–æ—Ä–∑–∏–Ω—É
            else:
                # –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
                item_to_add = WarehouseRequestItem(
                    category=self.category,
                    item_name=self.item_name,
                    quantity=quantity,
                    user_name=name,
                    user_static=static,
                    position=position,
                    rank=rank
                )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω —Å–æ–∑–¥–∞–Ω
            if item_to_add:
                cart.add_item(item_to_add)
            
            # –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ—Ä–∑–∏–Ω—É
            await self._show_cart(interaction, cart, validation_message, is_first_item=is_first_item, loading_message=loading_message)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ WarehouseRequestModal.on_submit: {e}")
            error_embed = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.",
                color=discord.Color.red()
            )
            try:
                await interaction.followup.send(embed=error_embed, ephemeral=True)
            except:
                pass

    async def _show_cart(self, interaction: discord.Interaction, cart: WarehouseRequestCart, 
                        validation_message: str = "", is_first_item: bool = False, loading_message=None):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        embed = discord.Embed(
            title="üì¶ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–∫–ª–∞–¥",
            description=cart.get_summary(),
            color=discord.Color.blue(),
            timestamp=datetime.now()
        )
        
        if validation_message:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –∏ –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
            if "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç" in validation_message:
                field_name = "üö´ –õ–∏–º–∏—Ç –∏—Å—á–µ—Ä–ø–∞–Ω"
            elif "—É–º–µ–Ω—å—à–µ–Ω–æ" in validation_message:
                field_name = "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ"
            else:
                field_name = "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
            embed.add_field(name=field_name, value=validation_message, inline=False)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
        if is_first_item:
            embed.add_field(
                name="üéâ –ö–æ—Ä–∑–∏–Ω–∞ —Å–æ–∑–¥–∞–Ω–∞!",
                value="–í–∞—à –ø–µ—Ä–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –ø—Ä–µ–¥–º–µ—Ç—ã –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É.",
                inline=False
            )
        
        embed.add_field(
            name="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
            value=f"–ü—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ: **{len(cart.items)}**\n–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: **{cart.get_total_items()}**",
            inline=False
        )
        
        embed.set_footer(text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –≤—ã–±–æ—Ä —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è –∏–∑ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
        
        from .views import WarehouseCartView
        view = WarehouseCartView(cart, self.warehouse_manager)
        
        # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1: –ï—Å–ª–∏ –µ—Å—Ç—å loading_message - –∑–∞–º–µ–Ω—è–µ–º –µ–≥–æ
        if loading_message:
            try:
                await loading_message.edit(embed=embed, view=view)
                set_user_cart_message(interaction.user.id, loading_message)
                return
            except (discord.NotFound, discord.HTTPException):
                pass
        
        # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2: –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
        existing_cart_message = get_user_cart_message(interaction.user.id)
        if existing_cart_message:
            try:
                await existing_cart_message.edit(embed=embed, view=view)
                return
            except (discord.NotFound, discord.HTTPException):
                pass
        
        # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 3: –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
        cart_message = await interaction.followup.send(embed=embed, view=view, ephemeral=True)
        set_user_cart_message(interaction.user.id, cart_message)

    def _format_static(self, static: str) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏–∫–∞ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤–∏–¥"""
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ, –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä
        digits = re.sub(r'\D', '', static)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É
        if len(digits) == 6:
            return f"{digits[:3]}-{digits[3:]}"
        elif len(digits) == 5:
            return f"{digits[:2]}-{digits[2:]}"
        
        return ""

    def _get_category_key(self, category: str) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        category_mapping = {
            "–û—Ä—É–∂–∏–µ": "–æ—Ä—É–∂–∏–µ",
            "–ë—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç—ã": "–±—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç—ã", 
            "–ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã": "–º–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã",
            "–î—Ä—É–≥–æ–µ": "–¥—Ä—É–≥–æ–µ"
        }
        return category_mapping.get(category, "–¥—Ä—É–≥–æ–µ")


class WarehouseQuantityModal(discord.ui.Modal):
    """–£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ - –°–£–ü–ï–† –ë–´–°–¢–†–ê–Ø –í–ï–†–°–ò–Ø"""
    
    def __init__(self, category: str, item_name: str, warehouse_manager: WarehouseManager, user_data=None):
        super().__init__(title=f"–ó–∞–ø—Ä–æ—Å: {item_name}")
        self.category = category
        self.item_name = item_name
        self.warehouse_manager = warehouse_manager
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ on_submit
        self.user_data = user_data or {}
        
        # –¢–æ–ª—å–∫–æ –ø–æ–ª–µ –¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        self.quantity_input = discord.ui.TextInput(
            label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ",
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤",
            min_length=1,
            max_length=10,
            required=True
        )
        
        self.add_item(self.quantity_input)

    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã - –°–£–ü–ï–† –ë–´–°–¢–†–ê–Ø –≤–µ—Ä—Å–∏—è –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ç–∞–π–º–∞—É—Ç–æ–≤"""
        try:            
            await interaction.response.defer(ephemeral=True)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–≤–æ–µ –ª–∏ —ç—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
            cart = get_user_cart(interaction.user.id)
            is_first_item = cart.is_empty()
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–ù–ï —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º original_response —Å –∫–Ω–æ–ø–∫–∞–º–∏!)
            if is_first_item:
                # –î–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ - —Å–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã..."
                loading_embed = discord.Embed(
                    title="üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã...",
                    description="–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∞—à –∑–∞–ø—Ä–æ—Å...",
                    color=discord.Color.orange()
                )
                loading_message = await interaction.followup.send(embed=loading_embed, ephemeral=True)
            else:
                # –î–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ - —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ –ø–æ–∑–∂–µ
                loading_message = None
            
            # –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
            try:
                quantity = int(self.quantity_input.value.strip())
                if quantity <= 0:
                    raise ValueError("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0")
            except ValueError:
                error_embed = discord.Embed(
                    title="‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
                    description="–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ! –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.",
                    color=discord.Color.red()
                )
                await interaction.followup.send(embed=error_embed, ephemeral=True)
                return

            # –ë—ã—Å—Ç—Ä–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä–∑–∏–Ω—ã
            # cart —É–∂–µ –ø–æ–ª—É—á–µ–Ω–∞ –≤—ã—à–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–≤–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            if cart.items:
                # –ë–µ—Ä–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
                last_item = cart.items[-1]
                user_name = last_item.user_name
                user_static = last_item.user_static
                position = last_item.position
                rank = last_item.rank
                print(f"üîÑ WAREHOUSE MODAL: –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã - –¥–æ–ª–∂–Ω–æ—Å—Ç—å='{position}', –∑–≤–∞–Ω–∏–µ='{rank}'")
            elif self.user_data:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
                user_name = self.user_data.get('full_name', '')
                user_static = self.user_data.get('static', '')
                position = self.user_data.get('position', '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ')
                rank = self.user_data.get('rank', '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ')
                print(f"üîÑ WAREHOUSE MODAL: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - –¥–æ–ª–∂–Ω–æ—Å—Ç—å='{position}', –∑–≤–∞–Ω–∏–µ='{rank}'")
            else:
                # –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∞—Ä–∏–∞–Ω—Ç - –∑–∞–ø—Ä–æ—Å –∏–∑ –∫—ç—à–∞/–ë–î
                print(f"‚ö†Ô∏è WAREHOUSE MODAL: –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ –∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–∑ –∫—ç—à–∞/–ë–î")
                from utils.user_cache import get_cached_user_info
                fresh_data = await get_cached_user_info(interaction.user.id)
                if fresh_data:
                    user_name = fresh_data.get('full_name', '')
                    user_static = fresh_data.get('static', '')
                    position = fresh_data.get('position', '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ')
                    rank = fresh_data.get('rank', '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ')
                    print(f"‚úÖ WAREHOUSE MODAL: –ü–æ–ª—É—á–µ–Ω—ã —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ - –¥–æ–ª–∂–Ω–æ—Å—Ç—å='{position}', –∑–≤–∞–Ω–∏–µ='{rank}'")
                else:
                    user_name = ''
                    user_static = ''
                    position = '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ'
                    rank = '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ'
                    print(f"‚ùå WAREHOUSE MODAL: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
                  # –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å —É—á–µ—Ç–æ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            category_key = self._get_category_key(self.category)
            is_valid, corrected_quantity, validation_msg = self.warehouse_manager.validate_item_request(
                category_key, self.item_name, quantity, position, rank, cart.items
            )
            
            validation_message = ""
            item_to_add = None  # –§–ª–∞–≥ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, –¥–æ–±–∞–≤–ª—è—Ç—å –ª–∏ –ø—Ä–µ–¥–º–µ—Ç
            
            if corrected_quantity != quantity:
                # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—ã–ª–æ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ
                quantity = corrected_quantity
                validation_message = validation_msg
                # –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
                item_to_add = WarehouseRequestItem(
                    category=self.category,
                    item_name=self.item_name,
                    quantity=quantity,
                    user_name=user_name,
                    user_static=user_static,
                    position=position,
                    rank=rank
                )
            elif not is_valid:
                # –ü–æ–ª–Ω—ã–π –æ—Ç–∫–∞–∑ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ—Ä–∑–∏–Ω–µ
                validation_message = validation_msg
                # –ü—Ä–µ–¥–º–µ—Ç –ù–ï –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –∫–æ—Ä–∑–∏–Ω—É
            else:
                # –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
                item_to_add = WarehouseRequestItem(
                    category=self.category,
                    item_name=self.item_name,
                    quantity=quantity,
                    user_name=user_name,
                    user_static=user_static,
                    position=position,
                    rank=rank
                )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω —Å–æ–∑–¥–∞–Ω
            if item_to_add:
                cart.add_item(item_to_add)
            
            # –£–ª—å—Ç—Ä–∞-–±—ã—Å—Ç—Ä–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
            await self._show_cart_ultra_fast(interaction, cart, validation_message, is_first_item=is_first_item, loading_message=loading_message)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ WarehouseQuantityModal.on_submit: {e}")
            error_embed = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.",
                color=discord.Color.red()
            )
            try:
                await interaction.followup.send(embed=error_embed, ephemeral=True)
            except:
                pass

    async def _show_cart_ultra_fast(self, interaction: discord.Interaction, cart: WarehouseRequestCart, 
                                   validation_message: str = "", is_first_item: bool = False, loading_message=None):
        """–£–õ–¨–¢–†–ê-–ë–´–°–¢–†–û–ï –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ç–∞–π–º–∞—É—Ç–æ–≤ Discord"""
        try:
            embed = discord.Embed(
                title="üì¶ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–∫–ª–∞–¥",
                description=cart.get_summary(),
                color=discord.Color.blue(),
                timestamp=datetime.now()
            )
            
            if validation_message:
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –∏ –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                if "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç" in validation_message:
                    field_name = "üö´ –õ–∏–º–∏—Ç –∏—Å—á–µ—Ä–ø–∞–Ω"
                elif "—É–º–µ–Ω—å—à–µ–Ω–æ" in validation_message:
                    field_name = "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ"
                else:
                    field_name = "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
                embed.add_field(name=field_name, value=validation_message, inline=False)
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
            if is_first_item:
                embed.add_field(
                    name="üéâ –ö–æ—Ä–∑–∏–Ω–∞ —Å–æ–∑–¥–∞–Ω–∞!",
                    value="–í–∞—à –ø–µ—Ä–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –ø—Ä–µ–¥–º–µ—Ç—ã –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É.",
                    inline=False
                )
            
            embed.add_field(
                name="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                value=f"–ü—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ: **{len(cart.items)}**\n–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: **{cart.get_total_items()}**",
                inline=False
            )
            embed.set_footer(text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –≤—ã–±–æ—Ä —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è –∏–∑ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
            
            from .views import WarehouseCartView
            view = WarehouseCartView(cart, self.warehouse_manager)
            
            # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1: –ï—Å–ª–∏ –µ—Å—Ç—å loading_message - –∑–∞–º–µ–Ω—è–µ–º –µ–≥–æ
            if loading_message:
                try:
                    await loading_message.edit(embed=embed, view=view)
                    set_user_cart_message(interaction.user.id, loading_message)
                    return
                except (discord.NotFound, discord.HTTPException):
                    pass
            
            # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2: –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
            existing_cart_message = get_user_cart_message(interaction.user.id)
            if existing_cart_message:
                try:
                    await existing_cart_message.edit(embed=embed, view=view)
                    return
                except (discord.NotFound, discord.HTTPException):
                    # –°—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, —Å–æ–∑–¥–∞–¥–∏–º –Ω–æ–≤–æ–µ
                    pass
            
            # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 3: –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
            cart_message = await interaction.followup.send(embed=embed, view=view, ephemeral=True)
            set_user_cart_message(interaction.user.id, cart_message)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ _show_cart_ultra_fast: {e}")

    def _get_category_key(self, category: str) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        category_mapping = {
            "–û—Ä—É–∂–∏–µ": "–æ—Ä—É–∂–∏–µ",
            "–ë—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç—ã": "–±—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç—ã", 
            "–ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã": "–º–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã",
            "–î—Ä—É–≥–æ–µ": "–¥—Ä—É–≥–æ–µ"
        }
        return category_mapping.get(category, "–¥—Ä—É–≥–æ–µ")


class RemoveItemByNumberModal(discord.ui.Modal):
    """–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É –ø–æ–∑–∏—Ü–∏–∏"""
    def __init__(self, cart: WarehouseRequestCart, warehouse_manager: WarehouseManager):
        super().__init__(title=f"–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç (1-{len(cart.items)})")
        self.cart = cart
        self.warehouse_manager = warehouse_manager
        
        # –¢–æ–ª—å–∫–æ –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ - —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤–∏–¥–∏—Ç –≤ –∫–æ—Ä–∑–∏–Ω–µ
        self.number_input = discord.ui.TextInput(
            label="–ù–æ–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è",
            placeholder=f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ—Ç 1 –¥–æ {len(cart.items)}",
            min_length=1,
            max_length=3,
            required=True
        )
        
        self.add_item(self.number_input)
    
    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É"""
        try:
            await interaction.response.defer(ephemeral=True)
            
            # –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞
            try:
                item_number = int(self.number_input.value.strip())
                if item_number < 1 or item_number > len(self.cart.items):
                    raise ValueError("–ù–æ–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞")
            except ValueError:
                error_embed = discord.Embed(
                    title="‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
                    description=f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ {len(self.cart.items)}",
                    color=discord.Color.red()
                )
                await interaction.followup.send(embed=error_embed, ephemeral=True)
                return
            
            # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç (–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ 0-based –∏–Ω–¥–µ–∫—Å)
            item_index = item_number - 1
            removed_item = self.cart.items[item_index]
            success = self.cart.remove_item_by_index(item_index)
            
            if success:
                success_embed = discord.Embed(
                    title="‚úÖ –ü—Ä–µ–¥–º–µ—Ç —É–¥–∞–ª–µ–Ω",
                    description=f"–£–¥–∞–ª–µ–Ω: **{removed_item.item_name}** √ó {removed_item.quantity}",
                    color=discord.Color.green()
                )
                await interaction.followup.send(embed=success_embed, ephemeral=True)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
                await self._update_cart_display(interaction)
            else:
                error_embed = discord.Embed(
                    title="‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è",
                    description="–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã",
                    color=discord.Color.red()
                )
                await interaction.followup.send(embed=error_embed, ephemeral=True)
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É: {e}")
            error_embed = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞",
                color=discord.Color.red()
            )
            await interaction.followup.send(embed=error_embed, ephemeral=True)
    
    async def _update_cart_display(self, interaction: discord.Interaction):
        """–û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            cart_message = get_user_cart_message(interaction.user.id)
            
            if cart_message and self.cart.items:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
                updated_embed = discord.Embed(
                    title="üì¶ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–∫–ª–∞–¥",
                    description=self.cart.get_summary(),
                    color=discord.Color.blue(),
                    timestamp=datetime.now()
                )
                
                updated_embed.add_field(
                    name="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                    value=f"–ü—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ: **{len(self.cart.items)}**\n–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: **{self.cart.get_total_items()}**",
                    inline=False
                )
                updated_embed.set_footer(text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –≤—ã–±–æ—Ä —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è –∏–∑ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
                
                from .views import WarehouseCartView
                view = WarehouseCartView(self.cart, self.warehouse_manager)
                await cart_message.edit(embed=updated_embed, view=view)
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã: {e}")


class WarehouseFinalDetailsModal(discord.ui.Modal):
    """–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –∏ —Å—Ç–∞—Ç–∏–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏"""
    def __init__(self, cart: WarehouseRequestCart, warehouse_manager: WarehouseManager, interaction_original: discord.Interaction, parent_view=None):
        super().__init__(title="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏")
        self.cart = cart
        self.warehouse_manager = warehouse_manager
        self.interaction_original = interaction_original
        self.parent_view = parent_view  # –°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é view –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ñ–ª–∞–≥–æ–≤
        
        # –ü–æ–ª—è —Ñ–æ—Ä–º—ã —Å –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        self.name_input = discord.ui.TextInput(
            label="–ò–º—è –§–∞–º–∏–ª–∏—è",
            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é",
            default="",
            min_length=3,
            max_length=50,
            required=True
        )
        
        self.static_input = discord.ui.TextInput(
            label="–°—Ç–∞—Ç–∏–∫",
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 123-456",
            default="",
            min_length=5,
            max_length=10,
            required=True
        )
        
        self.add_item(self.name_input)
        self.add_item(self.static_input)

    @classmethod
    def create_with_prefilled_data(cls, cart: WarehouseRequestCart, warehouse_manager: WarehouseManager, 
                                 interaction_original: discord.Interaction, name: str = "", static: str = "", parent_view=None):
        """–°–æ–∑–¥–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
        modal = cls(cart, warehouse_manager, interaction_original, parent_view)
        modal.name_input.default = name
        modal.static_input.default = static
        return modal

    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã - –±—ã—Å—Ç—Ä—ã–π –æ—Ç–∫–ª–∏–∫ + —Ñ–æ–Ω–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞"""
        try:
            await interaction.response.defer(ephemeral=True)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ—Ä–∑–∏–Ω–∞ –Ω–µ –ø—É—Å—Ç–∞
            if self.cart.is_empty():
                error_embed = discord.Embed(
                    title="‚ùå –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞",
                    description="–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞! –î–æ–±–∞–≤—å—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π.",
                    color=discord.Color.red()
                )
                await interaction.followup.send(embed=error_embed, ephemeral=True)
                return
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
            submission_channel_id = self.warehouse_manager.get_warehouse_submission_channel()
            if submission_channel_id:
                channel = interaction.guild.get_channel(submission_channel_id)
                if channel:
                    can_request, next_time = await self.warehouse_manager.check_user_cooldown(
                        interaction.user.id, channel, interaction.user
                    )
                    if not can_request and next_time:
                        from datetime import timezone, timedelta
                        moscow_tz = timezone(timedelta(hours=3))
                        current_time_moscow = datetime.now(moscow_tz).replace(tzinfo=None)
                        time_left = next_time - current_time_moscow
                        hours = int(time_left.total_seconds() // 3600)
                        minutes = int((time_left.total_seconds() % 3600) // 60)
                        
                        error_embed = discord.Embed(
                            title="‚è∞ –ö—É–ª–¥–∞—É–Ω –∞–∫—Ç–∏–≤–µ–Ω",
                            description=f"–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ {hours}—á {minutes}–º–∏–Ω",
                            color=discord.Color.orange()
                        )
                        await interaction.followup.send(embed=error_embed, ephemeral=True)
                        return
            
            name = self.name_input.value.strip()
            static = self._format_static(self.static_input.value.strip())
            
            if not static:
                error_embed = discord.Embed(
                    title="‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
                    description="–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å—Ç–∞—Ç–∏–∫! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: 123456 –∏–ª–∏ 123-456",
                    color=discord.Color.red()
                )
                await interaction.followup.send(embed=error_embed, ephemeral=True)
                return
            
            # –§–æ–Ω–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            await self._process_warehouse_request_background(interaction, name, static)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ WarehouseFinalDetailsModal.on_submit: {e}")
            error_embed = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏",
                color=discord.Color.red()
            )
            try:
                await interaction.followup.send(embed=error_embed, ephemeral=True)
            except:
                pass
    
    async def _process_warehouse_request_background(self, interaction: discord.Interaction, name: str, static: str):
        """–§–æ–Ω–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥"""
        try:
            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
            for item in self.cart.items:
                item.user_name = name
                item.user_static = static
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É
            await self._send_simple_warehouse_request(interaction)
            
            # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            await self._update_cart_after_submission(interaction)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ–Ω–æ–≤–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏: {e}")
            error_embed = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏",
                description="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥",
                color=discord.Color.red()
            )
            try:
                await interaction.edit_original_response(embed=error_embed)
            except:
                await interaction.followup.send(embed=error_embed, ephemeral=True)

    async def _send_simple_warehouse_request(self, interaction: discord.Interaction):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ—Å—Ç—É—é –∑–∞—è–≤–∫—É –Ω–∞ —Å–∫–ª–∞–¥"""
        from forms.warehouse.persistent_views import WarehousePersistentRequestView, WarehousePersistentMultiRequestView
        
        # –ï—Å–ª–∏ –æ–¥–∏–Ω –ø—Ä–µ–¥–º–µ—Ç - –ø—Ä–æ—Å—Ç–∞—è –∑–∞—è–≤–∫–∞, –µ—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ - –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è
        if len(self.cart.items) == 1:
            await self._send_single_request(interaction)
        else:
            await self._send_multi_request(interaction)

    async def _send_single_request(self, interaction: discord.Interaction):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–¥–∏–Ω–æ—á–Ω—É—é –∑–∞—è–≤–∫—É"""
        from forms.warehouse.persistent_views import WarehousePersistentRequestView
        from utils.user_cache import get_user_department_fast
        
        item = self.cart.items[0]

        # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª–∏ –¥–ª—è –ø–∏–Ω–≥–∞ —á–µ—Ä–µ–∑ ping_manager
        from utils.ping_manager import ping_manager
        ping_roles = ping_manager.get_ping_roles_for_user(interaction.user, 'warehouse')
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –∏–∑ PostgreSQL (—Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ embed)
        try:
            department = await get_user_department_fast(interaction.user.id)
            print(f"üè¢ DEPT: –ü–æ–ª—É—á–µ–Ω–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ '{department}' –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {interaction.user.id}")
        except Exception as e:
            print(f"‚ö†Ô∏è DEPT FALLBACK: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è: {e}")
            department = "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ"
        
        embed = discord.Embed(
            title="üì¶ –ó–∞–ø—Ä–æ—Å —Å–∫–ª–∞–¥–∞",
            description=f"## {interaction.user.mention}",
            color=discord.Color.blue(),
            timestamp=datetime.now()
        )
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        embed.add_field(name="üë§ –ó–∞—è–≤–∏—Ç–µ–ª—å", value=f"{item.user_name} | {item.user_static}", inline=False)
        embed.add_field(name="üè¢ –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ", value=department, inline=True)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ª–∂–Ω–æ—Å—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞
        if item.position and item.position.strip() and item.position != "–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ":
            embed.add_field(name="üìç –î–æ–ª–∂–Ω–æ—Å—Ç—å", value=item.position, inline=True)
        
        embed.add_field(name="üéñÔ∏è –ó–≤–∞–Ω–∏–µ", value=item.rank, inline=True)
        
        # –ü—É—Å—Ç–æ–µ –ø–æ–ª–µ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        embed.add_field(name="\u200b", value="\u200b", inline=False)
        
        # –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        embed.add_field(
            name="üìã –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã (1 –ø–æ–∑.)",
            value=f"1. **{item.item_name}** √ó {item.quantity}",
            inline=False
        )
        
        embed.set_footer(text=f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {interaction.user.id}")
        
        # –ü–æ–ª—É—á–∞–µ–º ID –∫–∞–Ω–∞–ª–∞ —Å–∫–ª–∞–¥–∞ –∏ –∑–∞—Ç–µ–º –æ–±—ä–µ–∫—Ç –∫–∞–Ω–∞–ª–∞
        warehouse_channel_id = self.warehouse_manager.get_warehouse_submission_channel()
        if not warehouse_channel_id:
            raise Exception("–ö–∞–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–æ–∫ —Å–∫–ª–∞–¥–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        
        warehouse_channel = interaction.guild.get_channel(warehouse_channel_id)
        if not warehouse_channel:
            raise Exception(f"–ö–∞–Ω–∞–ª —Å–∫–ª–∞–¥–∞ —Å ID {warehouse_channel_id} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª–∏ –¥–ª—è –ø–∏–Ω–≥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—É–∂–µ –ø–æ–ª—É—á–µ–Ω—ã —Ä–∞–Ω–µ–µ)
        ping_content = ""
        if ping_roles:
            ping_mentions = [f"<@&{role.id}>" for role in ping_roles]
            ping_content = f"-# {' '.join(ping_mentions)}"
        
        view = WarehousePersistentRequestView()
        await warehouse_channel.send(content=ping_content, embed=embed, view=view)

    async def _send_multi_request(self, interaction: discord.Interaction):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∑–∞—è–≤–∫—É"""
        from forms.warehouse.persistent_views import WarehousePersistentMultiRequestView
        from utils.user_cache import get_user_department_fast
        
        first_item = self.cart.items[0]

        # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª–∏ –¥–ª—è –ø–∏–Ω–≥–∞ —á–µ—Ä–µ–∑ ping_manager
        from utils.ping_manager import ping_manager
        ping_roles = ping_manager.get_ping_roles_for_user(interaction.user, 'warehouse')
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –∏–∑ PostgreSQL (—Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ embed)
        try:
            department = await get_user_department_fast(interaction.user.id)
            print(f"üè¢ DEPT: –ü–æ–ª—É—á–µ–Ω–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ '{department}' –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {interaction.user.id}")
        except Exception as e:
            print(f"‚ö†Ô∏è DEPT FALLBACK: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è: {e}")
            department = "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ"
        
        embed = discord.Embed(
            title="üì¶ –ó–∞–ø—Ä–æ—Å —Å–∫–ª–∞–¥–∞",
            description=f"## {interaction.user.mention}",
            color=discord.Color.blue(),
            timestamp=datetime.now()
        )
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        embed.add_field(name="üë§ –ó–∞—è–≤–∏—Ç–µ–ª—å", value=f"{first_item.user_name} | {first_item.user_static}", inline=False)
        embed.add_field(name="üè¢ –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ", value=department, inline=True)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ª–∂–Ω–æ—Å—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞
        if first_item.position and first_item.position.strip() and first_item.position != "–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ":
            embed.add_field(name="üìç –î–æ–ª–∂–Ω–æ—Å—Ç—å", value=first_item.position, inline=True)
        
        embed.add_field(name="üéñÔ∏è –ó–≤–∞–Ω–∏–µ", value=first_item.rank, inline=True)
        
        # –ü—É—Å—Ç–æ–µ –ø–æ–ª–µ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        embed.add_field(name="\u200b", value="\u200b", inline=False)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        items_text = ""
        for i, item in enumerate(self.cart.items, 1):
            items_text += f"{i}. **{item.item_name}** √ó {item.quantity}\n"
        
        embed.add_field(
            name=f"üìã –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã ({len(self.cart.items)} –ø–æ–∑.)",
            value=items_text,
            inline=False
        )
        
        embed.set_footer(text=f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {interaction.user.id}")
        
        # –ü–æ–ª—É—á–∞–µ–º ID –∫–∞–Ω–∞–ª–∞ —Å–∫–ª–∞–¥–∞ –∏ –∑–∞—Ç–µ–º –æ–±—ä–µ–∫—Ç –∫–∞–Ω–∞–ª–∞
        warehouse_channel_id = self.warehouse_manager.get_warehouse_submission_channel()
        if not warehouse_channel_id:
            raise Exception("–ö–∞–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–æ–∫ —Å–∫–ª–∞–¥–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        
        warehouse_channel = interaction.guild.get_channel(warehouse_channel_id)
        if not warehouse_channel:
            raise Exception(f"–ö–∞–Ω–∞–ª —Å–∫–ª–∞–¥–∞ —Å ID {warehouse_channel_id} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª–∏ –¥–ª—è –ø–∏–Ω–≥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—É–∂–µ –ø–æ–ª—É—á–µ–Ω—ã —Ä–∞–Ω–µ–µ)
        ping_content = ""
        if ping_roles:
            ping_mentions = [f"<@&{role.id}>" for role in ping_roles]
            ping_content = f"-# {' '.join(ping_mentions)}"
        
        view = WarehousePersistentMultiRequestView()
        await warehouse_channel.send(content=ping_content, embed=embed, view=view)

    async def _update_cart_after_submission(self, interaction: discord.Interaction):
        """–û–±–Ω–æ–≤–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            cart_message = get_user_cart_message(interaction.user.id)
            
            # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
            clear_user_cart_safe(interaction.user.id, "submission_completed")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
            success_embed = discord.Embed(
                title="‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!",
                description="–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–∫–ª–∞–¥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º.",
                color=discord.Color.green()
            )
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –±–µ–∑ –∫–Ω–æ–ø–æ–∫
            if cart_message:
                try:
                    await cart_message.edit(embed=success_embed, view=None)
                except (discord.NotFound, discord.HTTPException):
                    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –æ—Ç–≤–µ—Ç
                    await interaction.edit_original_response(embed=success_embed)
            else:
                # –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã, –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –æ—Ç–≤–µ—Ç
                await interaction.edit_original_response(embed=success_embed)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—Ö —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –æ—Ç–≤–µ—Ç
            try:
                success_embed = discord.Embed(
                    title="‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!",
                    description="–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–∫–ª–∞–¥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º.",
                    color=discord.Color.green()
                )
                await interaction.edit_original_response(embed=success_embed)
            except:
                pass

    def _format_static(self, static: str) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏–∫–∞ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤–∏–¥"""
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ, –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä
        digits = re.sub(r'\D', '', static)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É
        if len(digits) == 6:
            return f"{digits[:3]}-{digits[3:]}"
        elif len(digits) == 5:
            return f"{digits[:2]}-{digits[2:]}"
        
        return ""


class WarehouseCustomItemModal(discord.ui.Modal):
    """–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ '–ü—Ä–æ—á–µ–µ' —Å –ø–æ–ª–µ–º –æ–ø–∏—Å–∞–Ω–∏—è"""
    
    def __init__(self, category: str, warehouse_manager: WarehouseManager, user_data=None):
        super().__init__(title="–ó–∞–ø—Ä–æ—Å –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞")
        self.category = category
        self.warehouse_manager = warehouse_manager
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ on_submit
        self.user_data = user_data or {}
        
        # –ü–æ–ª–µ –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞
        self.item_name_input = discord.ui.TextInput(
            label="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞",
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞...",
            min_length=2,
            max_length=100,
            required=True
        )
        
        # –ü–æ–ª–µ –¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        self.quantity_input = discord.ui.TextInput(
            label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ",
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤",
            min_length=1,
            max_length=10,
            required=True
        )
        
        self.add_item(self.item_name_input)
        self.add_item(self.quantity_input)

    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞"""
        try:
            await interaction.response.defer(ephemeral=True)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–≤–æ–µ –ª–∏ —ç—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
            cart = get_user_cart(interaction.user.id)
            is_first_item = cart.is_empty()
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–ù–ï —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º original_response —Å –∫–Ω–æ–ø–∫–∞–º–∏!)
            if is_first_item:
                # –î–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ - —Å–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã..."
                loading_embed = discord.Embed(
                    title="üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã...",
                    description="–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∞—à –∑–∞–ø—Ä–æ—Å...",
                    color=discord.Color.orange()
                )
                loading_message = await interaction.followup.send(embed=loading_embed, ephemeral=True)
            else:
                # –î–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ - —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ –ø–æ–∑–∂–µ
                loading_message = None
            
            # –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
            try:
                quantity = int(self.quantity_input.value.strip())
                if quantity <= 0:
                    raise ValueError("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0")
            except ValueError:
                error_embed = discord.Embed(
                    title="‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
                    description="–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ! –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.",
                    color=discord.Color.red()
                )
                await interaction.followup.send(embed=error_embed, ephemeral=True)
                return

            item_name = self.item_name_input.value.strip()
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            cart = get_user_cart(interaction.user.id)
            
            if cart.items:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
                last_item = cart.items[-1]
                user_name = last_item.user_name
                user_static = last_item.user_static
                position = last_item.position
                rank = last_item.rank
                print(f"üîÑ WAREHOUSE CUSTOM MODAL: –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã - –¥–æ–ª–∂–Ω–æ—Å—Ç—å='{position}', –∑–≤–∞–Ω–∏–µ='{rank}'")
            elif self.user_data:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
                user_name = self.user_data.get('full_name', '')
                user_static = self.user_data.get('static', '')
                position = self.user_data.get('position', '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ')
                rank = self.user_data.get('rank', '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ')
                print(f"üîÑ WAREHOUSE CUSTOM MODAL: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - –¥–æ–ª–∂–Ω–æ—Å—Ç—å='{position}', –∑–≤–∞–Ω–∏–µ='{rank}'")
            else:
                # –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∞—Ä–∏–∞–Ω—Ç - –∑–∞–ø—Ä–æ—Å –∏–∑ –∫—ç—à–∞/–ë–î
                print(f"‚ö†Ô∏è WAREHOUSE CUSTOM MODAL: –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ –∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–∑ –∫—ç—à–∞/–ë–î")
                from utils.user_cache import get_cached_user_info
                fresh_data = await get_cached_user_info(interaction.user.id)
                if fresh_data:
                    user_name = fresh_data.get('full_name', '')
                    user_static = fresh_data.get('static', '')
                    position = fresh_data.get('position', '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ')
                    rank = fresh_data.get('rank', '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ')
                    print(f"‚úÖ WAREHOUSE CUSTOM MODAL: –ü–æ–ª—É—á–µ–Ω—ã —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ - –¥–æ–ª–∂–Ω–æ—Å—Ç—å='{position}', –∑–≤–∞–Ω–∏–µ='{rank}'")
                else:
                    user_name = ''
                    user_static = ''
                    position = '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ'
                    rank = '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ'
                    print(f"‚ùå WAREHOUSE CUSTOM MODAL: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
            
            # –í–∞–ª–∏–¥–∞—Ü–∏—è —Å —É—á–µ—Ç–æ–º –∫–æ—Ä–∑–∏–Ω—ã
            category_key = self._get_category_key(self.category)
            is_valid, corrected_quantity, validation_msg = self.warehouse_manager.validate_item_request(
                category_key, item_name, quantity, position, rank, cart.items
            )
            
            validation_message = ""
            item_to_add = None  # –§–ª–∞–≥ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, –¥–æ–±–∞–≤–ª—è—Ç—å –ª–∏ –ø—Ä–µ–¥–º–µ—Ç
            
            if corrected_quantity != quantity:
                # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—ã–ª–æ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ
                quantity = corrected_quantity
                validation_message = validation_msg
                # –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
                item_to_add = WarehouseRequestItem(
                    category=self.category,
                    item_name=item_name,
                    quantity=quantity,
                    user_name=user_name,
                    user_static=user_static,
                    position=position,
                    rank=rank
                )
            elif not is_valid:
                # –ü–æ–ª–Ω—ã–π –æ—Ç–∫–∞–∑ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ—Ä–∑–∏–Ω–µ
                validation_message = validation_msg
                # –ü—Ä–µ–¥–º–µ—Ç –ù–ï –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –∫–æ—Ä–∑–∏–Ω—É
            else:
                # –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
                item_to_add = WarehouseRequestItem(
                    category=self.category,
                    item_name=item_name,
                    quantity=quantity,
                    user_name=user_name,
                    user_static=user_static,
                    position=position,
                    rank=rank
                )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω —Å–æ–∑–¥–∞–Ω
            if item_to_add:
                cart.add_item(item_to_add)
            
            # –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ—Ä–∑–∏–Ω—É
            await self._show_cart_ultra_fast(interaction, cart, validation_message, is_first_item=is_first_item, loading_message=loading_message)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ WarehouseCustomItemModal.on_submit: {e}")
            error_embed = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞",
                color=discord.Color.red()
            )
            await interaction.followup.send(embed=error_embed, ephemeral=True)

    async def _show_cart_ultra_fast(self, interaction: discord.Interaction, cart: WarehouseRequestCart, 
                                   validation_message: str = "", is_first_item: bool = False, loading_message=None):
        """–ë—ã—Å—Ç—Ä–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤"""
        try:
            embed = discord.Embed(
                title="üì¶ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–∫–ª–∞–¥",
                description=cart.get_summary(),
                color=discord.Color.blue(),
                timestamp=datetime.now()
            )
            
            if validation_message:
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –∏ –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                if "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç" in validation_message:
                    field_name = "üö´ –õ–∏–º–∏—Ç –∏—Å—á–µ—Ä–ø–∞–Ω"
                elif "—É–º–µ–Ω—å—à–µ–Ω–æ" in validation_message:
                    field_name = "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ"
                else:
                    field_name = "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
                embed.add_field(name=field_name, value=validation_message, inline=False)
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
            if is_first_item:
                embed.add_field(
                    name="üéâ –ö–æ—Ä–∑–∏–Ω–∞ —Å–æ–∑–¥–∞–Ω–∞!",
                    value="–í–∞—à –ø–µ—Ä–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –ø—Ä–µ–¥–º–µ—Ç—ã –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É.",
                    inline=False
                )
            
            embed.add_field(
                name="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                value=f"–ü—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ: **{len(cart.items)}**\n–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: **{cart.get_total_items()}**",
                inline=False
            )
            embed.set_footer(text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –≤—ã–±–æ—Ä —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è –∏–∑ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
            
            from .views import WarehouseCartView
            view = WarehouseCartView(cart, self.warehouse_manager)
            
            # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1: –ï—Å–ª–∏ –µ—Å—Ç—å loading_message - –∑–∞–º–µ–Ω—è–µ–º –µ–≥–æ
            if loading_message:
                try:
                    await loading_message.edit(embed=embed, view=view)
                    set_user_cart_message(interaction.user.id, loading_message)
                    return
                except (discord.NotFound, discord.HTTPException):
                    pass
            
            # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2: –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
            existing_cart_message = get_user_cart_message(interaction.user.id)
            if existing_cart_message:
                try:
                    await existing_cart_message.edit(embed=embed, view=view)
                    return
                except (discord.NotFound, discord.HTTPException):
                    # –°—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, —Å–æ–∑–¥–∞–¥–∏–º –Ω–æ–≤–æ–µ
                    pass
            
            # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 3: –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
            cart_message = await interaction.followup.send(embed=embed, view=view, ephemeral=True)
            set_user_cart_message(interaction.user.id, cart_message)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ _show_cart_ultra_fast: {e}")

    def _get_category_key(self, category: str) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        category_mapping = {
            "–û—Ä—É–∂–∏–µ": "–æ—Ä—É–∂–∏–µ",
            "–ë—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç—ã": "–±—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç—ã", 
            "–ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã": "–º–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã",
            "–î—Ä—É–≥–æ–µ": "–¥—Ä—É–≥–æ–µ"
        }
        return category_mapping.get(category, "–¥—Ä—É–≥–æ–µ")
