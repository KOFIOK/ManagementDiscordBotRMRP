"""
Persistent Views –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∑–∞—è–≤–æ–∫ —Å–∫–ª–∞–¥–∞
"""

import discord
from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from .status import WarehouseStatusView, DeletionConfirmView, RejectionReasonModal
    from .edit import WarehouseEditSelectView


class WarehousePersistentRequestView(discord.ui.View):
    """Persistent View –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –æ–¥–∏–Ω–æ—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–∫–ª–∞–¥–∞"""
    
    def __init__(self):
        super().__init__(timeout=None)
    
    @discord.ui.button(label="‚úÖ –í—ã–¥–∞—Ç—å —Å–∫–ª–∞–¥", style=discord.ButtonStyle.green, custom_id="warehouse_approve", row=0)
    async def approve_request(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–û–¥–æ–±—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å —Å–∫–ª–∞–¥–∞"""
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            from utils.moderator_auth import has_moderator_permissions
            if not await has_moderator_permissions(interaction.user, interaction.guild):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è!", ephemeral=True
                )
                return
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ embed
            embed = interaction.message.embeds[0]
            embed.color = discord.Color.green()
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–¥–æ–±—Ä–µ–Ω–∏–∏
            embed.add_field(
                name="‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ", 
                value=f"*–°–∫–ª–∞–¥ –≤—ã–¥–∞–ª: {interaction.user.mention}*", 
                inline=False
            )
            
            # –ó–∞–º–µ–Ω—è–µ–º view –Ω–∞ –∫–Ω–æ–ø–∫—É —Å—Ç–∞—Ç—É—Å–∞ "–û–¥–æ–±—Ä–µ–Ω–æ" –∏ –æ—á–∏—â–∞–µ–º –ø–∏–Ω–≥–∏
            from .status import WarehouseStatusView
            status_view = WarehouseStatusView(status="approved")
            
            await interaction.response.edit_message(content="", embed=embed, view=status_view)
            
            # üìã –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –°–û–ó–î–ê–ù–ò–ï –ó–ê–ü–ò–°–ò –ê–£–î–ò–¢–ê
            try:
                from forms.warehouse.audit import create_automatic_audit_from_approval
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ embed'–∞ –∑–∞—è–≤–∫–∏
                recipient_id = None
                items_list = []
                
                # –ò—â–µ–º ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è –≤ footer
                if embed.footer and embed.footer.text and "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:" in embed.footer.text:
                    try:
                        recipient_id = int(embed.footer.text.split("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")[-1].strip())
                    except (ValueError, IndexError):
                        pass
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ description
                if embed.description:
                    # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ (–æ–±—ã—á–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç √ó –∏–ª–∏ x)
                    for line in embed.description.split('\n'):
                        if '√ó' in line or 'x' in line:
                            items_list.append(line.strip())
                
                # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ description, –∏—â–µ–º –≤ –ø–æ–ª—è—Ö
                if not items_list:
                    for field in embed.fields:
                        if any(keyword in field.name.lower() for keyword in ['–ø—Ä–µ–¥–º–µ—Ç', '–∑–∞–ø—Ä–æ—Å', '–∑–∞—è–≤–∫–∞']):
                            if field.value:
                                for line in field.value.split('\n'):
                                    if '√ó' in line or 'x' in line:
                                        items_list.append(line.strip())
                
                items_text = '\n'.join(items_list) if items_list else "–ü—Ä–µ–¥–º–µ—Ç—ã –Ω–µ —É–∫–∞–∑–∞–Ω—ã"
                request_url = interaction.message.jump_url
                
                # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –∞—É–¥–∏—Ç–∞, –µ—Å–ª–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω
                if recipient_id:
                    recipient = interaction.guild.get_member(recipient_id)
                    if recipient:
                        await create_automatic_audit_from_approval(
                            interaction.guild,
                            interaction.user,  # –º–æ–¥–µ—Ä–∞—Ç–æ—Ä
                            recipient,         # –ø–æ–ª—É—á–∞—Ç–µ–ª—å
                            items_text,        # –ø—Ä–µ–¥–º–µ—Ç—ã
                            request_url        # —Å—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞—è–≤–∫—É
                        )
                        print(f"üìã AUTO AUDIT: –°–æ–∑–¥–∞–Ω–∞ –∑–∞–ø–∏—Å—å –∞—É–¥–∏—Ç–∞ –¥–ª—è –≤—ã–¥–∞—á–∏ {recipient.display_name}")
                    else:
                        print(f"‚ö†Ô∏è AUTO AUDIT: –ü–æ–ª—É—á–∞—Ç–µ–ª—å —Å ID {recipient_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
                else:
                    print(f"‚ö†Ô∏è AUTO AUDIT: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏–∑ –∑–∞—è–≤–∫–∏")
                    
            except Exception as audit_error:
                print(f"‚ùå AUTO AUDIT: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞—É–¥–∏—Ç–∞: {audit_error}")
                # –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –æ–¥–æ–±—Ä–µ–Ω–∏—è –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –∞—É–¥–∏—Ç–∞
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ —Å–∫–ª–∞–¥–∞: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.", ephemeral=True
            )
    
    @discord.ui.button(label="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", style=discord.ButtonStyle.red, custom_id="warehouse_reject", row=0)
    async def reject_request(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å —Å–∫–ª–∞–¥–∞"""
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            from utils.moderator_auth import has_moderator_permissions
            if not await has_moderator_permissions(interaction.user, interaction.guild):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è!", ephemeral=True
                )
                return

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–∞–∑–∞
            from .status import RejectionReasonModal
            rejection_modal = RejectionReasonModal(interaction.message)
            await interaction.response.send_modal(rejection_modal)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ —Å–∫–ª–∞–¥–∞: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.", ephemeral=True
            )

    @discord.ui.button(label="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∑–∞–ø—Ä–æ—Å", style=discord.ButtonStyle.secondary, custom_id="warehouse_delete", row=1)
    async def delete_request(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–£–¥–∞–ª–∏—Ç—å –∑–∞–ø—Ä–æ—Å (–¥–æ—Å—Ç—É–ø–Ω–æ –∞–≤—Ç–æ—Ä—É –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ
            can_delete = await self._check_delete_permissions(interaction)
            if not can_delete:
                return
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º ephemeral —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            embed = discord.Embed(
                title="‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è",
                description="–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å —Å–∫–ª–∞–¥–∞?\n\n**–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!**",
                color=discord.Color.orange()
            )
            from .status import DeletionConfirmView
            confirm_view = DeletionConfirmView(interaction.message)
            await interaction.response.send_message(embed=embed, view=confirm_view, ephemeral=True)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ —Å–∫–ª–∞–¥–∞: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.", ephemeral=True
            )

    @discord.ui.button(label="üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", style=discord.ButtonStyle.secondary, custom_id="warehouse_edit", row=1)
    async def edit_request(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞—è–≤–∫—É (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º)"""
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            from utils.moderator_auth import has_moderator_permissions
            if not await has_moderator_permissions(interaction.user, interaction.guild):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞—è–≤–æ–∫!", ephemeral=True
                )
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞—è–≤–∫–∞ –µ—â—ë –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ (–Ω–µ—Ç —Å—Ç–∞—Ç—É—Å–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è/–æ—Ç–∫–∞–∑–∞)
            embed = interaction.message.embeds[0]
            embed_text = str(embed.to_dict())
            
            if "‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ" in embed_text or "‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ" in embed_text:
                await interaction.response.send_message(
                    "‚ùå –ù–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é –∑–∞—è–≤–∫—É!", ephemeral=True
                )
                return
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º select menu —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            from .edit import WarehouseEditSelectView
            view = WarehouseEditSelectView(interaction.message)
            await interaction.response.send_message(
                "üìù –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:",
                view=view,
                ephemeral=True
            )
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞—è–≤–∫–∏: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.", ephemeral=True
            )
    
    async def _check_delete_permissions(self, interaction: discord.Interaction) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞"""
        try:
            # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∏—Å—Ç–µ–º–Ω—ã–º –∏–ª–∏ Discord –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
            from utils.moderator_auth import has_admin_permissions
            if await has_admin_permissions(interaction.user, interaction.guild):
                return True
            
            # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–æ–º –∑–∞–ø—Ä–æ—Å–∞
            if interaction.message.embeds:
                embed = interaction.message.embeds[0]
                if embed.footer and embed.footer.text:
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∞–≤—Ç–æ—Ä–∞ –∏–∑ footer
                    footer_text = embed.footer.text
                    if "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:" in footer_text:
                        try:
                            author_id = int(footer_text.split("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")[-1].strip())
                            if author_id == interaction.user.id:
                                return True
                        except (ValueError, IndexError):
                            pass
            
            # –ï—Å–ª–∏ –Ω–∏ –æ–¥–Ω–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ - –æ—Ç–∫–∞–∑—ã–≤–∞–µ–º –≤ –¥–æ—Å—Ç—É–ø–µ
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞!\n"
                "–£–¥–∞–ª–∏—Ç—å –∑–∞–ø—Ä–æ—Å –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –µ–≥–æ –∞–≤—Ç–æ—Ä –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.",
                ephemeral=True
            )
            return False
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞.", ephemeral=True
            )
            return False


class WarehousePersistentMultiRequestView(discord.ui.View):
    """Persistent View –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–∫–ª–∞–¥–∞"""
    
    def __init__(self):
        super().__init__(timeout=None)
    
    @discord.ui.button(label="‚úÖ –í—ã–¥–∞—Ç—å —Å–∫–ª–∞–¥", style=discord.ButtonStyle.green, custom_id="warehouse_multi_approve", row=0)
    async def approve_all_requests(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–û–¥–æ–±—Ä–∏—Ç—å –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –≤ –∑–∞—è–≤–∫–µ"""
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            from utils.moderator_auth import has_moderator_permissions
            if not await has_moderator_permissions(interaction.user, interaction.guild):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è!", ephemeral=True
                )
                return

            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ embed
            embed = interaction.message.embeds[0]
            embed.color = discord.Color.green()
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–¥–æ–±—Ä–µ–Ω–∏–∏
            embed.add_field(
                name="‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ", 
                value=f"*–û–¥–æ–±—Ä–∏–ª: {interaction.user.mention}*", 
                inline=False
            )
            
            # –ó–∞–º–µ–Ω—è–µ–º view –Ω–∞ –∫–Ω–æ–ø–∫—É —Å—Ç–∞—Ç—É—Å–∞ "–û–¥–æ–±—Ä–µ–Ω–æ" –∏ –æ—á–∏—â–∞–µ–º –ø–∏–Ω–≥–∏
            from .status import WarehouseStatusView
            status_view = WarehouseStatusView(status="approved")
            
            await interaction.response.edit_message(content="", embed=embed, view=status_view)
            
            # üìã –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –°–û–ó–î–ê–ù–ò–ï –ó–ê–ü–ò–°–ò –ê–£–î–ò–¢–ê –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
            try:
                from forms.warehouse.audit import create_automatic_audit_from_approval
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ embed'–∞ –∑–∞—è–≤–∫–∏
                recipient_id = None
                items_list = []
                
                # –ò—â–µ–º ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è –≤ footer
                if embed.footer and embed.footer.text and "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:" in embed.footer.text:
                    try:
                        recipient_id = int(embed.footer.text.split("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")[-1].strip())
                    except (ValueError, IndexError):
                        pass
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ description (–¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤)
                if embed.description:
                    for line in embed.description.split('\n'):
                        if '√ó' in line or 'x' in line:
                            items_list.append(line.strip())
                
                # –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è embed'–∞
                if not items_list:
                    for field in embed.fields:
                        if any(keyword in field.name.lower() for keyword in ['–ø—Ä–µ–¥–º–µ—Ç', '–∑–∞–ø—Ä–æ—Å', '–∑–∞—è–≤–∫–∞']):
                            if field.value:
                                for line in field.value.split('\n'):
                                    if '√ó' in line or 'x' in line:
                                        items_list.append(line.strip())
                
                items_text = '\n'.join(items_list) if items_list else "–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å - –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–µ —É–∫–∞–∑–∞–Ω—ã"
                request_url = interaction.message.jump_url
                
                # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –∞—É–¥–∏—Ç–∞, –µ—Å–ª–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω
                if recipient_id:
                    recipient = interaction.guild.get_member(recipient_id)
                    if recipient:
                        await create_automatic_audit_from_approval(
                            interaction.guild,
                            interaction.user,  # –º–æ–¥–µ—Ä–∞—Ç–æ—Ä
                            recipient,         # –ø–æ–ª—É—á–∞—Ç–µ–ª—å
                            items_text,        # –ø—Ä–µ–¥–º–µ—Ç—ã
                            request_url        # —Å—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞—è–≤–∫—É
                        )
                        print(f"üìã AUTO AUDIT: –°–æ–∑–¥–∞–Ω–∞ –∑–∞–ø–∏—Å—å –∞—É–¥–∏—Ç–∞ –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –≤—ã–¥–∞—á–∏ {recipient.display_name}")
                    else:
                        print(f"‚ö†Ô∏è AUTO AUDIT: –ü–æ–ª—É—á–∞—Ç–µ–ª—å —Å ID {recipient_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
                else:
                    print(f"‚ö†Ô∏è AUTO AUDIT: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–∏")
                    
            except Exception as audit_error:
                print(f"‚ùå AUTO AUDIT: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞—É–¥–∏—Ç–∞: {audit_error}")
                # –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –æ–¥–æ–±—Ä–µ–Ω–∏—è –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –∞—É–¥–∏—Ç–∞
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞!", ephemeral=True
            )
    
    @discord.ui.button(label="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", style=discord.ButtonStyle.red, custom_id="warehouse_multi_reject", row=0)
    async def reject_all_requests(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–û—Ç–∫–ª–æ–Ω–∏—Ç—å –≤—Å—é –∑–∞—è–≤–∫—É"""
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            from utils.moderator_auth import has_moderator_permissions
            if not await has_moderator_permissions(interaction.user, interaction.guild):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è!", ephemeral=True
                )
                return

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–∞–∑–∞
            from .status import RejectionReasonModal
            rejection_modal = RejectionReasonModal(interaction.message)
            await interaction.response.send_modal(rejection_modal)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–∏: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.", ephemeral=True
            )

    @discord.ui.button(label="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∑–∞–ø—Ä–æ—Å", style=discord.ButtonStyle.secondary, custom_id="warehouse_multi_delete", row=1)
    async def delete_all_requests(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–£–¥–∞–ª–∏—Ç—å –≤—Å—é –∑–∞—è–≤–∫—É (–¥–æ—Å—Ç—É–ø–Ω–æ –∞–≤—Ç–æ—Ä—É –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ
            can_delete = await self._check_delete_permissions(interaction)
            if not can_delete:
                return
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º ephemeral —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            embed = discord.Embed(
                title="‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è",
                description="–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å —Å–∫–ª–∞–¥–∞?\n\n**–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!**",
                color=discord.Color.orange()
            )
            
            from .status import DeletionConfirmView
            confirm_view = DeletionConfirmView(interaction.message)
            await interaction.response.send_message(embed=embed, view=confirm_view, ephemeral=True)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —É–¥–∞–ª–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–∏: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.", ephemeral=True
            )

    @discord.ui.button(label="üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", style=discord.ButtonStyle.secondary, custom_id="warehouse_multi_edit", row=1)
    async def edit_multi_request(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∑–∞—è–≤–∫—É (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º)"""
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            from utils.moderator_auth import has_moderator_permissions
            if not await has_moderator_permissions(interaction.user, interaction.guild):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞—è–≤–æ–∫!", ephemeral=True
                )
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞—è–≤–∫–∞ –µ—â—ë –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ (–Ω–µ—Ç —Å—Ç–∞—Ç—É—Å–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è/–æ—Ç–∫–∞–∑–∞)
            embed = interaction.message.embeds[0]
            embed_text = str(embed.to_dict())
            
            if "‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ" in embed_text or "‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ" in embed_text:
                await interaction.response.send_message(
                    "‚ùå –ù–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é –∑–∞—è–≤–∫—É!", ephemeral=True
                )
                return
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º select menu —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            from .edit import WarehouseEditSelectView
            view = WarehouseEditSelectView(interaction.message)
            await interaction.response.send_message(
                "üìù –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:",
                view=view,
                ephemeral=True
            )
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–∏: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.", ephemeral=True
            )
    
    async def _check_delete_permissions(self, interaction: discord.Interaction) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞"""
        try:
            # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∏—Å—Ç–µ–º–Ω—ã–º –∏–ª–∏ Discord –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
            from utils.moderator_auth import has_admin_permissions
            if await has_admin_permissions(interaction.user, interaction.guild):
                return True
            
            # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–æ–º –∑–∞–ø—Ä–æ—Å–∞
            if interaction.message.embeds:
                embed = interaction.message.embeds[0]
                if embed.footer and embed.footer.text:
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∞–≤—Ç–æ—Ä–∞ –∏–∑ footer
                    footer_text = embed.footer.text
                    if "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:" in footer_text:
                        try:
                            author_id = int(footer_text.split("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")[-1].strip())
                            if author_id == interaction.user.id:
                                return True
                        except (ValueError, IndexError):
                            pass
            
            # –ï—Å–ª–∏ –Ω–∏ –æ–¥–Ω–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ - –æ—Ç–∫–∞–∑—ã–≤–∞–µ–º –≤ –¥–æ—Å—Ç—É–ø–µ
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞!\n"
                "–£–¥–∞–ª–∏—Ç—å –∑–∞–ø—Ä–æ—Å –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –µ–≥–æ –∞–≤—Ç–æ—Ä –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.",
                ephemeral=True
            )
            return False
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞.", ephemeral=True
            )
            return False
