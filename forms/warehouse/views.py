"""
–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è (Views) –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Å–∫–ª–∞–¥–∞
–í–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –ø—Ä–µ–¥–º–µ—Ç–æ–≤, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω–æ–π –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
"""

import asyncio
import discord
from datetime import datetime, timezone, timedelta
from typing import Dict
from utils.warehouse_manager import WarehouseManager
from .cart import WarehouseRequestCart, clear_user_cart_safe, get_user_cart_message, user_cart_messages


async def safe_interaction_response(interaction: discord.Interaction, content: str = None, embed: discord.Embed = None, 
                                  view: discord.ui.View = None, file: discord.File = None, ephemeral: bool = True):
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ü–∏—é —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –∏—Å—Ç—ë–∫—à–∏—Ö –∏–Ω—Ç–µ—Ä–∞–∫—Ü–∏–π
    """
    try:
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∏—Å–∫–ª—é—á–∞—è None –∑–Ω–∞—á–µ–Ω–∏—è
        kwargs = {"ephemeral": ephemeral}
        if content is not None:
            kwargs["content"] = content
        if embed is not None:
            kwargs["embed"] = embed
        if view is not None:
            kwargs["view"] = view
        if file is not None:
            kwargs["file"] = file
            
        if not interaction.response.is_done():
            await interaction.response.send_message(**kwargs)
        else:
            # –ò–Ω—Ç–µ—Ä–∞–∫—Ü–∏—è —É–∂–µ –±—ã–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º followup
            await interaction.followup.send(**kwargs)
    except discord.NotFound as e:
        if e.code == 10062:  # Unknown interaction
            print(f"‚ö†Ô∏è INTERACTION EXPIRED: –ò—Å—Ç–µ–∫–ª–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ü–∏—è –¥–ª—è {interaction.user.display_name}")
            return False
        else:
            raise
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ü–∏—é: {e}")
        import traceback
        traceback.print_exc()
        return False
    return True


async def safe_modal_response(interaction: discord.Interaction, modal: discord.ui.Modal):
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –∏—Å—Ç—ë–∫—à–∏—Ö –∏–Ω—Ç–µ—Ä–∞–∫—Ü–∏–π
    """
    try:
        if modal is None:
            print(f"‚ùå MODAL ERROR: –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–∞–≤–Ω–æ None –¥–ª—è {interaction.user.display_name}")
            return False
            
        if not interaction.response.is_done():
            await interaction.response.send_modal(modal)
            return True
        else:
            print(f"‚ö†Ô∏è INTERACTION: –ò–Ω—Ç–µ—Ä–∞–∫—Ü–∏—è —É–∂–µ –±—ã–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–ª—è {interaction.user.display_name}")
            # –î–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω followup –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            try:
                await interaction.followup.send(
                    "‚ö†Ô∏è –ò–Ω—Ç–µ—Ä–∞–∫—Ü–∏—è –∏—Å—Ç–µ–∫–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç –∑–∞–Ω–æ–≤–æ.",
                    ephemeral=True
                )
            except:
                pass
            return False
    except discord.NotFound as e:
        if e.code == 10062:  # Unknown interaction
            print(f"‚ö†Ô∏è INTERACTION EXPIRED: –ò—Å—Ç–µ–∫–ª–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ü–∏—è –¥–ª—è {interaction.user.display_name}")
            return False
        else:
            raise
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞: {e}")
        import traceback
        traceback.print_exc()
        return False


class WarehouseCategorySelect(discord.ui.Select):
    """–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–∫–ª–∞–¥–∞"""
    
    def __init__(self):
        # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø—Ü–∏–∏, –Ω–µ –∑–∞–≤–∏—Å—è—â–∏–µ –æ—Ç warehouse_manager
        options = [
            discord.SelectOption(
                label="–û—Ä—É–∂–∏–µ",
                emoji="üî´",
                description="–í—ã–±–µ—Ä–∏—Ç–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –æ—Ä—É–∂–∏—è",
                value="weapon"
            ),
            discord.SelectOption(
                label="–ë—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç—ã",
                emoji="ü¶∫",
                description="–í—ã–±–µ—Ä–∏—Ç–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –±—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç–æ–≤",
                value="armor"
            ),
            discord.SelectOption(
                label="–ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã",
                emoji="üíä",
                description="–í—ã–±–µ—Ä–∏—Ç–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–æ–≤",
                value="medical"
            ),
            discord.SelectOption(
                label="–î—Ä—É–≥–æ–µ",
                emoji="üì¶",
                description="–í—ã–±–µ—Ä–∏—Ç–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥—Ä—É–≥–æ–≥–æ –∏–º—É—â–µ—Å—Ç–≤–∞",
                value="other"
            )
        ]
        
        super().__init__(
            placeholder="üì¶ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å–∫–ª–∞–¥—Å–∫–æ–≥–æ –∏–º—É—â–µ—Å—Ç–≤–∞...",
            options=options,
            custom_id="warehouse_category_select"
        )

    async def callback(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        try:
            # –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å timeout
            await interaction.response.defer(ephemeral=True)
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π warehouse_manager –∏–∑ utils
            from utils.warehouse_manager import WarehouseManager
            warehouse_manager = WarehouseManager()
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤–∫–ª—é—á–∞—è –∞–¥–º–∏–Ω–æ–≤)
            submission_channel_id = warehouse_manager.get_warehouse_submission_channel()
            if submission_channel_id:
                channel = interaction.guild.get_channel(submission_channel_id)
                if channel:
                    can_request, next_time = await warehouse_manager.check_user_cooldown(
                        interaction.user.id, channel, interaction.user
                    )
                    
                    if not can_request and next_time:
                        # next_time —É–∂–µ –≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–º –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ warehouse_manager
                        moscow_tz = timezone(timedelta(hours=3))  # UTC+3 –¥–ª—è –ú–æ—Å–∫–≤—ã
                        current_time_moscow = datetime.now(moscow_tz).replace(tzinfo=None)
                        time_left = next_time - current_time_moscow
                        hours = int(time_left.total_seconds() // 3600)
                        minutes = int((time_left.total_seconds() % 3600) // 60)
                        
                        await interaction.followup.send(
                            f"‚è∞ –ö—É–ª–¥–∞—É–Ω! –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ {hours}—á {minutes}–º–∏–Ω",
                            ephemeral=True
                        )
                        return
            
            # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ value –≤ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            category_mapping = {
                "weapon": "–û—Ä—É–∂–∏–µ",
                "armor": "–ë—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç—ã",
                "medical": "–ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã",
                "other": "–î—Ä—É–≥–æ–µ"
            }
            
            selected_value = self.values[0]
            selected_category = category_mapping.get(selected_value)
            
            if not selected_category:
                await interaction.followup.send(
                    "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.",
                    ephemeral=True
                )
                return
            
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ warehouse_manager
            category_info = warehouse_manager.item_categories.get(selected_category)
            
            if not category_info:
                await interaction.followup.send(
                    f"‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{selected_category}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ!",
                    ephemeral=True
                )
                return
            
            # –°–æ–∑–¥–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
            view = WarehouseItemSelectView(selected_category, category_info, warehouse_manager)
            
            # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ emoji —Å fallback
            category_emoji = category_info.get('emoji', 'üì¶')
            
            embed = discord.Embed(
                title=f"{category_emoji} {selected_category}",
                description="–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞:",
                color=discord.Color.blue()
            )
            
            # –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –∏—Å—Ç—ë–∫—à–∏—Ö –∏–Ω—Ç–µ—Ä–∞–∫—Ü–∏–π
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º followup —Ç–∞–∫ –∫–∞–∫ interaction —É–∂–µ deferred
            try:
                await interaction.followup.send(embed=embed, view=view, ephemeral=True)
                print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤—ã–±–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {selected_category}")
            except discord.NotFound as e:
                if e.code == 10062:  # Unknown interaction
                    print(f"‚ö†Ô∏è INTERACTION EXPIRED: –ò—Å—Ç–µ–∫–ª–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ü–∏—è –¥–ª—è {interaction.user.display_name}")
                    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—ã–±–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {selected_category}")
                else:
                    raise
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: {e}")
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—ã–±–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {selected_category}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–∫–ª–∞–¥–∞: {e}")
            import traceback
            traceback.print_exc()
            try:
                # –ü—Ä–æ–±—É–µ–º followup —Å–Ω–∞—á–∞–ª–∞ (–µ—Å–ª–∏ interaction –±—ã–ª deferred)
                if interaction.response.is_done():
                    await interaction.followup.send(
                        f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True
                    )
                else:
                    await interaction.response.send_message(
                        f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True
                    )
            except:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")


class WarehouseItemSelectView(discord.ui.View):
    """View –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞"""
    
    def __init__(self, category: str, category_info: Dict, warehouse_manager: WarehouseManager):
        super().__init__(timeout=None)  # 5 –º–∏–Ω—É—Ç —Ç–∞–π–º–∞—É—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞
        self.category = category
        self.category_info = category_info
        self.warehouse_manager = warehouse_manager
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –æ—Ä—É–∂–∏—è" –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–û—Ä—É–∂–∏–µ"
        if category == "–û—Ä—É–∂–∏–µ":
            weapons_info_button = discord.ui.Button(
                label="–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –æ—Ä—É–∂–∏—è",
                style=discord.ButtonStyle.primary,
                emoji="üìä",
                custom_id="warehouse_weapons_info",
                row=0
            )
            weapons_info_button.callback = self._weapons_info_callback
            self.add_item(weapons_info_button)
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
        items = category_info["items"]
        for i, item in enumerate(items):
            if i < 20:  # –ú–∞–∫—Å–∏–º—É–º 20 –∫–Ω–æ–ø–æ–∫ (4 —Ä—è–¥–∞ –ø–æ 5)
                try:
                    # –î–µ–ª–∞–µ–º custom_id —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏!
                    unique_id = f"warehouse_{self.category.lower()}_{i}_{hash(item) % 10000}"
                    
                    # –î–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–û—Ä—É–∂–∏–µ" —Å–¥–≤–∏–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –º–µ—Å—Ç–æ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
                    row_offset = 1 if category == "–û—Ä—É–∂–∏–µ" else 0
                    current_row = (i // 5) + row_offset
                    
                    button = discord.ui.Button(
                        label=item[:80] if len(item) > 80 else item,  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª–∏–Ω—ã
                        style=discord.ButtonStyle.secondary,
                        custom_id=unique_id,  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID!
                        row=current_row  # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ä—è–¥–∞–º —Å —É—á–µ—Ç–æ–º offset
                    )
                    button.callback = self._create_item_callback(item)
                    self.add_item(button)
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞ '{item}': {e}")
        
        print(f"üîç VIEW_CREATED: –î–æ–±–∞–≤–ª–µ–Ω–æ {len(self.children)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ view")

    def _create_item_callback(self, item_name: str):
        """–°–æ–∑–¥–∞—Ç—å callback –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞"""        # –í–ê–ñ–ù–û: –∑–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é, –∞ –Ω–µ –ø–æ —Å—Å—ã–ª–∫–µ!
        category = self.category
        warehouse_manager = self.warehouse_manager
        
        async def callback(interaction: discord.Interaction):
            # –û–¢–õ–ê–î–ö–ê: –≤—ã–≤–æ–¥–∏–º —á—Ç–æ –∏–º–µ–Ω–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞–µ–º
            print(f"üîç CALLBACK: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.display_name} –Ω–∞–∂–∞–ª '{item_name}' –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}'")
            
            # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ "–ü—Ä–æ—á–µ–µ"
            if item_name == "–ü—Ä–æ—á–µ–µ":
                from .modals import WarehouseCustomItemModal
                modal = WarehouseCustomItemModal(category, warehouse_manager)
            else:
                # –°–æ–∑–¥–∞–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
                from .modals import WarehouseQuantityModal
                modal = WarehouseQuantityModal(category, item_name, warehouse_manager)
            
            # –ó–∞—â–∏—Ç–∞ –æ—Ç –∏—Å—Ç—ë–∫—à–∏—Ö –∏–Ω—Ç–µ—Ä–∞–∫—Ü–∏–π –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            success = await safe_modal_response(interaction, modal)
            if not success:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞ {item_name}")
            
        return callback

    async def _weapons_info_callback(self, interaction: discord.Interaction):
        """Callback –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –æ—Ä—É–∂–∏—è"""
        try:
            # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ –æ—Ä—É–∂–∏—è
            weapons_info_path = "files/weapons_info.png"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
            import os
            if not os.path.exists(weapons_info_path):
                await interaction.response.send_message(
                    "‚ùå –§–∞–π–ª —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ –æ—Ä—É–∂–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω.",
                    ephemeral=True
                )
                return
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –∫–∞–∫ ephemeral —Å–æ–æ–±—â–µ–Ω–∏–µ
            file = discord.File(weapons_info_path, filename="weapons_info.png")
            
            # –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –∏—Å—Ç—ë–∫—à–∏—Ö –∏–Ω—Ç–µ—Ä–∞–∫—Ü–∏–π
            success = await safe_interaction_response(
                interaction, 
                content="üìä **–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –æ—Ä—É–∂–∏—è:**", 
                file=file
            )
            if not success:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –æ—Ä—É–∂–∏—è")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –æ—Ä—É–∂–∏—è: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –æ—Ä—É–∂–∏—è.",
                ephemeral=True
            )


class WarehousePinMessageView(discord.ui.View):
    """View –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–∫–ª–∞–¥–∞"""
    
    def __init__(self):
        super().__init__(timeout=None)
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–µ–ª–µ–∫—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        self.add_item(WarehouseCategorySelect())


class WarehouseCartView(discord.ui.View):
    """View –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω–æ–π –∑–∞–ø—Ä–æ—Å–æ–≤"""
    
    def __init__(self, cart: WarehouseRequestCart, warehouse_manager: WarehouseManager, is_submitted: bool = False):
        super().__init__(timeout=None)
        self.cart = cart
        self.warehouse_manager = warehouse_manager
        self.is_submitted = is_submitted

    @discord.ui.button(label="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É", style=discord.ButtonStyle.green, emoji="‚úÖ")
    async def confirm_request(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–µ—Å—å –∑–∞–ø—Ä–æ—Å"""
        if self.is_submitted:
            await interaction.response.send_message(
                "‚ùå –ó–∞—è–≤–∫–∞ —É–∂–µ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!",
                ephemeral=True
            )
            return
        
        try:
            # –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –æ—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è –¥–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
            await interaction.response.defer(ephemeral=True)
            
            if self.cart.is_empty():
                await interaction.followup.send(
                    "‚ùå –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞! –î–æ–±–∞–≤—å—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π.",
                    ephemeral=True
                )
                return
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
            submission_channel_id = self.warehouse_manager.get_warehouse_submission_channel()
            if submission_channel_id:
                channel = interaction.guild.get_channel(submission_channel_id)
                if channel:
                    can_request, next_time = await self.warehouse_manager.check_user_cooldown(
                        interaction.user.id, channel, interaction.user
                    )
                    if not can_request and next_time:
                        moscow_tz = timezone(timedelta(hours=3))
                        current_time_moscow = datetime.now(moscow_tz).replace(tzinfo=None)
                        time_left = next_time - current_time_moscow
                        hours = int(time_left.total_seconds() // 3600)
                        minutes = int((time_left.total_seconds() % 3600) // 60)
                        await interaction.followup.send(
                            f"‚è∞ –ö—É–ª–¥–∞—É–Ω! –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ {hours}—á {minutes}–º–∏–Ω",
                            ephemeral=True
                        )
                        return
            
            # –ù–ï —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–¥–µ—Å—å - —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª!
              # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            try:
                from utils.user_cache import prepare_modal_data
                from .modals import WarehouseFinalDetailsModal
                modal_data = await prepare_modal_data(interaction.user.id)
                modal = WarehouseFinalDetailsModal.create_with_prefilled_data(
                    self.cart, self.warehouse_manager, interaction,
                    name=modal_data['name_value'],
                    static=modal_data['static_value'],
                    parent_view=self
                )
                print(f"üöÄ FAST MODAL: –°–æ–∑–¥–∞–Ω–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ {modal_data['source']} –¥–ª—è {interaction.user.display_name}")
                await interaction.response.send_modal(modal)
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
                try:
                    from .modals import WarehouseFinalDetailsModal
                    modal = WarehouseFinalDetailsModal(self.cart, self.warehouse_manager, interaction, parent_view=self)
                    await interaction.response.send_modal(modal)
                except Exception as modal_error:
                    print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º: {modal_error}")
                    if not interaction.response.is_done():
                        await interaction.response.send_message(
                            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–æ—Ä–º—ã –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                            ephemeral=True
                        )
                    else:
                        await interaction.followup.send(
                            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–æ—Ä–º—ã –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                            ephemeral=True
                        )
                    return
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ confirm_request: {e}")

    @discord.ui.button(label="–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", style=discord.ButtonStyle.secondary, emoji="üóëÔ∏è")
    async def clear_cart(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º"""
        if self.is_submitted:
            await interaction.response.send_message(
                "‚ùå –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏!",
                ephemeral=True
            )
            return
            
        confirm_embed = discord.Embed(
            title="‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏",
            description="–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å **–≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã** –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã?\n\n**–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!**",
            color=discord.Color.orange()
        )
        
        # –°–æ–∑–¥–∞–µ–º view –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        confirm_view = ConfirmClearCartView(self.cart, self.warehouse_manager)
        await interaction.response.send_message(embed=confirm_embed, view=confirm_view, ephemeral=True)

    @discord.ui.button(label="–£–¥–∞–ª–∏—Ç—å –ø–æ –Ω–æ–º–µ—Ä—É", style=discord.ButtonStyle.secondary, emoji="‚ùå")
    async def remove_by_number(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –ø–æ –Ω–æ–º–µ—Ä—É –ø–æ–∑–∏—Ü–∏–∏"""
        if self.is_submitted:
            await interaction.response.send_message(
                "‚ùå –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏!",
                ephemeral=True
            )
            return
            
        if self.cart.is_empty():
            await interaction.response.send_message(
                "‚ùå –ö–æ—Ä–∑–∏–Ω–∞ —É–∂–µ –ø—É—Å—Ç–∞!",
                ephemeral=True
            )
            return
        
        from .modals import RemoveItemByNumberModal
        modal = RemoveItemByNumberModal(self.cart, self.warehouse_manager)
        await interaction.response.send_modal(modal)
    
    async def _safe_update_cart_display(self, interaction: discord.Interaction):
        """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã"""
        try:
            if self.cart.is_empty():
                # –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤–æ–∑–≤—Ä–∞—Ç–µ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é
                empty_embed = discord.Embed(
                    title="üì¶ –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞",
                    description="–í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã.\n\n–î–ª—è –Ω–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞.",
                    color=discord.Color.blue()
                )
                empty_embed.set_footer(text="–°–æ–æ–±—â–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å—á–µ–∑–Ω–µ—Ç —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥")
                
                # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
                if interaction.user.id in user_cart_messages:
                    del user_cart_messages[interaction.user.id]
                
                await interaction.response.edit_message(embed=empty_embed, view=None)
                
                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
                await asyncio.sleep(10)
                try:
                    await interaction.delete_original_response()
                except:
                    pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
                    
            else:
                # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                embed = discord.Embed(
                    title="üì¶ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–∫–ª–∞–¥",
                    description=self.cart.get_summary(),
                    color=discord.Color.blue(),
                    timestamp=datetime.now()
                )
                
                embed.add_field(
                    name="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                    value=f"–ü—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ: **{len(self.cart.items)}**\n–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: **{self.cart.get_total_items()}**",
                    inline=False
                )
                
                embed.set_footer(text="–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–µ–¥–º–µ—Ç —É–¥–∞–ª—ë–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã")
                
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π view —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
                new_view = WarehouseCartView(self.cart, self.warehouse_manager, self.is_submitted)
                await interaction.response.edit_message(embed=embed, view=new_view)
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã.",
                ephemeral=True
            )


class ConfirmClearCartView(discord.ui.View):
    """View –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã"""
    
    def __init__(self, cart: WarehouseRequestCart, warehouse_manager: WarehouseManager):
        super().__init__(timeout=30)  # 30 —Å–µ–∫—É–Ω–¥ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        self.cart = cart
        self.warehouse_manager = warehouse_manager
    
    @discord.ui.button(label="‚úÖ –î–∞, –æ—á–∏—Å—Ç–∏—Ç—å", style=discord.ButtonStyle.danger)
    async def confirm_clear(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—á–∏—Å—Ç–∫—É –∫–æ—Ä–∑–∏–Ω—ã"""
        try:
            # –°–ù–ê–ß–ê–õ–ê –ø–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –î–û –æ—á–∏—Å—Ç–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è!
            cart_message = get_user_cart_message(interaction.user.id)
            
            # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
            self.cart.clear()
            
            # –¢–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ–º —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∫–æ—Ä–∑–∏–Ω—ã
            if cart_message:
                try:
                    # –°—Ä–∞–∑—É —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –ë–ï–ó –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –∑–∞–¥–µ—Ä–∂–µ–∫
                    await cart_message.delete()
                    print(f"üßπ CART: –°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã —É–¥–∞–ª–µ–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {interaction.user.id}")
                        
                except (discord.NotFound, discord.HTTPException) as e:
                    print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã: {e}")
            else:
                print(f"‚ö†Ô∏è CART: –°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {interaction.user.id}")
            
            # –í –∫–æ–Ω—Ü–µ –æ—á–∏—â–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ
            clear_user_cart_safe(interaction.user.id, "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –æ—á–∏—Å—Ç–∫—É")
            
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
            await interaction.response.edit_message(content="‚úÖ –ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞!", embed=None, view=None)

            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
            await asyncio.sleep(1)
            try:
                await interaction.delete_original_response()
            except:
                pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
                    
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫–æ—Ä–∑–∏–Ω—ã: {e}")
            try:
                await interaction.response.edit_message(
                    content="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫–æ—Ä–∑–∏–Ω—ã",
                    embed=None,
                    view=None
                )
            except:
                pass
    
    @discord.ui.button(label="‚ùå –û—Ç–º–µ–Ω–∞", style=discord.ButtonStyle.secondary)
    async def cancel_clear(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–û—Ç–º–µ–Ω–∏—Ç—å –æ—á–∏—Å—Ç–∫—É –∫–æ—Ä–∑–∏–Ω—ã"""
        # –ü—Ä–æ—Å—Ç–æ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        await interaction.response.edit_message(content="‚ùå –û—á–∏—Å—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞", embed=None, view=None)
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        await asyncio.sleep(2)
        try:
            await interaction.delete_original_response()
        except:
            pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
    
    async def _auto_delete_message(self, message):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥ (DEPRECATED - –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ delete_original_response)"""
        # –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è ephemeral —Å–æ–æ–±—â–µ–Ω–∏–π
        pass


class WarehouseSubmittedView(discord.ui.View):
    """View –¥–ª—è —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–∏ - —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∫–Ω–æ–ø–æ–∫"""
    
    def __init__(self):
        super().__init__(timeout=None)
        # –ü—É—Å—Ç–∞—è view - —Ç–æ–ª—å–∫–æ –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
