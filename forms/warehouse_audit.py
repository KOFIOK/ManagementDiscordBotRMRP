"""
–°–∏—Å—Ç–µ–º–∞ –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏ —Ä—É—á–Ω–∞—è
–í–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è:
1. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞—É–¥–∏—Ç –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–æ–∫
2. –†—É—á–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –∞—É–¥–∏—Ç–∞ (–≤—ã–¥–∞—á–∞/—á–∏—Å—Ç–∫–∞)
3. –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º –∞—É–¥–∏—Ç–∞
"""

import discord
from datetime import datetime
from typing import Optional
from utils.config_manager import load_config


# =================== PERSISTENT VIEWS –¥–ª—è –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ ===================

class WarehouseAuditPinMessageView(discord.ui.View):
    """View –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞"""
    
    def __init__(self):
        super().__init__(timeout=None)
    
    @discord.ui.button(
        label="üìã –ê—É–¥–∏—Ç –≤—ã–¥–∞—á–∏", 
        style=discord.ButtonStyle.primary, 
        custom_id="warehouse_audit_issue"
    )
    async def create_issue_audit(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–°–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å –∞—É–¥–∏—Ç–∞ –≤—ã–¥–∞—á–∏"""
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            from utils.moderator_auth import has_moderator_permissions
            if not await has_moderator_permissions(interaction.user, interaction.guild):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–µ–π –∞—É–¥–∏—Ç–∞!\n"
                    "–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.",
                    ephemeral=True
                )
                return
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—É–¥–∏—Ç–∞ –≤—ã–¥–∞—á–∏
            modal = WarehouseIssueAuditModal()
            await interaction.response.send_modal(modal)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—É–¥–∏—Ç–∞ –≤—ã–¥–∞—á–∏: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–æ—Ä–º—ã –∞—É–¥–∏—Ç–∞.", ephemeral=True
            )
    
    @discord.ui.button(
        label="üßπ –ê—É–¥–∏—Ç —á–∏—Å—Ç–∫–∏", 
        style=discord.ButtonStyle.secondary, 
        custom_id="warehouse_audit_cleaning"
    )
    async def create_cleaning_audit(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–°–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å –∞—É–¥–∏—Ç–∞ —á–∏—Å—Ç–∫–∏"""
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            from utils.moderator_auth import has_moderator_permissions
            if not await has_moderator_permissions(interaction.user, interaction.guild):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–µ–π –∞—É–¥–∏—Ç–∞!\n"
                    "–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.",
                    ephemeral=True
                )
                return
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—É–¥–∏—Ç–∞ —á–∏—Å—Ç–∫–∏
            modal = WarehouseCleaningAuditModal()
            await interaction.response.send_modal(modal)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—É–¥–∏—Ç–∞ —á–∏—Å—Ç–∫–∏: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–æ—Ä–º—ã –∞—É–¥–∏—Ç–∞.", ephemeral=True
            )


# =================== –ú–û–î–ê–õ–¨–ù–´–ï –û–ö–ù–ê –¥–ª—è –∞—É–¥–∏—Ç–∞ ===================

class WarehouseIssueAuditModal(discord.ui.Modal):
    """–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –∞—É–¥–∏—Ç–∞ –≤—ã–¥–∞—á–∏"""
    
    def __init__(self):
        super().__init__(title="–ê—É–¥–∏—Ç –≤—ã–¥–∞—á–∏ —Å–∫–ª–∞–¥–∞")
        self.recipient_input = discord.ui.TextInput(
            label="–ö–æ–º—É –≤—ã–¥–∞–Ω–æ",
            placeholder="@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è",
            min_length=2,
            max_length=100,
            required=True
        )
        
        self.items_input = discord.ui.TextInput(
            label="–ö–∞–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤—ã–¥–∞–Ω—ã",
            placeholder="–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –≤—ã–¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã",
            style=discord.TextStyle.paragraph,
            min_length=5,
            max_length=1000,
            required=True
        )
        
        self.reason_input = discord.ui.TextInput(
            label="–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞—è–≤–∫—É –∏–ª–∏ –ø—Ä–∏—á–∏–Ω–∞",
            placeholder="–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∑–∞—è–≤–∫—É –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –≤—ã–¥–∞—á–∏",
            style=discord.TextStyle.paragraph,
            min_length=5,
            max_length=500,
            required=True
        )
        
        self.comment_input = discord.ui.TextInput(
            label="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
            placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è",
            style=discord.TextStyle.paragraph,
            min_length=0,
            max_length=300,
            required=False
        )
        
        self.add_item(self.recipient_input)
        self.add_item(self.items_input)
        self.add_item(self.reason_input)
        self.add_item(self.comment_input)
    
    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –∞—É–¥–∏—Ç–∞ –≤—ã–¥–∞—á–∏"""
        try:
            await interaction.response.defer(ephemeral=True)
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –∞—É–¥–∏—Ç–∞
            audit_data = {
                "type": "issue",
                "issuer": interaction.user,
                "recipient": self.recipient_input.value.strip(),
                "items": self.items_input.value.strip(),
                "reason": self.reason_input.value.strip(),
                "comment": self.comment_input.value.strip() if self.comment_input.value else None,
                "timestamp": datetime.now()
            }
            
            success = await create_audit_record(interaction.guild, audit_data)
            
            if not success:
                await interaction.followup.send(
                    "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –∞—É–¥–∏—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞.",
                    ephemeral=True
                )
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏—Ç–∞ –≤—ã–¥–∞—á–∏: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –∞—É–¥–∏—Ç–∞.",
                ephemeral=True
            )


class WarehouseCleaningAuditModal(discord.ui.Modal):
    """–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –∞—É–¥–∏—Ç–∞ —á–∏—Å—Ç–∫–∏"""
    
    def __init__(self):
        super().__init__(title="–ê—É–¥–∏—Ç —á–∏—Å—Ç–∫–∏ —Å–∫–ª–∞–¥–∞")
        
        self.action_input = discord.ui.TextInput(
            label="–ß—Ç–æ –±—ã–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ",
            placeholder="—á–∏—Å—Ç–∫–∞/—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞/—É–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–µ–≥–æ/–ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤",
            style=discord.TextStyle.paragraph,
            min_length=5,
            max_length=500,
            required=True
        )
        
        self.details_input = discord.ui.TextInput(
            label="–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
            placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ",
            style=discord.TextStyle.paragraph,
            min_length=0,
            max_length=800,
            required=False
        )
        
        self.add_item(self.action_input)
        self.add_item(self.details_input)
    
    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –∞—É–¥–∏—Ç–∞ —á–∏—Å—Ç–∫–∏"""
        try:
            await interaction.response.defer(ephemeral=True)
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –∞—É–¥–∏—Ç–∞
            audit_data = {
                "type": "cleaning",
                "cleaner": interaction.user,
                "action": self.action_input.value.strip(),
                "details": self.details_input.value.strip() if self.details_input.value else None,
                "timestamp": datetime.now()
            }
            
            success = await create_audit_record(interaction.guild, audit_data)
            
            if not success:
                await interaction.followup.send(
                    "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –∞—É–¥–∏—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞.",
                    ephemeral=True
                )
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏—Ç–∞ —á–∏—Å—Ç–∫–∏: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –∞—É–¥–∏—Ç–∞.",
                ephemeral=True
            )


# =================== –§–£–ù–ö–¶–ò–ò –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–µ–π –∞—É–¥–∏—Ç–∞ ===================

async def create_audit_record(guild: discord.Guild, audit_data: dict) -> bool:
    """
    –°–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å –∞—É–¥–∏—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞
    
    Args:
        guild: –°–µ—Ä–≤–µ—Ä Discord
        audit_data: –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –∞—É–¥–∏—Ç–∞
        
    Returns:
        bool: True –µ—Å–ª–∏ –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ
    """
    try:
        config = load_config()
        audit_channel_id = config.get('warehouse_audit_channel')
        
        if not audit_channel_id:
            print("‚ùå –ö–∞–Ω–∞–ª –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return False
        
        channel = guild.get_channel(audit_channel_id)
        if not channel:
            print(f"‚ùå –ö–∞–Ω–∞–ª –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω (ID: {audit_channel_id})")
            return False        
        if audit_data["type"] == "issue":
            embed = await create_issue_audit_embed(audit_data)
            await channel.send(embed=embed)
        elif audit_data["type"] == "cleaning":
            embed = await create_cleaning_audit_embed(audit_data)
            # –î–ª—è –∞—É–¥–∏—Ç–∞ —á–∏—Å—Ç–∫–∏ —Å–æ–∑–¥–∞–µ–º content —Å –ø–∏–Ω–≥–∞–º–∏ –∫—É—Ä–∞—Ç–æ—Ä–æ–≤
            content = await create_cleaning_audit_content()
            await channel.send(content=content, embed=embed)
        else:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –∞—É–¥–∏—Ç–∞: {audit_data['type']}")
            return False
        
        print(f"‚úÖ –ó–∞–ø–∏—Å—å –∞—É–¥–∏—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞ –≤ –∫–∞–Ω–∞–ª–µ {channel.name}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –∞—É–¥–∏—Ç–∞: {e}")
        return False


async def create_issue_audit_embed(audit_data: dict) -> discord.Embed:
    """–°–æ–∑–¥–∞—Ç—å embed –¥–ª—è –∑–∞–ø–∏—Å–∏ –∞—É–¥–∏—Ç–∞ –≤—ã–¥–∞—á–∏"""
    embed = discord.Embed(
        title="üìã –ê—É–¥–∏—Ç –≤—ã–¥–∞—á–∏ —Å–∫–ª–∞–¥–∞",
        color=discord.Color.blue(),
        timestamp=audit_data["timestamp"]
    )
    
    embed.add_field(
        name="üë§ –í—ã–¥–∞–ª",
        value=audit_data["issuer"].mention,
        inline=True
    )
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è - –º–æ–∂–µ—Ç –±—ã—Ç—å ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ —Ç–µ–∫—Å—Ç
    recipient_text = audit_data["recipient"]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ Discord ID (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã)
    if recipient_text.isdigit():
        try:
            user_id = int(recipient_text)
            recipient_display = f"<@{user_id}>"
        except ValueError:
            recipient_display = recipient_text
    else:
        recipient_display = recipient_text
    
    embed.add_field(
        name="üë• –ü–æ–ª—É—á–∏–ª",
        value=recipient_display,
        inline=True
    )
    
    embed.add_field(
        name="üì¶ –ü—Ä–µ–¥–º–µ—Ç—ã",
        value=audit_data["items"],
        inline=False
    )
    
    embed.add_field(
        name="üîó –°—Å—ã–ª–∫–∞/–ü—Ä–∏—á–∏–Ω–∞",
        value=audit_data["reason"],
        inline=False
    )
    
    if audit_data.get("comment"):
        embed.add_field(
            name="üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π",
            value=audit_data["comment"],
            inline=False
        )
    
    embed.set_footer(
        text=f"ID –∞—É–¥–∏—Ç–æ—Ä–∞: {audit_data['issuer'].id}",
        icon_url=audit_data["issuer"].display_avatar.url
    )
    
    return embed


async def create_cleaning_audit_embed(audit_data: dict) -> discord.Embed:
    """–°–æ–∑–¥–∞—Ç—å embed –¥–ª—è –∑–∞–ø–∏—Å–∏ –∞—É–¥–∏—Ç–∞ —á–∏—Å—Ç–∫–∏"""
    embed = discord.Embed(
        title="üßπ –ê—É–¥–∏—Ç —á–∏—Å—Ç–∫–∏ —Å–∫–ª–∞–¥–∞",
        color=discord.Color.orange(),
        timestamp=audit_data["timestamp"]
    )
    
    embed.add_field(
        name="üë§ –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π",
        value=audit_data["cleaner"].mention,
        inline=True
    )
    
    embed.add_field(
        name="üîß –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è",
        value=audit_data["action"],
        inline=False
    )
    
    if audit_data.get("details"):
        embed.add_field(
            name="üìã –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏",
            value=audit_data["details"],
            inline=False
        )
    
    embed.set_footer(
        text=f"ID –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ: {audit_data['cleaner'].id}",
        icon_url=audit_data["cleaner"].display_avatar.url
    )
    
    return embed


async def create_automatic_audit_from_approval(
    guild: discord.Guild, 
    moderator: discord.Member, 
    recipient: discord.Member, 
    items: str, 
    request_url: str
) -> bool:
    """
    –°–æ–∑–¥–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –∑–∞–ø–∏—Å—å –∞—É–¥–∏—Ç–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏ —Å–∫–ª–∞–¥–∞
    
    Args:
        guild: –°–µ—Ä–≤–µ—Ä Discord
        moderator: –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –æ–¥–æ–±—Ä–∏–ª –∑–∞—è–≤–∫—É
        recipient: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∏–ª –ø—Ä–µ–¥–º–µ—Ç—ã
        items: –°—Ç—Ä–æ–∫–∞ —Å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ–º –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        request_url: –°—Å—ã–ª–∫–∞ –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –∑–∞—è–≤–∫—É
        
    Returns:
        bool: True –µ—Å–ª–∏ –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ    """
    try:
        audit_data = {
            "type": "issue",
            "issuer": moderator,
            "recipient": recipient.mention,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º mention –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–ø–∏—Å–µ–π
            "items": items,
            "reason": f"[–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞—è–≤–∫—É]({request_url})",
            "comment": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–ø–∏—Å—å –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏",
            "timestamp": datetime.now()
        }
        
        success = await create_audit_record(guild, audit_data)
        
        if success:
            print(f"‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞—É–¥–∏—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –≤—ã–¥–∞—á–∏ {recipient.display_name}")
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞—É–¥–∏—Ç –¥–ª—è {recipient.display_name}")
        
        return success
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞—É–¥–∏—Ç–∞: {e}")
        return False


# =================== –£–¢–ò–õ–ò–¢–´ –¥–ª—è –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ ===================

async def send_warehouse_audit_message(channel: discord.TextChannel) -> bool:
    """
    –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞
    
    Args:
        channel: –ö–∞–Ω–∞–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        
    Returns:
        bool: True –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ
    """
    try:
        embed = discord.Embed(
            title="üìã –ê—É–¥–∏—Ç —Å–∫–ª–∞–¥–∞",
            description=(
                "**–°–∏—Å—Ç–µ–º–∞ —É—á–µ—Ç–∞ –¥–≤–∏–∂–µ–Ω–∏—è —Å–∫–ª–∞–¥—Å–∫–æ–≥–æ –∏–º—É—â–µ—Å—Ç–≤–∞**\n\n"
                "üîπ **–ê—É–¥–∏—Ç –≤—ã–¥–∞—á–∏** - –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤—ã–¥–∞—á–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å–æ —Å–∫–ª–∞–¥–∞\n"
                "üîπ **–ê—É–¥–∏—Ç —á–∏—Å—Ç–∫–∏** - –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ä–∞–±–æ—Ç –ø–æ —á–∏—Å—Ç–∫–µ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ —Å–∫–ª–∞–¥–∞\n\n"
                "‚ö†Ô∏è –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º"
            ),
            color=discord.Color.gold()
        )
        
        embed.add_field(
            name="üìã –ê—É–¥–∏—Ç –≤—ã–¥–∞—á–∏ –≤–∫–ª—é—á–∞–µ—Ç:",
            value="‚Ä¢ –ö—Ç–æ –≤—ã–¥–∞–ª –ø—Ä–µ–¥–º–µ—Ç—ã\n‚Ä¢ –ö–æ–º—É –≤—ã–¥–∞–Ω—ã –ø—Ä–µ–¥–º–µ—Ç—ã\n‚Ä¢ –°–ø–∏—Å–æ–∫ –≤—ã–¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤\n‚Ä¢ –°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞—è–≤–∫—É –∏–ª–∏ –ø—Ä–∏—á–∏–Ω–∞ –≤—ã–¥–∞—á–∏",
            inline=False
        )
        
        embed.add_field(
            name="üßπ –ê—É–¥–∏—Ç —á–∏—Å—Ç–∫–∏ –≤–∫–ª—é—á–∞–µ—Ç:",
            value="‚Ä¢ –ö—Ç–æ –ø—Ä–æ–≤–æ–¥–∏–ª —á–∏—Å—Ç–∫—É\n‚Ä¢ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è (—á–∏—Å—Ç–∫–∞/—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞/—É–¥–∞–ª–µ–Ω–∏–µ)",
            inline=False
        )
        
        embed.set_footer(text="–í—Å–µ –∑–∞–ø–∏—Å–∏ –∞—É–¥–∏—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —Å –æ—Ç–º–µ—Ç–∫–æ–π –≤—Ä–µ–º–µ–Ω–∏")
        
        view = WarehouseAuditPinMessageView()
        message = await channel.send(embed=embed, view=view)
        
        # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await message.pin()
            print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ –≤ {channel.name}")
        except discord.Forbidden:
            print(f"‚ö†Ô∏è –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ {channel.name}")
        except discord.HTTPException as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ {channel.name}: {e}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞: {e}")
        return False


async def restore_warehouse_audit_views(channel: discord.TextChannel) -> bool:
    """
    –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å view –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞
    
    Args:
        channel: –ö–∞–Ω–∞–ª –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞
        
    Returns:
        bool: True –µ—Å–ª–∏ views –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ
    """
    try:
        print(f"üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ views –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ –≤ {channel.name}")
        
        # –ò—â–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ (–Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ)
        restored_count = 0
        
        async for message in channel.history(limit=50):
            if (message.author.id == channel.guild.me.id and 
                message.embeds and 
                len(message.embeds) > 0 and
                message.embeds[0].title and
                "–ê—É–¥–∏—Ç —Å–∫–ª–∞–¥–∞" in message.embeds[0].title):
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ view
                if not message.components:
                    view = WarehouseAuditPinMessageView()
                    try:
                        await message.edit(view=view)
                        print(f"‚úÖ View –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ (ID: {message.id})")
                        restored_count += 1
                    except discord.NotFound:
                        print(f"‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è (ID: {message.id})")
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ view –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ (ID: {message.id}): {e}")
                else:
                    print(f"‚ÑπÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ —É–∂–µ –∏–º–µ–µ—Ç view (ID: {message.id})")
        
        if restored_count > 0:
            print(f"‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ {restored_count} view(s) –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞")
        else:
            print(f"‚ÑπÔ∏è –°–æ–æ–±—â–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ —Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º–∏ views –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ {channel.name}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ views –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞: {e}")
        return False


async def restore_warehouse_audit_pinned_message(channel: discord.TextChannel) -> bool:
    """
    –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
    
    Args:
        channel: –ö–∞–Ω–∞–ª –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞
        
    Returns:
        bool: True –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞—É–¥–∏—Ç–∞ –Ω–∞–π–¥–µ–Ω–æ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
    """
    try:
        # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º —Å—Ä–µ–¥–∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        pinned_messages = await channel.pins()
        
        for message in pinned_messages:
            if (message.author == channel.guild.me and 
                message.embeds and 
                len(message.embeds) > 0 and
                message.embeds[0].title and
                "–ê—É–¥–∏—Ç —Å–∫–ª–∞–¥–∞" in message.embeds[0].title):
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ view
                if not message.components:
                    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º view –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                    view = WarehouseAuditPinMessageView()
                    await message.edit(view=view)
                    print(f"‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω view –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ (ID: {message.id})")
                    return True
                else:
                    print(f"‚úÖ –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ —É–∂–µ –∏–º–µ–µ—Ç view (ID: {message.id})")
                    return True
        
        # –ï—Å–ª–∏ —Å—Ä–µ–¥–∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏—â–µ–º –≤ –∏—Å—Ç–æ—Ä–∏–∏ –∫–∞–Ω–∞–ª–∞
        async for message in channel.history(limit=50):
            if (message.author == channel.guild.me and 
                message.embeds and 
                len(message.embeds) > 0 and
                message.embeds[0].title and
                "–ê—É–¥–∏—Ç —Å–∫–ª–∞–¥–∞" in message.embeds[0].title):
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ view
                if not message.components:
                    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º view –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞
                    view = WarehouseAuditPinMessageView()
                    await message.edit(view=view)
                    print(f"‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω view –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏ (ID: {message.id})")
                    
                    # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
                    if not message.pinned:
                        try:
                            await message.pin()
                            print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ (ID: {message.id})")
                        except discord.Forbidden:
                            print(f"‚ö†Ô∏è –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞")
                        except discord.HTTPException as e:
                            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞: {e}")
                    
                    return True
                else:
                    print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏ —É–∂–µ –∏–º–µ–µ—Ç view (ID: {message.id})")
                    
                    # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ
                    if not message.pinned:
                        try:
                            await message.pin()
                            print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ (ID: {message.id})")
                        except discord.Forbidden:
                            print(f"‚ö†Ô∏è –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞")
                        except discord.HTTPException as e:
                            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞: {e}")
                    
                    return True
        
        return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞ —Å–∫–ª–∞–¥–∞: {e}")
        return False


async def create_cleaning_audit_content() -> str:
    """–°–æ–∑–¥–∞—Ç—å content —Å –ø–∏–Ω–≥–∞–º–∏ –∫—É—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è –∞—É–¥–∏—Ç–∞ —á–∏—Å—Ç–∫–∏"""
    config = load_config()
    curators = config.get('warehouse_audit_curators', [])
    
    if not curators:
        return "-# –ö—É—Ä–∞—Ç–æ—Ä—ã –ì–û –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    
    curator_mentions = []
    for curator in curators:
        if isinstance(curator, str) and curator.isdigit():
            # –≠—Ç–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            curator_mentions.append(f"<@{curator}>")
        elif isinstance(curator, str) and curator.startswith('<@&') and curator.endswith('>'):
            # –≠—Ç–æ —Ä–æ–ª—å
            curator_mentions.append(curator)
        elif isinstance(curator, str):
            # –≠—Ç–æ —Ç–µ–∫—Å—Ç –∏–ª–∏ –∏–º—è - –Ω–µ –ø–∏–Ω–≥—É–µ–º
            continue
    
    if curator_mentions:
        return f"-# {' '.join(curator_mentions)}"
    else:
        return "-# –ö—É—Ä–∞—Ç–æ—Ä—ã –ì–û –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
