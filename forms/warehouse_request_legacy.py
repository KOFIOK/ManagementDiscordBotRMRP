"""
–§–æ—Ä–º—ã –∏ UI —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Å–∫–ª–∞–¥–∞ - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
–í–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –∫–Ω–æ–ø–∫–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
"""

import re
import asyncio
import discord
import traceback
from datetime import datetime
from typing import Optional, Dict, List
from utils.warehouse_manager import WarehouseManager
from utils.user_database import UserDatabase


# =================== PERSISTENT VIEWS –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ ===================

class WarehousePersistentRequestView(discord.ui.View):
    """Persistent View –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –æ–¥–∏–Ω–æ—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–∫–ª–∞–¥–∞"""
    
    def __init__(self):
        super().__init__(timeout=None)
    @discord.ui.button(label="‚úÖ –í—ã–¥–∞—Ç—å —Å–∫–ª–∞–¥", style=discord.ButtonStyle.green, custom_id="warehouse_approve", row=0)
    async def approve_request(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–û–¥–æ–±—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å —Å–∫–ª–∞–¥–∞"""
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            from utils.moderator_auth import has_moderator_permissions
            if not await has_moderator_permissions(interaction.user, interaction.guild):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è!", ephemeral=True
                )
                return            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ embed
            embed = interaction.message.embeds[0]
            embed.color = discord.Color.green()
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–¥–æ–±—Ä–µ–Ω–∏–∏
            embed.add_field(
                name="‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ", 
                value=f"*–°–∫–ª–∞–¥ –≤—ã–¥–∞–ª: {interaction.user.mention}*", 
                inline=False
            )
            
            # –ó–∞–º–µ–Ω—è–µ–º view –Ω–∞ –∫–Ω–æ–ø–∫—É —Å—Ç–∞—Ç—É—Å–∞ "–û–¥–æ–±—Ä–µ–Ω–æ" –∏ –æ—á–∏—â–∞–µ–º –ø–∏–Ω–≥–∏
            status_view = WarehouseStatusView(status="approved")
            
            await interaction.response.edit_message(content="", embed=embed, view=status_view)
              # üìã –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –°–û–ó–î–ê–ù–ò–ï –ó–ê–ü–ò–°–ò –ê–£–î–ò–¢–ê
            try:
                from forms.warehouse.audit import create_automatic_audit_from_approval
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ embed'–∞ –∑–∞—è–≤–∫–∏
                recipient_id = None
                items_list = []
                
                # –ò—â–µ–º ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è –≤ footer
                if embed.footer and embed.footer.text and "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:" in embed.footer.text:
                    try:
                        recipient_id = int(embed.footer.text.split("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")[-1].strip())
                    except (ValueError, IndexError):
                        pass
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ description
                if embed.description:
                    # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ (–æ–±—ã—á–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç √ó –∏–ª–∏ x)
                    for line in embed.description.split('\n'):
                        if '√ó' in line or 'x' in line:
                            items_list.append(line.strip())
                
                # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ description, –∏—â–µ–º –≤ –ø–æ–ª—è—Ö
                if not items_list:
                    for field in embed.fields:
                        if any(keyword in field.name.lower() for keyword in ['–ø—Ä–µ–¥–º–µ—Ç', '–∑–∞–ø—Ä–æ—Å', '–∑–∞—è–≤–∫–∞']):
                            if field.value:
                                for line in field.value.split('\n'):
                                    if '√ó' in line or 'x' in line:
                                        items_list.append(line.strip())
                
                items_text = '\n'.join(items_list) if items_list else "–ü—Ä–µ–¥–º–µ—Ç—ã –Ω–µ —É–∫–∞–∑–∞–Ω—ã"
                request_url = interaction.message.jump_url
                
                # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –∞—É–¥–∏—Ç–∞, –µ—Å–ª–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω
                if recipient_id:
                    recipient = interaction.guild.get_member(recipient_id)
                    if recipient:
                        await create_automatic_audit_from_approval(
                            interaction.guild,
                            interaction.user,  # –º–æ–¥–µ—Ä–∞—Ç–æ—Ä
                            recipient,         # –ø–æ–ª—É—á–∞—Ç–µ–ª—å
                            items_text,        # –ø—Ä–µ–¥–º–µ—Ç—ã
                            request_url        # —Å—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞—è–≤–∫—É
                        )
                        print(f"üìã AUTO AUDIT: –°–æ–∑–¥–∞–Ω–∞ –∑–∞–ø–∏—Å—å –∞—É–¥–∏—Ç–∞ –¥–ª—è –≤—ã–¥–∞—á–∏ {recipient.display_name}")
                    else:
                        print(f"‚ö†Ô∏è AUTO AUDIT: –ü–æ–ª—É—á–∞—Ç–µ–ª—å —Å ID {recipient_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
                else:
                    print(f"‚ö†Ô∏è AUTO AUDIT: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏–∑ –∑–∞—è–≤–∫–∏")
                    
            except Exception as audit_error:
                print(f"‚ùå AUTO AUDIT: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞—É–¥–∏—Ç–∞: {audit_error}")
                # –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –æ–¥–æ–±—Ä–µ–Ω–∏—è –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –∞—É–¥–∏—Ç–∞
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ —Å–∫–ª–∞–¥–∞: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.", ephemeral=True
            )
    
    @discord.ui.button(label="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", style=discord.ButtonStyle.red, custom_id="warehouse_reject", row=0)
    async def reject_request(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å —Å–∫–ª–∞–¥–∞"""
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            from utils.moderator_auth import has_moderator_permissions
            if not await has_moderator_permissions(interaction.user, interaction.guild):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è!", ephemeral=True
                )
                return

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–∞–∑–∞
            rejection_modal = RejectionReasonModal(interaction.message)
            await interaction.response.send_modal(rejection_modal)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ —Å–∫–ª–∞–¥–∞: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.",
                ephemeral=True
            )

    @discord.ui.button(label="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∑–∞–ø—Ä–æ—Å", style=discord.ButtonStyle.secondary, custom_id="warehouse_delete", row=1)
    async def delete_request(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–£–¥–∞–ª–∏—Ç—å –∑–∞–ø—Ä–æ—Å (–¥–æ—Å—Ç—É–ø–Ω–æ –∞–≤—Ç–æ—Ä—É –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ
            can_delete = await self._check_delete_permissions(interaction)
            if not can_delete:
                return
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º ephemeral —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            embed = discord.Embed(
                title="‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è",
                description="–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å —Å–∫–ª–∞–¥–∞?\n\n**–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!**",
                color=discord.Color.orange()
            )
            confirm_view = DeletionConfirmView(interaction.message)
            await interaction.response.send_message(embed=embed, view=confirm_view, ephemeral=True)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ —Å–∫–ª–∞–¥–∞: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.", ephemeral=True
            )

    @discord.ui.button(label="üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", style=discord.ButtonStyle.secondary, custom_id="warehouse_edit", row=1)
    async def edit_request(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞—è–≤–∫—É (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º)"""
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            from utils.moderator_auth import has_moderator_permissions
            if not await has_moderator_permissions(interaction.user, interaction.guild):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞—è–≤–æ–∫!", ephemeral=True
                )
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞—è–≤–∫–∞ –µ—â—ë –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ (–Ω–µ—Ç —Å—Ç–∞—Ç—É—Å–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è/–æ—Ç–∫–∞–∑–∞)
            embed = interaction.message.embeds[0]
            embed_text = str(embed.to_dict())
            
            if "‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ" in embed_text or "‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ" in embed_text:
                await interaction.response.send_message(
                    "‚ùå –ù–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é –∑–∞—è–≤–∫—É!", ephemeral=True
                )
                return
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º select menu —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            view = WarehouseEditSelectView(interaction.message)
            await interaction.response.send_message(
                "üìù –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:",
                view=view,
                ephemeral=True
            )
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞—è–≤–∫–∏: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.",
                ephemeral=True
            )
    
    async def _check_delete_permissions(self, interaction: discord.Interaction) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞"""
        try:
            # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∏—Å—Ç–µ–º–Ω—ã–º –∏–ª–∏ Discord –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
            from utils.moderator_auth import has_admin_permissions
            if await has_admin_permissions(interaction.user, interaction.guild):
                return True
            
            # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–æ–º –∑–∞–ø—Ä–æ—Å–∞
            if interaction.message.embeds:
                embed = interaction.message.embeds[0]
                if embed.footer and embed.footer.text:
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∞–≤—Ç–æ—Ä–∞ –∏–∑ footer
                    footer_text = embed.footer.text
                    if "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:" in footer_text:
                        try:
                            author_id = int(footer_text.split("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")[-1].strip())
                            if author_id == interaction.user.id:
                                return True
                        except (ValueError, IndexError):
                            pass
            
            # –ï—Å–ª–∏ –Ω–∏ –æ–¥–Ω–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ - –æ—Ç–∫–∞–∑—ã–≤–∞–µ–º –≤ –¥–æ—Å—Ç—É–ø–µ
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞!\n"
                "–£–¥–∞–ª–∏—Ç—å –∑–∞–ø—Ä–æ—Å –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –µ–≥–æ –∞–≤—Ç–æ—Ä –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.",
                ephemeral=True
            )
            return False
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞.", ephemeral=True
            )
            return False


class WarehousePersistentMultiRequestView(discord.ui.View):
    """Persistent View –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–∫–ª–∞–¥–∞"""
    
    def __init__(self):
        super().__init__(timeout=None)
    
    @discord.ui.button(label="‚úÖ –í—ã–¥–∞—Ç—å —Å–∫–ª–∞–¥", style=discord.ButtonStyle.green, custom_id="warehouse_multi_approve", row=0)
    async def approve_all_requests(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–û–¥–æ–±—Ä–∏—Ç—å –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –≤ –∑–∞—è–≤–∫–µ"""
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            from utils.moderator_auth import has_moderator_permissions
            if not await has_moderator_permissions(interaction.user, interaction.guild):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è!", ephemeral=True
                )
                return

            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ embed
            embed = interaction.message.embeds[0]
            embed.color = discord.Color.green()
              # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–¥–æ–±—Ä–µ–Ω–∏–∏
            embed.add_field(
                name="‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ", 
                value=f"*–û–¥–æ–±—Ä–∏–ª: {interaction.user.mention}*", 
                inline=False
            )
            
            # –ó–∞–º–µ–Ω—è–µ–º view –Ω–∞ –∫–Ω–æ–ø–∫—É —Å—Ç–∞—Ç—É—Å–∞ "–û–¥–æ–±—Ä–µ–Ω–æ" –∏ –æ—á–∏—â–∞–µ–º –ø–∏–Ω–≥–∏
            status_view = WarehouseStatusView(status="approved")
            
            await interaction.response.edit_message(content="", embed=embed, view=status_view)
              # üìã –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –°–û–ó–î–ê–ù–ò–ï –ó–ê–ü–ò–°–ò –ê–£–î–ò–¢–ê –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
            try:
                from forms.warehouse.audit import create_automatic_audit_from_approval
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ embed'–∞ –∑–∞—è–≤–∫–∏
                recipient_id = None
                items_list = []
                
                # –ò—â–µ–º ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è –≤ footer
                if embed.footer and embed.footer.text and "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:" in embed.footer.text:
                    try:
                        recipient_id = int(embed.footer.text.split("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")[-1].strip())
                    except (ValueError, IndexError):
                        pass
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ description (–¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤)
                if embed.description:
                    for line in embed.description.split('\n'):
                        if '√ó' in line or 'x' in line:
                            items_list.append(line.strip())
                
                # –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è embed'–∞
                if not items_list:
                    for field in embed.fields:
                        if any(keyword in field.name.lower() for keyword in ['–ø—Ä–µ–¥–º–µ—Ç', '–∑–∞–ø—Ä–æ—Å', '–∑–∞—è–≤–∫–∞']):
                            if field.value:
                                for line in field.value.split('\n'):
                                    if '√ó' in line or 'x' in line:
                                        items_list.append(line.strip())
                
                items_text = '\n'.join(items_list) if items_list else "–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å - –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–µ —É–∫–∞–∑–∞–Ω—ã"
                request_url = interaction.message.jump_url
                
                # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –∞—É–¥–∏—Ç–∞, –µ—Å–ª–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω
                if recipient_id:
                    recipient = interaction.guild.get_member(recipient_id)
                    if recipient:
                        await create_automatic_audit_from_approval(
                            interaction.guild,
                            interaction.user,  # –º–æ–¥–µ—Ä–∞—Ç–æ—Ä
                            recipient,         # –ø–æ–ª—É—á–∞—Ç–µ–ª—å
                            items_text,        # –ø—Ä–µ–¥–º–µ—Ç—ã
                            request_url        # —Å—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞—è–≤–∫—É
                        )
                        print(f"üìã AUTO AUDIT: –°–æ–∑–¥–∞–Ω–∞ –∑–∞–ø–∏—Å—å –∞—É–¥–∏—Ç–∞ –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –≤—ã–¥–∞—á–∏ {recipient.display_name}")
                    else:
                        print(f"‚ö†Ô∏è AUTO AUDIT: –ü–æ–ª—É—á–∞—Ç–µ–ª—å —Å ID {recipient_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
                else:
                    print(f"‚ö†Ô∏è AUTO AUDIT: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–∏")
                    
            except Exception as audit_error:
                print(f"‚ùå AUTO AUDIT: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞—É–¥–∏—Ç–∞: {audit_error}")
                # –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –æ–¥–æ–±—Ä–µ–Ω–∏—è –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –∞—É–¥–∏—Ç–∞
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞!", ephemeral=True
            )
    
    @discord.ui.button(label="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", style=discord.ButtonStyle.red, custom_id="warehouse_multi_reject", row=0)
    async def reject_all_requests(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–û—Ç–∫–ª–æ–Ω–∏—Ç—å –≤—Å—é –∑–∞—è–≤–∫—É"""
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            from utils.moderator_auth import has_moderator_permissions
            if not await has_moderator_permissions(interaction.user, interaction.guild):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è!", ephemeral=True
                )
                return

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–∞–∑–∞
            rejection_modal = RejectionReasonModal(interaction.message)
            await interaction.response.send_modal(rejection_modal)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–∏: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.", ephemeral=True
            )    @discord.ui.button(label="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∑–∞–ø—Ä–æ—Å", style=discord.ButtonStyle.secondary, custom_id="warehouse_multi_delete", row=1)
    async def delete_all_requests(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–£–¥–∞–ª–∏—Ç—å –≤—Å—é –∑–∞—è–≤–∫—É (–¥–æ—Å—Ç—É–ø–Ω–æ –∞–≤—Ç–æ—Ä—É –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ
            can_delete = await self._check_delete_permissions(interaction)
            if not can_delete:
                return
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º ephemeral —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            embed = discord.Embed(
                title="‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è",
                description="–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å —Å–∫–ª–∞–¥–∞?\n\n**–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!**",
                color=discord.Color.orange()
            )
            
            confirm_view = DeletionConfirmView(interaction.message)
            await interaction.response.send_message(embed=embed, view=confirm_view, ephemeral=True)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —É–¥–∞–ª–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–∏: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.", ephemeral=True
            )

    @discord.ui.button(label="üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", style=discord.ButtonStyle.secondary, custom_id="warehouse_multi_edit", row=1)
    async def edit_multi_request(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∑–∞—è–≤–∫—É (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º)"""
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            from utils.moderator_auth import has_moderator_permissions
            if not await has_moderator_permissions(interaction.user, interaction.guild):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞—è–≤–æ–∫!", ephemeral=True
                )
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞—è–≤–∫–∞ –µ—â—ë –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ (–Ω–µ—Ç —Å—Ç–∞—Ç—É—Å–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è/–æ—Ç–∫–∞–∑–∞)
            embed = interaction.message.embeds[0]
            embed_text = str(embed.to_dict())
            
            if "‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ" in embed_text or "‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ" in embed_text:
                await interaction.response.send_message(
                    "‚ùå –ù–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é –∑–∞—è–≤–∫—É!", ephemeral=True
                )
                return
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º select menu —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            view = WarehouseEditSelectView(interaction.message)
            await interaction.response.send_message(
                "üìù –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:",
                view=view,
                ephemeral=True
            )
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–∏: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.", ephemeral=True
            )
    
    async def _check_delete_permissions(self, interaction: discord.Interaction) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞"""
        try:
            # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∏—Å—Ç–µ–º–Ω—ã–º –∏–ª–∏ Discord –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
            from utils.moderator_auth import has_admin_permissions
            if await has_admin_permissions(interaction.user, interaction.guild):
                return True
            
            # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–æ–º –∑–∞–ø—Ä–æ—Å–∞
            if interaction.message.embeds:
                embed = interaction.message.embeds[0]
                if embed.footer and embed.footer.text:
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∞–≤—Ç–æ—Ä–∞ –∏–∑ footer
                    footer_text = embed.footer.text
                    if "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:" in footer_text:
                        try:
                            author_id = int(footer_text.split("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")[-1].strip())
                            if author_id == interaction.user.id:
                                return True
                        except (ValueError, IndexError):
                            pass
            
            # –ï—Å–ª–∏ –Ω–∏ –æ–¥–Ω–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ - –æ—Ç–∫–∞–∑—ã–≤–∞–µ–º –≤ –¥–æ—Å—Ç—É–ø–µ
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞!\n"
                "–£–¥–∞–ª–∏—Ç—å –∑–∞–ø—Ä–æ—Å –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –µ–≥–æ –∞–≤—Ç–æ—Ä –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.",
                ephemeral=True
            )
            return False
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞.", ephemeral=True
            )
            return False


# =================== –î–ê–ù–ù–´–ï –ö–û–†–ó–ò–ù–´ ===================

class WarehouseRequestItem:
    """–ö–ª–∞—Å—Å –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ"""
    
    def __init__(self, category: str, item_name: str, quantity: int, user_name: str, 
                 user_static: str, position: str, rank: str):
        self.category = category
        self.item_name = item_name
        self.quantity = quantity
        self.user_name = user_name
        self.user_static = user_static
        self.position = position
        self.rank = rank
        self.timestamp = datetime.now()
    
    def __str__(self):
        return f"**{self.item_name}** √ó {self.quantity}"


class WarehouseRequestCart:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω–æ–π –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–∫–ª–∞–¥–∞"""
    
    def __init__(self, user_id: int):
        self.user_id = user_id
        self.items: List[WarehouseRequestItem] = []
        self.created_at = datetime.now()
    
    def add_item(self, item: WarehouseRequestItem):
        """–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω—É"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –ø—Ä–µ–¥–º–µ—Ç
        for existing_item in self.items:
            if (existing_item.category == item.category and 
                existing_item.item_name == item.item_name):
                # –ï—Å–ª–∏ –µ—Å—Ç—å, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                existing_item.quantity += item.quantity
                return
          # –ï—Å–ª–∏ –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç
        self.items.append(item)
    
    def remove_item_by_index(self, index: int):
        """–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –ø–æ –∏–Ω–¥–µ–∫—Å—É (0-based)"""
        if 0 <= index < len(self.items):
            self.items.pop(index)
            return True
        return False
    
    def clear(self):
        """–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É"""
        self.items.clear()
    
    def is_empty(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø—É—Å—Ç–∞ –ª–∏ –∫–æ—Ä–∑–∏–Ω–∞"""
        return len(self.items) == 0
    
    def get_total_items(self) -> int:
        """–ü–æ–ª—É—á–∏—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤"""
        return sum(item.quantity for item in self.items)    
    def get_summary(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã"""
        if self.is_empty():
            return "–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞"
        
        summary = []
        for i, item in enumerate(self.items, 1):
            summary.append(f"{i}. {str(item)}")
        
        return "\n".join(summary)
    
    def get_summary_without_numbers(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –±–µ–∑ –Ω–æ–º–µ—Ä–æ–≤ (–¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –∑–∞—è–≤–∫–∏)"""
        if self.is_empty():
            return "–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞"
        
        summary = []
        for item in self.items:
            summary.append(str(item))
        
        return "\n".join(summary)
    
    def get_item_quantity(self, category: str, item_name: str) -> int:
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ"""
        for item in self.items:
            if item.category == category and item.item_name == item_name:
                return item.quantity
        return 0


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_carts: Dict[int, WarehouseRequestCart] = {}

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –∫–æ—Ä–∑–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
user_cart_messages: Dict[int, discord.Message] = {}


def get_user_cart(user_id: int) -> WarehouseRequestCart:
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if user_id not in user_carts:
        user_carts[user_id] = WarehouseRequestCart(user_id)
    return user_carts[user_id]


def clear_user_cart(user_id: int):
    """–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ"""
    try:
        cart_cleared = False
        message_cleared = False
        
        if user_id in user_carts:
            del user_carts[user_id]
            cart_cleared = True
            
        if user_id in user_cart_messages:
            del user_cart_messages[user_id]
            message_cleared = True
            
        if cart_cleared or message_cleared:
            print(f"üßπ CART CLEANUP: –û—á–∏—â–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} (–∫–æ—Ä–∑–∏–Ω–∞: {'‚úÖ' if cart_cleared else '‚ùå'}, —Å–æ–æ–±—â–µ–Ω–∏–µ: {'‚úÖ' if message_cleared else '‚ùå'})")
        
    except Exception as e:
        print(f"‚ùå CART CLEANUP ERROR: –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã –¥–ª—è {user_id}: {e}")


def clear_user_cart_safe(user_id: int, reason: str = "unknown"):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ø—Ä–∏—á–∏–Ω—ã"""
    try:
        print(f"üßπ CART SAFE CLEAR: –ù–∞—á–∞—Ç–∞ –æ—á–∏—Å—Ç–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}, –ø—Ä–∏—á–∏–Ω–∞: {reason}")
        clear_user_cart(user_id)
    except Exception as e:
        print(f"‚ùå CART SAFE CLEAR ERROR: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã –¥–ª—è {user_id}: {e}")


def get_user_cart_message(user_id: int) -> Optional[discord.Message]:
    """–ü–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    return user_cart_messages.get(user_id)


def set_user_cart_message(user_id: int, message: discord.Message):
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_cart_messages[user_id] = message


# =================== –ú–û–î–ê–õ–¨–ù–´–ï –û–ö–ù–ê ===================

class WarehouseRequestModal(discord.ui.Modal):
    """–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Å–∫–ª–∞–¥–∞"""
    
    def __init__(self, category: str, item_name: str, warehouse_manager: WarehouseManager, user_data=None):
        super().__init__(title=f"–ó–∞–ø—Ä–æ—Å: {item_name}")
        self.category = category
        self.item_name = item_name
        self.warehouse_manager = warehouse_manager
        
        # Pre-fill name and static if user data is available
        name_value = ""
        static_value = ""
        name_placeholder = "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é"
        static_placeholder = "–ù–∞–ø—Ä–∏–º–µ—Ä: 123-456"
        
        if user_data:
            name_value = user_data.get('full_name', '')
            static_value = user_data.get('static', '')
            if name_value:
                name_placeholder = f"–î–∞–Ω–Ω—ã–µ –∏–∑ —Ä–µ–µ—Å—Ç—Ä–∞: {name_value}"
            if static_value:
                static_placeholder = f"–î–∞–Ω–Ω—ã–µ –∏–∑ —Ä–µ–µ—Å—Ç—Ä–∞: {static_value}"
        
        # –ü–æ–ª—è —Ñ–æ—Ä–º—ã
        self.name_input = discord.ui.TextInput(
            label="–ò–º—è –§–∞–º–∏–ª–∏—è",
            placeholder=name_placeholder,
            default=name_value,
            min_length=3,
            max_length=50,
            required=True
        )
        
        self.static_input = discord.ui.TextInput(
            label="–°—Ç–∞—Ç–∏–∫",
            placeholder=static_placeholder,
            default=static_value,
            min_length=5,
            max_length=10,
            required=True
        )
        
        self.quantity_input = discord.ui.TextInput(
            label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ",
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤",
            min_length=1,
            max_length=10,
            required=True
        )
        
        self.add_item(self.name_input)
        self.add_item(self.static_input)
        self.add_item(self.quantity_input)

    @classmethod
    async def create_with_user_data(cls, category: str, item_name: str, warehouse_manager: WarehouseManager, user_id: int):
        """
        Create WarehouseRequestModal with auto-filled user data from database
        """
        try:
            # Try to get user data from personnel database
            user_data = await UserDatabase.get_user_info(user_id)
            return cls(category, item_name, warehouse_manager, user_data=user_data)
        except Exception as e:
            print(f"‚ùå Error loading user data for warehouse modal: {e}")
            # Fallback to empty modal
            return cls(category, item_name, warehouse_manager)

    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É"""
        try:
            # –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ç–∞–π–º–∞—É—Ç–∞
            await interaction.response.defer(ephemeral=True)
            
            # –ü–æ–∫–∞–∑–∞—Ç—å –±—ã—Å—Ç—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —Ñ–æ—Ä–º—ã –∑–∞–ø—Ä–æ—Å–∞
            quick_embed = discord.Embed(
                title="‚è≥ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–æ—Ä–º—ã –∑–∞–ø—Ä–æ—Å–∞...",
                description="–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∞—à –∑–∞–ø—Ä–æ—Å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...",
                color=discord.Color.orange()
            )
            await interaction.followup.send(embed=quick_embed, ephemeral=True)
            
            # –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
            try:
                quantity = int(self.quantity_input.value.strip())
                if quantity <= 0:
                    raise ValueError("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0")
            except ValueError:
                error_embed = discord.Embed(
                    title="‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
                    description="–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ! –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.",
                    color=discord.Color.red()
                )
                await interaction.edit_original_response(embed=error_embed)
                return

            # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏–∫–∞
            static = self._format_static(self.static_input.value.strip())
            if not static:
                error_embed = discord.Embed(
                    title="‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
                    description="–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å—Ç–∞—Ç–∏–∫! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: 123456 –∏–ª–∏ 123-456",
                    color=discord.Color.red()
                )
                await interaction.edit_original_response(embed=error_embed)
                return

            name = self.name_input.value.strip()
            
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            user_info = await self.warehouse_manager.get_user_info(interaction.user)
            _, _, position, rank = user_info
            
            # –ï—Å–ª–∏ –∏–º—è –∏–ª–∏ —Å—Ç–∞—Ç–∏–∫ –Ω–µ –≤–≤–µ–¥–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
            if not name:
                name = user_info[0]
            if not static:
                static = user_info[1]

            # –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ —Å —É—á–µ—Ç–æ–º –ª–∏–º–∏—Ç–æ–≤
            category_key = self._get_category_key(self.category)
            is_valid, corrected_quantity, message = self.warehouse_manager.validate_item_request(
                category_key, self.item_name, quantity, position, rank
            )
            
            if not is_valid:
                error_embed = discord.Embed(
                    title="‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
                    description=message,
                    color=discord.Color.red()
                )
                await interaction.edit_original_response(embed=error_embed)
                return

            # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã
            item = WarehouseRequestItem(
                category=self.category,
                item_name=self.item_name,
                quantity=corrected_quantity,
                user_name=name,
                user_static=static,
                position=position,
                rank=rank
            )
            
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
            cart = get_user_cart(interaction.user.id)
            cart.add_item(item)
              # –ü–æ–∫–∞–∑ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await self._show_cart(interaction, cart, message)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ —Å–∫–ª–∞–¥–∞: {e}")
            error_embed = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                color=discord.Color.red()
            )
            await interaction.edit_original_response(embed=error_embed)

    async def _show_cart(self, interaction: discord.Interaction, cart: WarehouseRequestCart, validation_message: str = ""):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        embed = discord.Embed(
            title="üì¶ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–∫–ª–∞–¥",
            description=cart.get_summary(),
            color=discord.Color.blue(),
            timestamp=datetime.now()
        )
        
        if validation_message and "—É–º–µ–Ω—å—à–µ–Ω–æ" in validation_message:
            embed.add_field(
                name="‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ",
                value=validation_message,
                inline=False
            )
        
        embed.add_field(
            name="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
            value=f"–ü—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ: **{len(cart.items)}**\n–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: **{cart.get_total_items()}**",
            inline=False
        )
        
        embed.set_footer(text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –≤—ã–±–æ—Ä —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è –∏–∑ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
        
        view = WarehouseCartView(cart, self.warehouse_manager)
        await interaction.edit_original_response(embed=embed, view=view)

    def _format_static(self, static: str) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏–∫–∞ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤–∏–¥"""
          # –£–¥–∞–ª—è–µ–º –≤—Å–µ, –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä
        digits = re.sub(r'\D', '', static)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É
        if len(digits) == 6:
            return f"{digits[:3]}-{digits[3:]}"
        elif len(digits) == 5:
            return f"{digits[:2]}-{digits[2:]}"
        
        return ""

    def _get_category_key(self, category: str) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        category_mapping = {
            "–û—Ä—É–∂–∏–µ": "–æ—Ä—É–∂–∏–µ",
            "–ë—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç—ã": "–±—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç—ã", 
            "–ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã": "–º–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã",
            "–î—Ä—É–≥–æ–µ": "–¥—Ä—É–≥–æ–µ"
        }
        return category_mapping.get(category, "–¥—Ä—É–≥–æ–µ")


class WarehouseQuantityModal(discord.ui.Modal):
    """–£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ - –°–£–ü–ï–† –ë–´–°–¢–†–ê–Ø –í–ï–†–°–ò–Ø"""
    
    def __init__(self, category: str, item_name: str, warehouse_manager: WarehouseManager):
        super().__init__(title=f"–ó–∞–ø—Ä–æ—Å: {item_name}")
        self.category = category
        self.item_name = item_name
        self.warehouse_manager = warehouse_manager
        
        # –¢–æ–ª—å–∫–æ –ø–æ–ª–µ –¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        self.quantity_input = discord.ui.TextInput(
            label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ",
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤",
            min_length=1,
            max_length=10,
            required=True
        )
        
        self.add_item(self.quantity_input)

    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã - –°–£–ü–ï–† –ë–´–°–¢–†–ê–Ø –≤–µ—Ä—Å–∏—è –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ç–∞–π–º–∞—É—Ç–æ–≤"""
        try:            # ‚ö° –ú–ì–ù–û–í–ï–ù–ù–´–ô DEFER - —Å–∞–º–æ–µ –ø–µ—Ä–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ!
            await interaction.response.defer(ephemeral=True)
              # üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ loading_message
            existing_message = get_user_cart_message(interaction.user.id)
            if existing_message:
                try:
                    await existing_message.delete()
                except (discord.NotFound, discord.HTTPException):
                    pass
                # –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ –ù–ï –∫–æ—Ä–∑–∏–Ω—É
                if interaction.user.id in user_cart_messages:
                    del user_cart_messages[interaction.user.id]
            
            # üîÑ –ü–æ–∫–∞–∑–∞—Ç—å –±—ã—Å—Ç—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞
            quick_embed = discord.Embed(
                title="‚è≥ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–æ—Ä–º—ã –∑–∞–ø—Ä–æ—Å–∞...",
                description="–î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω—É...",
                color=discord.Color.orange()
            )
            loading_message = await interaction.followup.send(embed=quick_embed, ephemeral=True)
            
            # ‚ö° –ë–´–°–¢–†–ê–Ø –≤–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ (–º–∏–∫—Ä–æ—Å–µ–∫—É–Ω–¥—ã)
            try:
                quantity = int(self.quantity_input.value.strip())
                if quantity <= 0:
                    raise ValueError("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0")
                if quantity > 999:  # –†–∞–∑—É–º–Ω—ã–π –ª–∏–º–∏—Ç –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–π
                    raise ValueError("–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ")
            except ValueError as e:
                error_embed = discord.Embed(
                    title="‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
                    description=f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ! {str(e)}",
                    color=discord.Color.red()
                )
                await loading_message.edit(embed=error_embed)
                return

            # üöÄ –°–£–ü–ï–† –ë–´–°–¢–†–û–ï –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫—ç—à–∞ —Å fallback
            print(f"‚ö° ULTRA FAST: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ {self.item_name} –¥–ª—è {interaction.user.display_name}")
              # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä—ã–π –ø—É—Ç—å
            position = "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
            rank = "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
            
            try:
                # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –∫—ç—à–∞ (–Ω–∞–∏–±–æ–ª–µ–µ –±—ã—Å—Ç—Ä–æ)
                from utils.user_cache import get_cached_user_info
                user_data = await get_cached_user_info(interaction.user.id, force_refresh=False)
                
                if user_data:
                    position = user_data.get('position', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
                    rank = user_data.get('rank', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
                    print(f"‚úÖ LIGHTNING CACHE: {position}, {rank}")
                else:
                    # –ë—ã—Å—Ç—Ä—ã–π fallback —á–µ—Ä–µ–∑ —Ä–æ–ª–∏ Discord (–±–µ–∑ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –ë–î)
                    for role in interaction.user.roles:
                        role_name = role.name.lower()
                        if "–æ—Ñ–∏—Ü–µ—Ä" in role_name or "–∫–æ–º–∞–Ω–¥–∏—Ä" in role_name:
                            position = "–û—Ñ–∏—Ü–µ—Ä"
                            break
                        elif "—Å–µ—Ä–∂–∞–Ω—Ç" in role_name:
                            rank = "–°–µ—Ä–∂–∞–Ω—Ç"
                        elif "—Ä—è–¥–æ–≤–æ–π" in role_name:
                            rank = "–†—è–¥–æ–≤–æ–π"
                    print(f"üìã ROLE FAST: {position}, {rank}")
                        
            except Exception as e:
                print(f"‚ö†Ô∏è Fallback –¥–ª—è –¥–∞–Ω–Ω—ã—Ö: {e}")
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

            # üõ°Ô∏è –ü–û–õ–£–ß–ê–ï–ú –ö–û–†–ó–ò–ù–£ –ò –ü–†–û–í–ï–†–Ø–ï–ú –°–£–©–ï–°–¢–í–£–Æ–©–ï–ï –ö–û–õ–ò–ß–ï–°–¢–í–û
            cart = get_user_cart(interaction.user.id)
            current_time = datetime.now()
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
            existing_quantity = cart.get_item_quantity(self.category, self.item_name)
            total_quantity = existing_quantity + quantity  # –°—É–º–º–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
            
            print(f"üìä ITEM CHECK: {self.item_name} - –≤ –∫–æ—Ä–∑–∏–Ω–µ: {existing_quantity}, –¥–æ–±–∞–≤–ª—è–µ–º: {quantity}, –∏—Ç–æ–≥–æ: {total_quantity}")            # ‚ö° –í–ê–õ–ò–î–ê–¶–ò–Ø –° –£–ß–ï–¢–û–ú –ö–û–†–ó–ò–ù–´ - –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã –Ω–∞ —Å—É–º–º–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
            category_key = self._get_category_key(self.category)
            is_valid, corrected_total_quantity, validation_message = self.warehouse_manager.validate_item_request(
                category_key, self.item_name, total_quantity, position, rank
            )
            
            if not is_valid:
                # –ï—Å–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞ –ø–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º –ø—Ä–∏—á–∏–Ω–∞–º (–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ–µ –æ—Ä—É–∂–∏–µ –∏ —Ç.–¥.)
                error_embed = discord.Embed(
                    title="‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
                    description=validation_message,
                    color=discord.Color.red()
                )
                await loading_message.edit(embed=error_embed)
                return
            
            # –í—ã—á–∏—Å–ª—è–µ–º, —Å–∫–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω–æ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å
            final_quantity_to_add = corrected_total_quantity - existing_quantity
            warning_message = ""
            
            # –ï—Å–ª–∏ –ª–∏–º–∏—Ç –±—ã–ª –ø—Ä–µ–≤—ã—à–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
            if "—É–º–µ–Ω—å—à–µ–Ω–æ" in validation_message:
                warning_message = validation_message
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (–±—ã—Å—Ç—Ä–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ)
            for existing_item in cart.items:
                if (existing_item.category == self.category and 
                    existing_item.item_name == self.item_name and
                    (current_time - existing_item.timestamp).total_seconds() < 15):  # –£–≤–µ–ª–∏—á–∏–ª–∏ –¥–æ 15 —Å–µ–∫
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–µ–¥–º–µ—Ç –¥–æ corrected_total_quantity
                    existing_item.quantity = corrected_total_quantity
                    print(f"üîÑ VALIDATED DUPLICATE: –æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–æ {corrected_total_quantity} –¥–ª—è {self.item_name}")
                    await self._show_cart_ultra_fast(interaction, cart, warning_message, loading_message)
                    return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –ø—Ä–µ–¥–º–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω–µ (–±–µ–∑ —É—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏)
            for existing_item in cart.items:
                if (existing_item.category == self.category and 
                    existing_item.item_name == self.item_name):
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–µ–¥–º–µ—Ç –¥–æ corrected_total_quantity
                    existing_item.quantity = corrected_total_quantity
                    existing_item.timestamp = current_time  # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è
                    print(f"üîÑ ITEM UPDATED: {self.item_name} –æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–æ {corrected_total_quantity} (–±—ã–ª–æ {existing_quantity})")
                    await self._show_cart_ultra_fast(interaction, cart, warning_message, loading_message)
                    return
            
            # –ï—Å–ª–∏ –ø—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å corrected_total_quantity
            item = WarehouseRequestItem(
                category=self.category,
                item_name=self.item_name,
                quantity=corrected_total_quantity,
                user_name="",  # –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –ø–æ–∑–∂–µ
                user_static="",  # –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –ø–æ–∑–∂–µ
                position=position,
                rank=rank
            )
            
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É (–ø—Ä–µ–¥–º–µ—Ç–∞ —Ç–æ—á–Ω–æ –Ω–µ—Ç, —Ç–∞–∫ –∫–∞–∫ –º—ã –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ –≤—ã—à–µ)
            cart.items.append(item)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–ø—Ä—è–º—É—é append –≤–º–µ—Å—Ç–æ add_item
            print(f"‚úÖ NEW ITEM CREATED: {self.item_name} x{corrected_total_quantity}")
            
            # üöÄ –°–£–ü–ï–† –±—ã—Å—Ç—Ä–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            await self._show_cart_ultra_fast(interaction, cart, warning_message, loading_message)
            
        except Exception as e:
            print(f"‚ùå CRITICAL ERROR –≤ WarehouseQuantityModal: {e}")
            import traceback
            traceback.print_exc()
            
            try:
                # –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
                if 'loading_message' in locals():
                    error_embed = discord.Embed(
                        title="‚ùå –û—à–∏–±–∫–∞",
                        description="–í—Ä–µ–º–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.",
                        color=discord.Color.red()
                    )
                    await loading_message.edit(embed=error_embed)
                else:
                    await interaction.followup.send(
                        "‚ùå –í—Ä–µ–º–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.",
                        ephemeral=True
                    )
            except:
                print("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ")

    async def _show_cart_ultra_fast(self, interaction: discord.Interaction, cart: WarehouseRequestCart, 
                                   validation_message: str = "", loading_message = None):
        """–£–õ–¨–¢–†–ê-–ë–´–°–¢–†–û–ï –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ç–∞–π–º–∞—É—Ç–æ–≤ Discord"""
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º, –µ—Å–ª–∏ –µ—Å—Ç—å
            description = f"–í –∫–æ—Ä–∑–∏–Ω–µ: **{len(cart.items)}** –ø–æ–∑. | –í—Å–µ–≥–æ: **{cart.get_total_items()}** –µ–¥."
            if validation_message:
                description += f"\n\n{validation_message}"
            
            embed = discord.Embed(
                title="üì¶ –ö–æ—Ä–∑–∏–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞",
                description=description,
                color=discord.Color.green()
            )              # –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –í–°–ï–• –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π –¥–ª—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞
            items_list = []
            for i, item in enumerate(cart.items, 1):
                items_list.append(f"{i}. **{item.item_name}** √ó {item.quantity}")
            items_text = "\n".join(items_list)
            
            embed.add_field(name="–í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ", value=items_text or "–ù–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤", inline=False)
            
            # –ë—ã—Å—Ç—Ä–∞—è view —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º
            view = WarehouseCartView(cart, self.warehouse_manager)
            
            # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1: –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
            if loading_message:
                try:
                    await loading_message.edit(embed=embed, view=view)
                    
                    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å –∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç loading_message
                    existing_message = get_user_cart_message(interaction.user.id)
                    if existing_message and existing_message.id != loading_message.id:
                        try:
                            await existing_message.delete()
                        except (discord.NotFound, discord.HTTPException):
                            pass
                    
                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º loading_message –∫–∞–∫ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
                    set_user_cart_message(interaction.user.id, loading_message)
                    return
                except (discord.NotFound, discord.HTTPException):
                    pass
            
            # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2: –æ–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
            existing_message = get_user_cart_message(interaction.user.id)
            
            if existing_message:
                try:
                    await existing_message.edit(embed=embed, view=view)
                    return
                except (discord.NotFound, discord.HTTPException):
                    pass
            
            # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 3: —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
            try:
                message = await interaction.followup.send(embed=embed, view=view, ephemeral=True)
                set_user_cart_message(interaction.user.id, message)
            except Exception:
                await interaction.followup.send(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: **{cart.items[-1].item_name}** √ó {cart.items[-1].quantity}", ephemeral=True)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ _show_cart_ultra_fast: {e}")
            try:
                await interaction.followup.send("‚úÖ –ü—Ä–µ–¥–º–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!", ephemeral=True)
            except:
                pass

    def _get_category_key(self, category: str) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        category_mapping = {
            "–û—Ä—É–∂–∏–µ": "–æ—Ä—É–∂–∏–µ",
            "–ë—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç—ã": "–±—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç—ã", 
            "–ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã": "–º–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã",
            "–î—Ä—É–≥–æ–µ": "–¥—Ä—É–≥–æ–µ"
        }
        return category_mapping.get(category, "–¥—Ä—É–≥–æ–µ")


# =================== VIEWS ===================

class WarehouseCategorySelect(discord.ui.Select):
    """–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–∫–ª–∞–¥–∞ - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø"""
    
    def __init__(self):
        # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø—Ü–∏–∏, –Ω–µ –∑–∞–≤–∏—Å—è—â–∏–µ –æ—Ç warehouse_manager
        options = [
            discord.SelectOption(
                label="–û—Ä—É–∂–∏–µ",
                emoji="üî´",
                description="–í—ã–±–µ—Ä–∏—Ç–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –æ—Ä—É–∂–∏—è",
                value="weapon"
            ),
            discord.SelectOption(
                label="–ë—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç—ã",
                emoji="ü¶∫",
                description="–í—ã–±–µ—Ä–∏—Ç–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –±—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç–æ–≤",
                value="armor"
            ),
            discord.SelectOption(
                label="–ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã",
                emoji="üíä",
                description="–í—ã–±–µ—Ä–∏—Ç–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–æ–≤",
                value="medical"
            ),
            discord.SelectOption(
                label="–î—Ä—É–≥–æ–µ",
                emoji="üì¶",
                description="–í—ã–±–µ—Ä–∏—Ç–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥—Ä—É–≥–æ–≥–æ –∏–º—É—â–µ—Å—Ç–≤–∞",
                value="other"
            )
        ]
        
        super().__init__(
            placeholder="üì¶ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å–∫–ª–∞–¥—Å–∫–æ–≥–æ –∏–º—É—â–µ—Å—Ç–≤–∞...",
            options=options,
            custom_id="warehouse_category_select"
        )

    async def callback(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        try:
            # –°–æ–∑–¥–∞–µ–º warehouse_manager –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ–∫
            from utils.google_sheets import GoogleSheetsManager
            sheets_manager = GoogleSheetsManager()
            warehouse_manager = WarehouseManager(sheets_manager)
              # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤–∫–ª—é—á–∞—è –∞–¥–º–∏–Ω–æ–≤)
            submission_channel_id = warehouse_manager.get_warehouse_submission_channel()
            if submission_channel_id:
                channel = interaction.guild.get_channel(submission_channel_id)
                if channel:
                    can_request, next_time = await warehouse_manager.check_user_cooldown(
                        interaction.user.id, channel
                    )
                    
                    if not can_request and next_time:
                        # next_time —É–∂–µ –≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–º –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ warehouse_manager
                        from datetime import timezone, timedelta
                        moscow_tz = timezone(timedelta(hours=3))  # UTC+3 –¥–ª—è –ú–æ—Å–∫–≤—ã
                        current_time_moscow = datetime.now(moscow_tz).replace(tzinfo=None)
                        time_left = next_time - current_time_moscow
                        hours = int(time_left.total_seconds() // 3600)
                        minutes = int((time_left.total_seconds() % 3600) // 60)
                        
                        await interaction.response.send_message(
                            f"‚è∞ –ö—É–ª–¥–∞—É–Ω! –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ {hours}—á {minutes}–º–∏–Ω",
                            ephemeral=True
                        )
                        return            # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ value –≤ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            category_mapping = {
                "weapon": "–û—Ä—É–∂–∏–µ",
                "armor": "–ë—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç—ã",
                "medical": "–ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã",
                "other": "–î—Ä—É–≥–æ–µ"
            }
            
            selected_value = self.values[0]
            selected_category = category_mapping.get(selected_value)
            
            if not selected_category:
                await interaction.response.send_message(
                    "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.",
                    ephemeral=True
                )
                return
            
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ warehouse_manager
            category_info = warehouse_manager.item_categories.get(selected_category)
            
            if not category_info:
                await interaction.response.send_message(
                    f"‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{selected_category}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ!",
                    ephemeral=True
                )
                return
            
            # –°–æ–∑–¥–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
            view = WarehouseItemSelectView(selected_category, category_info, warehouse_manager)
            
            embed = discord.Embed(
                title=f"{category_info['emoji']} {selected_category}",
                description="–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞:",
                color=discord.Color.blue()
            )
            
            await interaction.response.send_message(embed=embed, view=view, ephemeral=True)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–∫–ª–∞–¥–∞: {e}")
            import traceback
            traceback.print_exc()
            try:
                await interaction.response.send_message(
                    f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True
                )
            except:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")


class WarehouseItemSelectView(discord.ui.View):
    """View –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø"""
    
    def __init__(self, category: str, category_info: Dict, warehouse_manager: WarehouseManager):
        super().__init__(timeout=None)  # 5 –º–∏–Ω—É—Ç —Ç–∞–π–º–∞—É—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞
        self.category = category
        self.category_info = category_info
        self.warehouse_manager = warehouse_manager
          # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
        items = category_info["items"]
        for i, item in enumerate(items):
            if i < 20:  # –ú–∞–∫—Å–∏–º—É–º 20 –∫–Ω–æ–ø–æ–∫ (4 —Ä—è–¥–∞ –ø–æ 5)
                # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –¥–µ–ª–∞–µ–º custom_id —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏!
                unique_id = f"warehouse_{self.category.lower()}_{i}_{hash(item) % 10000}"
                button = discord.ui.Button(
                    label=item[:80] if len(item) > 80 else item,  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª–∏–Ω—ã
                    style=discord.ButtonStyle.secondary,
                    custom_id=unique_id,  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID!
                    row=i // 5  # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ä—è–¥–∞–º
                )
                button.callback = self._create_item_callback(item)
                self.add_item(button)

    def _create_item_callback(self, item_name: str):
        """–°–æ–∑–¥–∞—Ç—å callback –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞"""
        # –í–ê–ñ–ù–û: –∑–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é, –∞ –Ω–µ –ø–æ —Å—Å—ã–ª–∫–µ!
        category = self.category
        warehouse_manager = self.warehouse_manager
        
        async def callback(interaction: discord.Interaction):
            # –û–¢–õ–ê–î–ö–ê: –≤—ã–≤–æ–¥–∏–º —á—Ç–æ –∏–º–µ–Ω–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞–µ–º
            print(f"üîç CALLBACK: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.display_name} –Ω–∞–∂–∞–ª '{item_name}' –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}'")
            
            # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ "–ü—Ä–æ—á–µ–µ"
            if item_name == "–ü—Ä–æ—á–µ–µ":
                modal = WarehouseCustomItemModal(category, warehouse_manager)
            else:
                # –°–æ–∑–¥–∞–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
                modal = WarehouseQuantityModal(category, item_name, warehouse_manager)
            await interaction.response.send_modal(modal)
            
        return callback


class WarehousePinMessageView(discord.ui.View):
    """View –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–∫–ª–∞–¥–∞ - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø"""
    
    def __init__(self):
        super().__init__(timeout=None)
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–µ–ª–µ–∫—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        self.add_item(WarehouseCategorySelect())


class WarehouseCartView(discord.ui.View):
    """View –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω–æ–π –∑–∞–ø—Ä–æ—Å–æ–≤"""
    
    def __init__(self, cart: WarehouseRequestCart, warehouse_manager: WarehouseManager, is_submitted: bool = False):
        super().__init__(timeout=None)
        self.cart = cart
        self.warehouse_manager = warehouse_manager
        self.is_submitted = is_submitted

    @discord.ui.button(label="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É", style=discord.ButtonStyle.green, emoji="‚úÖ")
    async def confirm_request(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–µ—Å—å –∑–∞–ø—Ä–æ—Å"""
        if self.is_submitted:
            await interaction.response.send_message(
                "‚ùå –ó–∞—è–≤–∫–∞ —É–∂–µ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!",
                ephemeral=True
            )
            return
        
        try:
            if self.cart.is_empty():
                await interaction.response.send_message(
                    "‚ùå –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞! –î–æ–±–∞–≤—å—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π.",
                    ephemeral=True
                )
                return
              # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
            submission_channel_id = self.warehouse_manager.get_warehouse_submission_channel()
            if submission_channel_id:
                channel = interaction.guild.get_channel(submission_channel_id)
                if channel:
                    can_request, next_time = await self.warehouse_manager.check_user_cooldown(
                        interaction.user.id, channel
                    )
                    if not can_request and next_time:
                        from datetime import timezone, timedelta
                        moscow_tz = timezone(timedelta(hours=3))
                        current_time_moscow = datetime.now(moscow_tz).replace(tzinfo=None)
                        time_left = next_time - current_time_moscow
                        hours = int(time_left.total_seconds() // 3600)
                        minutes = int((time_left.total_seconds() % 3600) // 60)
                        await interaction.response.send_message(
                            f"‚è∞ –ö—É–ª–¥–∞—É–Ω! –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ {hours}—á {minutes}–º–∏–Ω",
                            ephemeral=True
                        )
                        return
            
            # –ù–ï —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–¥–µ—Å—å - —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª!
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            try:
                from utils.warehouse_user_data import prepare_modal_data
                modal_data = await prepare_modal_data(interaction.user.id)
                modal = WarehouseFinalDetailsModal.create_with_prefilled_data(
                    self.cart, self.warehouse_manager, interaction,
                    name=modal_data['name_value'],
                    static=modal_data['static_value'],
                    parent_view=self
                )
                print(f"üöÄ FAST MODAL: –°–æ–∑–¥–∞–Ω–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ {modal_data['source']} –¥–ª—è {interaction.user.display_name}")
                await interaction.response.send_modal(modal)
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
                try:
                    modal = WarehouseFinalDetailsModal(self.cart, self.warehouse_manager, interaction, parent_view=self)
                    await interaction.response.send_modal(modal)
                except Exception as modal_error:
                    print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º: {modal_error}")
                    if not interaction.response.is_done():
                        await interaction.response.send_message(
                            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–æ—Ä–º—ã –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                            ephemeral=True
                        )
                    else:
                        await interaction.followup.send(
                            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–æ—Ä–º—ã –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                            ephemeral=True
                        )
                    return
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ confirm_request: {e}")

    @discord.ui.button(label="–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", style=discord.ButtonStyle.secondary, emoji="üóëÔ∏è")
    async def clear_cart(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º"""
        if self.is_submitted:
            await interaction.response.send_message(
                "‚ùå –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏!",
                ephemeral=True
            )
            return
            
        confirm_embed = discord.Embed(
            title="‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏",
            description="–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å **–≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã** –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã?\n\n**–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!**",
            color=discord.Color.orange()
        )
        
        confirm_view = ConfirmClearCartView(self.cart, self.warehouse_manager)
        await interaction.response.send_message(embed=confirm_embed, view=confirm_view, ephemeral=True)

    @discord.ui.button(label="–£–¥–∞–ª–∏—Ç—å –ø–æ –Ω–æ–º–µ—Ä—É", style=discord.ButtonStyle.secondary, emoji="‚ùå")
    async def remove_by_number(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –ø–æ –Ω–æ–º–µ—Ä—É –ø–æ–∑–∏—Ü–∏–∏"""
        if self.is_submitted:
            await interaction.response.send_message(
                "‚ùå –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏!",
                ephemeral=True
            )
            return
            
        if self.cart.is_empty():
            await interaction.response.send_message(
                "‚ùå –ö–æ—Ä–∑–∏–Ω–∞ —É–∂–µ –ø—É—Å—Ç–∞!",
                ephemeral=True
            )
            return
        
        modal = RemoveItemByNumberModal(self.cart, self.warehouse_manager)
        await interaction.response.send_modal(modal)
        await interaction.response.send_modal(modal)
    
    async def _safe_update_cart_display(self, interaction: discord.Interaction):
        """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã"""
        try:
            if self.cart.is_empty():
                # –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤–æ–∑–≤—Ä–∞—Ç–µ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é
                empty_embed = discord.Embed(
                    title="üì¶ –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞",
                    description="–í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã.\n\n–î–ª—è –Ω–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞.",
                    color=discord.Color.blue()
                )
                empty_embed.set_footer(text="–°–æ–æ–±—â–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å—á–µ–∑–Ω–µ—Ç —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥")
                
                # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
                if interaction.user.id in user_cart_messages:
                    del user_cart_messages[interaction.user.id]
                
                await interaction.response.edit_message(embed=empty_embed, view=None)
                
                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
                import asyncio
                await asyncio.sleep(10)
                try:
                    await interaction.delete_original_response()
                except:
                    pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
                    
            else:
                # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                embed = discord.Embed(
                    title="üì¶ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–∫–ª–∞–¥",
                    description=self.cart.get_summary(),
                    color=discord.Color.blue(),
                    timestamp=datetime.now()
                )
                
                embed.add_field(
                    name="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                    value=f"–ü—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ: **{len(self.cart.items)}**\n–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: **{self.cart.get_total_items()}**",
                    inline=False
                )
                
                embed.set_footer(text="–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–µ–¥–º–µ—Ç —É–¥–∞–ª—ë–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã")
                
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π view —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
                new_view = WarehouseCartView(self.cart, self.warehouse_manager, self.is_submitted)
                await interaction.response.edit_message(embed=embed, view=new_view)
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã.",
                ephemeral=True            )


# =================== –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –î–õ–Ø –£–î–ê–õ–ï–ù–ò–Ø –ü–û –ù–û–ú–ï–†–£ ===================

class RemoveItemByNumberModal(discord.ui.Modal):
    """–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É –ø–æ–∑–∏—Ü–∏–∏"""
    def __init__(self, cart: WarehouseRequestCart, warehouse_manager: WarehouseManager):
        super().__init__(title=f"–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç (1-{len(cart.items)})")
        self.cart = cart
        self.warehouse_manager = warehouse_manager
        
        # –¢–æ–ª—å–∫–æ –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ - —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤–∏–¥–∏—Ç –≤ –∫–æ—Ä–∑–∏–Ω–µ
        self.number_input = discord.ui.TextInput(
            label="–ù–æ–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è",
            placeholder=f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ—Ç 1 –¥–æ {len(cart.items)}",
            min_length=1,
            max_length=3,
            required=True
        )
        
        self.add_item(self.number_input)
    
    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É"""
        try:
            await interaction.response.defer(ephemeral=True)
            
            # –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞
            try:
                item_number = int(self.number_input.value.strip())
                if item_number < 1 or item_number > len(self.cart.items):
                    raise ValueError(f"–ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ {len(self.cart.items)}")
            except ValueError as e:
                error_embed = discord.Embed(
                    title="‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
                    description=f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä! {str(e)}",
                    color=discord.Color.red()
                )
                await interaction.followup.send(embed=error_embed, ephemeral=True)
                return
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É–¥–∞–ª—è–µ–º–æ–º –ø—Ä–µ–¥–º–µ—Ç–µ
            removed_item = self.cart.items[item_number - 1]  # -1 –ø–æ—Ç–æ–º—É —á—Ç–æ –Ω—É–º–µ—Ä–∞—Ü–∏—è —Å 0
            
            # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –ø–æ –∏–Ω–¥–µ–∫—Å—É
            self.cart.remove_item_by_index(item_number - 1)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏
            success_embed = discord.Embed(
                title="‚úÖ –ü—Ä–µ–¥–º–µ—Ç —É–¥–∞–ª–µ–Ω",
                description=f"–£–¥–∞–ª–µ–Ω –ø—Ä–µ–¥–º–µ—Ç #{item_number}: **{removed_item.item_name}** √ó {removed_item.quantity}",
                color=discord.Color.green()
            )
            
            # –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ —Å—Ç–∞–ª–∞ –ø—É—Å—Ç–æ–π
            if self.cart.is_empty():
                success_embed.add_field(
                    name="üì¶ –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞",
                    value="–í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã —É–¥–∞–ª–µ–Ω—ã. –î–ª—è –Ω–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞.",
                    inline=False
                )
                
                # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
                clear_user_cart_safe(interaction.user.id, "–∫–æ—Ä–∑–∏–Ω–∞ –æ–ø—É—Å—Ç–æ—à–µ–Ω–∞ —á–µ—Ä–µ–∑ —É–¥–∞–ª–µ–Ω–∏–µ")
                
                await interaction.followup.send(embed=success_embed, ephemeral=True)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                original_message = get_user_cart_message(interaction.user.id)
                if original_message:
                    try:
                        empty_embed = discord.Embed(
                            title="üì¶ –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞",
                            description="–í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã.\n\n–î–ª—è –Ω–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞.",
                            color=discord.Color.blue()
                        )
                        empty_embed.set_footer(text="–°–æ–æ–±—â–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å—á–µ–∑–Ω–µ—Ç —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥")
                        await original_message.edit(embed=empty_embed, view=None)
                        
                        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
                        import asyncio
                        await asyncio.sleep(10)
                        try:
                            await original_message.delete()
                        except:
                            pass
                    except (discord.NotFound, discord.HTTPException):
                        pass
            else:
                # –ö–æ—Ä–∑–∏–Ω–∞ –Ω–µ –ø—É—Å—Ç–∞ - –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                await interaction.followup.send(embed=success_embed, ephemeral=True)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ—Ä–∑–∏–Ω—É
                await self._update_cart_display(interaction)
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É: {e}")
            error_embed = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                color=discord.Color.red()
            )
            await interaction.followup.send(embed=error_embed, ephemeral=True)
    
    async def _update_cart_display(self, interaction: discord.Interaction):
        """–û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è"""
        try:
            original_message = get_user_cart_message(interaction.user.id)
            if original_message:
                # –°–æ–∑–¥–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π embed
                embed = discord.Embed(
                    title="üì¶ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–∫–ª–∞–¥",
                    description=self.cart.get_summary(),
                    color=discord.Color.blue(),
                    timestamp=datetime.now()
                )
                
                embed.add_field(
                    name="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                    value=f"–ü—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ: **{len(self.cart.items)}**\n–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: **{self.cart.get_total_items()}**",
                    inline=False
                )
                
                embed.set_footer(text="–ü—Ä–µ–¥–º–µ—Ç —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã")
                
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π view —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
                new_view = WarehouseCartView(self.cart, self.warehouse_manager)
                await original_message.edit(embed=embed, view=new_view)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã: {e}")


# =================== –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –û–ß–ò–°–¢–ö–ò –ö–û–†–ó–ò–ù–´ ===================

class ConfirmClearCartView(discord.ui.View):
    """View –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã"""
    
    def __init__(self, cart: WarehouseRequestCart, warehouse_manager: WarehouseManager):
        super().__init__(timeout=30)  # 30 —Å–µ–∫—É–Ω–¥ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        self.cart = cart
        self.warehouse_manager = warehouse_manager
    
    @discord.ui.button(label="‚úÖ –î–∞, –æ—á–∏—Å—Ç–∏—Ç—å", style=discord.ButtonStyle.danger)
    async def confirm_clear(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—á–∏—Å—Ç–∫—É –∫–æ—Ä–∑–∏–Ω—ã"""
        try:
            self.cart.clear()
              # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
            if interaction.user.id in user_cart_messages:
                cart_message = user_cart_messages[interaction.user.id]
                clear_user_cart_safe(interaction.user.id, "manual_clear")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
                embed = discord.Embed(
                    title="üóëÔ∏è –ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞",
                    description="–í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã.\n\n–î–ª—è –Ω–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞.",
                    color=discord.Color.orange()
                )
                embed.set_footer(text="–°–æ–æ–±—â–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å—á–µ–∑–Ω–µ—Ç —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥")
                
                await cart_message.edit(embed=embed, view=None)
                
                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
                import asyncio
                asyncio.create_task(self._auto_delete_message(cart_message))
            
            await interaction.response.edit_message(
                content="‚úÖ –ö–æ—Ä–∑–∏–Ω–∞ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞!",
                embed=None,
                view=None
            )
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã: {e}")
            await interaction.response.edit_message(
                content="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫–æ—Ä–∑–∏–Ω—ã.",
                embed=None,
                view=None
            )
    
    @discord.ui.button(label="‚ùå –û—Ç–º–µ–Ω–∞", style=discord.ButtonStyle.secondary)
    async def cancel_clear(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–û—Ç–º–µ–Ω–∏—Ç—å –æ—á–∏—Å—Ç–∫—É –∫–æ—Ä–∑–∏–Ω—ã"""
        await interaction.response.edit_message(
            content="–û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –æ—Ç–º–µ–Ω–µ–Ω–∞.",
            embed=None,
            view=None
        )
    
    async def _auto_delete_message(self, message):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥"""
        import asyncio
        await asyncio.sleep(10)
        try:
            await message.delete()
        except:
            pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è


# =================== –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–Ø–í–û–ö –ú–û–î–ï–†–ê–¢–û–†–ê–ú–ò ===================

class WarehouseEditSelectView(discord.ui.View):
    """View —Å Select Menu –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    def __init__(self, original_message: discord.Message):
        super().__init__(timeout=300)  # 5 –º–∏–Ω—É—Ç –Ω–∞ –≤—ã–±–æ—Ä
        self.original_message = original_message
        
        # –°–æ–∑–¥–∞–µ–º select menu —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ –∏–∑ –∑–∞—è–≤–∫–∏
        self.add_item(WarehouseEditSelect(original_message))

class WarehouseEditSelect(discord.ui.Select):
    """Select –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    def __init__(self, original_message: discord.Message):
        self.original_message = original_message
        
        # –ü–∞—Ä—Å–∏–º –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ embed –∑–∞—è–≤–∫–∏
        items = self._parse_items_from_embed()
        
        # –°–æ–∑–¥–∞–µ–º –æ–ø—Ü–∏–∏ –¥–ª—è select menu
        options = []
        for i, (item_text, item_name, quantity) in enumerate(items):
            if i < 25:  # Discord –ª–∏–º–∏—Ç –Ω–∞ select options
                options.append(discord.SelectOption(
                    label=f"{i+1}. {item_name}",
                    description=f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {quantity}",
                    value=str(i),
                    emoji="üì¶"
                ))
        
        if not options:
            options.append(discord.SelectOption(
                label="–ü—Ä–µ–¥–º–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã",
                description="–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∑–∞—è–≤–∫–∏",
                value="error"
            ))
        
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...",
            options=options,
            custom_id="warehouse_edit_select"
        )
        
        self.parsed_items = items
    
    def _parse_items_from_embed(self) -> List[tuple]:
        """–ü–∞—Ä—Å–∏—Ç –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ embed –∑–∞—è–≤–∫–∏"""
        items = []
        
        try:
            embed = self.original_message.embeds[0]
            
            # –ò—â–µ–º –ø–æ–ª–µ —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
            for field in embed.fields:
                if "–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã" in field.name.lower() or "–ø—Ä–µ–¥–º–µ—Ç" in field.name.lower():
                    field_value = field.value
                    
                    # –ü–∞—Ä—Å–∏–º —Å—Ç—Ä–æ–∫–∏ –≤–∏–¥–∞ "1. **AK-74M** √ó 2"
                    lines = field_value.split('\n')
                    for line in lines:
                        line = line.strip()
                        if '√ó' in line or 'x' in line:
                            # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä, –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                            import re
                            
                            # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è —Å—Ç—Ä–æ–∫–∏ "1. **–Ω–∞–∑–≤–∞–Ω–∏–µ** √ó –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ"
                            match = re.match(r'(\d+)\.\s*\*\*(.*?)\*\*\s*[√óx]\s*(\d+)', line)
                            if match:
                                number, item_name, quantity = match.groups()
                                items.append((line, item_name.strip(), int(quantity)))
                            else:
                                # Fallback –ø–∞—Ä—Å–∏–Ω–≥ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
                                if '**' in line and ('√ó' in line or 'x' in line):
                                    parts = line.split('**')
                                    if len(parts) >= 3:
                                        item_name = parts[1].strip()
                                        quantity_part = line.split('√ó')[-1] if '√ó' in line else line.split('x')[-1]
                                        try:
                                            quantity = int(quantity_part.strip())
                                            items.append((line, item_name, quantity))
                                        except ValueError:
                                            pass
                    break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏–∑ embed: {e}")
        
        return items
    
    async def callback(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞"""
        try:
            if self.values[0] == "error":
                await interaction.response.send_message(
                    "‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∑–∞—è–≤–∫–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
                    ephemeral=True
                )
                return
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç
            item_index = int(self.values[0])
            if item_index >= len(self.parsed_items):
                await interaction.response.send_message(
                    "‚ùå –û—à–∏–±–∫–∞: –ø—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.",
                    ephemeral=True
                )
                return
            
            item_text, item_name, current_quantity = self.parsed_items[item_index]
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
            view = WarehouseEditActionView(
                self.original_message, 
                item_index, 
                item_text, 
                item_name, 
                current_quantity
            )
            
            embed = discord.Embed(
                title="üîß –î–µ–π—Å—Ç–≤–∏—è —Å –ø—Ä–µ–¥–º–µ—Ç–æ–º",
                description=f"**–í—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç:** {item_name}\n**–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:** {current_quantity}",
                color=discord.Color.orange()
            )
            
            await interaction.response.edit_message(embed=embed, view=view)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—ã–±–æ—Ä–∞.",
                ephemeral=True
            )


class WarehouseEditActionView(discord.ui.View):
    """View —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø—Ä–µ–¥–º–µ—Ç–æ–º"""
    
    def __init__(self, original_message: discord.Message, item_index: int, 
                 item_text: str, item_name: str, current_quantity: int):
        super().__init__(timeout=300)  # 5 –º–∏–Ω—É—Ç –Ω–∞ –¥–µ–π—Å—Ç–≤–∏–µ
        self.original_message = original_message
        self.item_index = item_index
        self.item_text = item_text
        self.item_name = item_name
        self.current_quantity = current_quantity
    
    @discord.ui.button(label="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç", style=discord.ButtonStyle.danger)
    async def delete_item(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –∑–∞—è–≤–∫–∏ (–∑–∞—á–µ—Ä–∫–Ω—É—Ç—å)"""
        try:
            await interaction.response.defer(ephemeral=True)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏
            await self._update_original_message_remove_item(interaction)
            
            await interaction.followup.send(
                f"‚úÖ –ü—Ä–µ–¥–º–µ—Ç **{self.item_name}** —É–¥–∞–ª–µ–Ω –∏–∑ –∑–∞—è–≤–∫–∏.",
                ephemeral=True
            )
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞.",
                ephemeral=True
            )
    
    @discord.ui.button(label="üìù –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ", style=discord.ButtonStyle.primary)
    async def edit_quantity(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–∞"""
        try:
            modal = WarehouseEditQuantityModal(
                self.original_message,
                self.item_index,
                self.item_text,
                self.item_name,
                self.current_quantity
            )
            await interaction.response.send_modal(modal)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–æ—Ä–º—ã.",
                ephemeral=True
            )
    
    async def _update_original_message_remove_item(self, interaction: discord.Interaction):
        """–û–±–Ω–æ–≤–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç"""
        try:
            embed = self.original_message.embeds[0]
            original_view = None
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π view
            if self.original_message.components:
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø view –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∫–Ω–æ–ø–æ–∫ –∏–ª–∏ custom_id
                embed_text = str(embed.to_dict())
                is_multi_request = False
                for field in embed.fields:
                    if "–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã" in field.name.lower() and "–ø–æ–∑.)" in field.name:
                        is_multi_request = True
                        break
                
                # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π view
                if is_multi_request:
                    original_view = WarehousePersistentMultiRequestView()
                else:
                    original_view = WarehousePersistentRequestView()
            
            # –ò—â–µ–º –ø–æ–ª–µ —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
            for i, field in enumerate(embed.fields):
                if "–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã" in field.name.lower():
                    lines = field.value.split('\n')
                    
                    # –ù–∞–π–¥–µ–º –∏ –∑–∞—á–µ—Ä–∫–Ω–µ–º –Ω—É–∂–Ω—É—é —Å—Ç—Ä–æ–∫—É
                    for j, line in enumerate(lines):
                        if line.strip() == self.item_text:
                            # –ó–∞—á–µ—Ä–∫–∏–≤–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç
                            lines[j] = f"‚ùå ~~{self.item_text}~~"
                            break
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ
                    new_value = '\n'.join(lines)
                    embed.set_field_at(i, name=field.name, value=new_value, inline=field.inline)
                    break
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º view
            await self.original_message.edit(embed=embed, view=original_view)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            raise


class WarehouseEditQuantityModal(discord.ui.Modal):
    """–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–µ–¥–º–µ—Ç–∞"""
    
    def __init__(self, original_message: discord.Message, item_index: int,
                 item_text: str, item_name: str, current_quantity: int):
        super().__init__(title=f"–ò–∑–º–µ–Ω–∏—Ç—å: {item_name[:40]}")
        self.original_message = original_message
        self.item_index = item_index
        self.item_text = item_text
        self.item_name = item_name
        self.current_quantity = current_quantity
        
        # –ü–æ–ª–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        self.quantity_input = discord.ui.TextInput(
            label="–ù–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ",
            placeholder=f"–¢–µ–∫—É—â–µ–µ: {current_quantity}",
            default=str(current_quantity),
            min_length=1,
            max_length=10,
            required=True
        )
        
        self.add_item(self.quantity_input)
    
    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞"""
        try:
            await interaction.response.defer(ephemeral=True)
            
            # –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
            try:
                new_quantity = int(self.quantity_input.value.strip())
                if new_quantity <= 0:
                    await interaction.followup.send(
                        "‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0!",
                        ephemeral=True
                    )
                    return
            except ValueError:
                await interaction.followup.send(
                    "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.",
                    ephemeral=True
                )
                return
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await self._update_original_message_quantity(interaction, new_quantity)
            
            await interaction.followup.send(
                f"‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ **{self.item_name}** –∏–∑–º–µ–Ω–µ–Ω–æ —Å {self.current_quantity} –Ω–∞ {new_quantity}.",
                ephemeral=True
            )
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞.",
                ephemeral=True
            )
    
    async def _update_original_message_quantity(self, interaction: discord.Interaction, new_quantity: int):
        """–û–±–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏"""
        try:
            embed = self.original_message.embeds[0]
            
            # –ò—â–µ–º –ø–æ–ª–µ —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
            for i, field in enumerate(embed.fields):
                if "–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã" in field.name.lower():
                    lines = field.value.split('\n')
                    
                    # –ù–∞–π–¥–µ–º –∏ –æ–±–Ω–æ–≤–∏–º –Ω—É–∂–Ω—É—é —Å—Ç—Ä–æ–∫—É
                    for j, line in enumerate(lines):
                        if line.strip() == self.item_text:
                            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å –æ—Ç–º–µ—Ç–∫–æ–π –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏
                            import re
                            # –ó–∞–º–µ–Ω—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–º–µ—Ç–∫—É
                            match = re.match(r'(\d+\.\s*\*\*.*?\*\*)\s*[√óx]\s*(\d+)', self.item_text)
                            if match:
                                item_part = match.group(1)
                                lines[j] = f"{item_part} √ó {new_quantity} *(–∏–∑ {self.current_quantity})*"
                            else:
                                # Fallback
                                lines[j] = self.item_text.replace(f"√ó {self.current_quantity}", f"√ó {new_quantity} *(–∏–∑ {self.current_quantity})*")
                            break
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ
                    new_value = '\n'.join(lines)
                    embed.set_field_at(i, name=field.name, value=new_value, inline=field.inline)
                    break
              # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º view
            original_view = None
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø view –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∫–Ω–æ–ø–æ–∫ –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É embed
            if self.original_message.components:
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø view –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∫–Ω–æ–ø–æ–∫ –∏–ª–∏ custom_id
                embed_text = str(embed.to_dict())
                is_multi_request = False
                for field in embed.fields:
                    if "–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã" in field.name.lower() and "–ø–æ–∑.)" in field.name:
                        is_multi_request = True
                        break
                
                # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π view
                if is_multi_request:
                    original_view = WarehousePersistentMultiRequestView()
                else:
                    original_view = WarehousePersistentRequestView()
            
            await self.original_message.edit(embed=embed, view=original_view)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏: {e}")
            raise


# =================== –ö–ù–û–ü–ö–ò –°–û–°–¢–û–Ø–ù–ò–Ø –ó–ê–ü–†–û–°–ê ===================

class WarehouseStatusView(discord.ui.View):
    """View –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–ø—Ä–æ—Å–∞ (–∫–Ω–æ–ø–∫–∏ –û–¥–æ–±—Ä–µ–Ω–æ/–û—Ç–∫–∞–∑–∞–Ω–æ)"""
    
    def __init__(self, status: str):
        super().__init__(timeout=None)
        self.status = status
        
        if status == "approved":
            button = discord.ui.Button(
                label="‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ",
                style=discord.ButtonStyle.green,
                disabled=True,
                custom_id="warehouse_status_approved"
            )
        elif status == "rejected":
            button = discord.ui.Button(
                label="‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ", 
                style=discord.ButtonStyle.red,
                disabled=True,
                custom_id="warehouse_status_rejected"
            )
        else:
            button = discord.ui.Button(
                label="‚è≥ –í –æ–±—Ä–∞–±–æ—Ç–∫–µ",
                style=discord.ButtonStyle.gray,
                disabled=True,
                custom_id="warehouse_status_pending"
            )
        
        self.add_item(button)


# =================== VIEW –î–õ–Ø –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–Ø –£–î–ê–õ–ï–ù–ò–Ø ===================

class DeletionConfirmView(discord.ui.View):
    """View —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞"""
    
    def __init__(self, original_message: discord.Message):
        super().__init__(timeout=30)  # 30 —Å–µ–∫—É–Ω–¥ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        self.original_message = original_message
    
    @discord.ui.button(label="üóëÔ∏è –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ", style=discord.ButtonStyle.danger)
    async def confirm_deletion(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞"""
        try:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫—Ç–æ —É–¥–∞–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å
            if self.original_message.embeds:
                embed = self.original_message.embeds[0]
                footer_text = embed.footer.text if embed.footer else ""
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–æ–º
                is_author = False
                if "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:" in footer_text:
                    try:
                        author_id = int(footer_text.split("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")[-1].strip())
                        is_author = (author_id == interaction.user.id)
                    except (ValueError, IndexError):
                        pass
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É–¥–∞–ª–µ–Ω–∏–∏
                if is_author:
                    deletion_info = f"*–£–¥–∞–ª–µ–Ω–æ –∞–≤—Ç–æ—Ä–æ–º: {interaction.user.mention}*"
                else:
                    deletion_info = f"*–£–¥–∞–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º: {interaction.user.mention}*"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
            await interaction.response.send_message(
                f"üóëÔ∏è **–ó–∞–ø—Ä–æ—Å —Å–∫–ª–∞–¥–∞ —É–¥–∞–ª–µ–Ω**\n\n{deletion_info}",
                ephemeral=True
            )
            
            # –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            try:
                await self.original_message.delete()
                print(f"‚úÖ DELETE: –ó–∞–ø—Ä–æ—Å —Å–∫–ª–∞–¥–∞ —É–¥–∞–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.display_name}")
            except discord.NotFound:
                # –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ
                pass
            except discord.Forbidden:
                await interaction.followup.send(
                    "‚ö†Ô∏è –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å–µ—Ä–≤–µ—Ä–∞.",
                    ephemeral=True
                )
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ —Å–∫–ª–∞–¥–∞: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞.", ephemeral=True
            )
    
    @discord.ui.button(label="‚ùå –û—Ç–º–µ–Ω–∞", style=discord.ButtonStyle.secondary)
    async def cancel_deletion(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–û—Ç–º–µ–Ω–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ"""
        await interaction.response.edit_message(
            content="‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
            embed=None,
            view=None
        )
    
    async def on_timeout(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è"""
        # –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ —Ç–∞–π–º–∞—É—Ç–µ
        for item in self.children:
            item.disabled = True


# =================== –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –î–õ–Ø –ü–†–ò–ß–ò–ù–´ –û–¢–ö–ê–ó–ê ===================

class RejectionReasonModal(discord.ui.Modal):
    """–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–∞–∑–∞"""
    
    def __init__(self, original_message: discord.Message):
        super().__init__(title="–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–∞–∑–∞")
        self.original_message = original_message
        
        self.reason_input = discord.ui.TextInput(
            label="–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–∞–∑–∞",
            placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–∞–∑–∞ –≤ –≤—ã–¥–∞—á–µ —Å–∫–ª–∞–¥–∞...",
            style=discord.TextStyle.paragraph,
            min_length=5,
            max_length=500,
            required=True
        )
        
        self.add_item(self.reason_input)
    
    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–∞–∑–∞"""
        try:
            reason = self.reason_input.value.strip()
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ embed
            embed = self.original_message.embeds[0]
            embed.color = discord.Color.red()
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏
            embed.add_field(
                name="‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ", 
                value=f"*–û—Ç–∫–ª–æ–Ω–∏–ª: {interaction.user.mention}*\n**–ü—Ä–∏—á–∏–Ω–∞:** {reason}", 
                inline=False
            )            # –ó–∞–º–µ–Ω—è–µ–º view –Ω–∞ –∫–Ω–æ–ø–∫—É —Å—Ç–∞—Ç—É—Å–∞ "–û—Ç–∫–ª–æ–Ω–µ–Ω–æ" –∏ –æ—á–∏—â–∞–µ–º –ø–∏–Ω–≥–∏
            status_view = WarehouseStatusView(status="rejected")
            
            await interaction.response.edit_message(content="", embed=embed, view=status_view)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ —Å–∫–ª–∞–¥–∞: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–∫–∞–∑–∞.", ephemeral=True
            )


# =================== –§–ò–ù–ê–õ–¨–ù–û–ï –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û ===================

class WarehouseFinalDetailsModal(discord.ui.Modal):
    """–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –∏ —Å—Ç–∞—Ç–∏–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏"""
    def __init__(self, cart: WarehouseRequestCart, warehouse_manager: WarehouseManager, interaction_original: discord.Interaction, parent_view=None):
        super().__init__(title="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏")
        self.cart = cart
        self.warehouse_manager = warehouse_manager
        self.interaction_original = interaction_original
        self.parent_view = parent_view  # –°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é view –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ñ–ª–∞–≥–æ–≤
        
        # –ü–æ–ª—è —Ñ–æ—Ä–º—ã —Å –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        self.name_input = discord.ui.TextInput(
            label="–ò–º—è –§–∞–º–∏–ª–∏—è",
            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é",
            default="",
            min_length=3,
            max_length=50,
            required=True
        )
        
        self.static_input = discord.ui.TextInput(
            label="–°—Ç–∞—Ç–∏–∫",
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 123-456",
            default="",
            min_length=5,
            max_length=10,
            required=True
        )
        
        self.add_item(self.name_input)
        self.add_item(self.static_input)
    @classmethod
    def create_with_prefilled_data(cls, cart: WarehouseRequestCart, warehouse_manager: WarehouseManager, 
                                 interaction_original: discord.Interaction, name: str = "", static: str = "", parent_view=None):
        """
        –°–æ–∑–¥–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (–±—ã—Å—Ç—Ä—ã–π –º–µ—Ç–æ–¥)
        """
        instance = cls.__new__(cls)
        instance.cart = cart
        instance.warehouse_manager = warehouse_manager
        instance.interaction_original = interaction_original
        instance.parent_view = parent_view  # –°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é view
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Modal
        discord.ui.Modal.__init__(instance, title="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        name_value = name if name else ""
        static_value = static if static else ""
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º placeholders
        name_placeholder = f"–î–∞–Ω–Ω—ã–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã: {name}" if name_value else "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é"
        static_placeholder = f"–î–∞–Ω–Ω—ã–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã: {static}" if static_value else "–ù–∞–ø—Ä–∏–º–µ—Ä: 123-456"
        
        # –ü–æ–ª—è —Ñ–æ—Ä–º—ã
        instance.name_input = discord.ui.TextInput(
            label="–ò–º—è –§–∞–º–∏–ª–∏—è",
            placeholder=name_placeholder,
            default=name_value,
            min_length=3,
            max_length=50,
            required=True
        )
        
        instance.static_input = discord.ui.TextInput(
            label="–°—Ç–∞—Ç–∏–∫",
            placeholder=static_placeholder,
            default=static_value,
            min_length=5,
            max_length=10,
            required=True
        )
        instance.add_item(instance.name_input)
        instance.add_item(instance.static_input)
        
        return instance

    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã - –±—ã—Å—Ç—Ä—ã–π –æ—Ç–∫–ª–∏–∫ + —Ñ–æ–Ω–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞"""
        try:
            # –ë–´–°–¢–†–ê–Ø –í–ê–õ–ò–î–ê–¶–ò–Ø (–±–µ–∑ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API)
            static = self._format_static(self.static_input.value.strip())
            if not static:
                await interaction.response.send_message(
                    "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å—Ç–∞—Ç–∏–∫! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: 123456 –∏–ª–∏ 123-456",
                    ephemeral=True
                )
                return
            
            name = self.name_input.value.strip()
            if not name:
                await interaction.response.send_message(
                    "‚ùå –ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!",
                    ephemeral=True
                )
                return
            
            # –ë–´–°–¢–†–´–ô –û–¢–ö–õ–ò–ö –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Æ (–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 3 —Å–µ–∫—É–Ω–¥)
            await interaction.response.defer(ephemeral=True)
            
            # –§–û–ù–û–í–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê (—Ç—è–∂–µ–ª—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏)
            try:
                await self._process_warehouse_request_background(interaction, name, static)
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–æ–Ω–æ–≤–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏: {e}")
                await interaction.edit_original_response(
                    content="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
                )
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞: {e}")
            try:
                await interaction.response.send_message(
                    "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                    ephemeral=True
                )
            except:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ")
    
    async def _process_warehouse_request_background(self, interaction: discord.Interaction, name: str, static: str):
        """–§–æ–Ω–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—è–≤–∫–∏ —Å–∫–ª–∞–¥–∞"""
        try:
            # –ë–µ—Ä—ë–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ (–≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –æ—Ç –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
            first_item = self.cart.items[0]
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ
            for item in self.cart.items:
                item.user_name = name
                item.user_static = static
              # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É (—Å–∞–º–∞—è —Ç—è–∂–µ–ª–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è)
            await self._send_simple_warehouse_request(interaction)
            
            # ‚úÖ –ó–ê–Ø–í–ö–ê –£–°–ü–ï–®–ù–û –û–¢–ü–†–ê–í–õ–ï–ù–ê –í –ö–ê–ù–ê–õ - —Ç–µ–ø–µ—Ä—å —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥!
            if self.parent_view:
                self.parent_view.is_submitted = True
                print(f"üîí SUBMITTED FLAG SET: –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –∫–æ—Ä–∑–∏–Ω–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.interaction_original.user.id}")
            
            # ‚úÖ –û–ë–ù–û–í–õ–Ø–ï–ú –ö–û–†–ó–ò–ù–£: –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –æ—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
            await self._update_cart_after_submission(interaction)
            
            print(f"‚úÖ PROCESS COMPLETE: –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.interaction_original.user.id}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–æ–Ω–æ–≤–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}")
            import traceback
            traceback.print_exc()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± –æ—à–∏–±–∫–µ
            await interaction.edit_original_response(
                content="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )

    async def _send_simple_warehouse_request(self, interaction: discord.Interaction):
        """–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ —Å–∫–ª–∞–¥–∞"""
        try:
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–æ–∫ (–Ω–æ–≤–∞—è –ª–æ–≥–∏–∫–∞)
            submission_channel_id = self.warehouse_manager.get_warehouse_submission_channel()
            if not submission_channel_id:
                await interaction.edit_original_response(
                    content="‚ùå –ö–∞–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–æ–∫ —Å–∫–ª–∞–¥–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
                )
                return

            channel = self.interaction_original.guild.get_channel(submission_channel_id)
            if not channel:
                await interaction.edit_original_response(
                    content="‚ùå –ö–∞–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–æ–∫ —Å–∫–ª–∞–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
                )
                return

            # –ë–µ—Ä—ë–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
            first_item = self.cart.items[0]
            
            # üè¢ –ü–û–õ–£–ß–ê–ï–ú –ü–û–î–†–ê–ó–î–ï–õ–ï–ù–ò–ï –∏–∑ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–æ–¥—É–ª—è
            try:
                from utils.warehouse_user_data import warehouse_user_manager
                department = await warehouse_user_manager.get_user_department(self.interaction_original.user.id)
                print(f"üè¢ DEPT: –ü–æ–ª—É—á–µ–Ω–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ '{department}' –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.interaction_original.user.id}")
            except Exception as e:
                print(f"‚ö†Ô∏è DEPT FALLBACK: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è: {e}")
                department = "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ"            # –°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –∑–∞—è–≤–∫–∏
            embed = discord.Embed(
                title="üì¶ –ó–∞–ø—Ä–æ—Å —Å–∫–ª–∞–¥–∞",
                description=f"## {self.interaction_original.user.mention}",
                color=discord.Color.blue(),
                timestamp=datetime.now()
            )
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ - –ü–†–ê–í–ò–õ–¨–ù–´–ô –ü–û–†–Ø–î–û–ö —Å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º
            embed.add_field(
                name="üë§ –ò–º—è –§–∞–º–∏–ª–∏—è | –°—Ç–∞—Ç–∏–∫", 
                value=f"{first_item.user_name} | {first_item.user_static}", 
                inline=False
            )
            
            # –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ, –¥–æ–ª–∂–Ω–æ—Å—Ç—å, –∑–≤–∞–Ω–∏–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
            embed.add_field(name="üè¢ –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ", value=department, inline=True)
            embed.add_field(name="üìç –î–æ–ª–∂–Ω–æ—Å—Ç—å", value=first_item.position or "–ù–µ —É–∫–∞–∑–∞–Ω–æ", inline=True)
            embed.add_field(name="üéñÔ∏è –ó–≤–∞–Ω–∏–µ", value=first_item.rank or "–ù–µ —É–∫–∞–∑–∞–Ω–æ", inline=True)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–µ –ø–æ–ª–µ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
            embed.add_field(name="\u200b", value="\u200b", inline=False)            # –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –° –Ω–æ–º–µ—Ä–∞–º–∏ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –∑–∞—è–≤–∫–∏
            items_text = ""
            for i, item in enumerate(self.cart.items, 1):
                items_text += f"{i}. **{item.item_name}** √ó {item.quantity}\n"
            
            embed.add_field(
                name=f"üìã –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã ({len(self.cart.items)} –ø–æ–∑.)",
                value=items_text,
                inline=False
            )
            
            embed.set_footer(text=f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {self.interaction_original.user.id}")
              # –°–æ–∑–¥–∞–Ω–∏–µ view —Å –∫–Ω–æ–ø–∫–∞–º–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
            view = WarehousePersistentMultiRequestView()            # üì¢ –ü–û–õ–£–ß–ê–ï–ú –ü–ò–ù–ì-–†–û–õ–ò –î–õ–Ø –£–í–ï–î–û–ú–õ–ï–ù–ò–ô
            try:
                ping_roles = self.warehouse_manager.get_ping_roles_for_warehouse_request(
                    self.interaction_original.user, department
                )
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–∏–Ω–≥–∏ –∫–∞–∫ –º–µ–ª–∫–∏–π —Ç–µ–∫—Å—Ç
                ping_text = "\n".join([f"-# {role.mention}" for role in ping_roles]) if ping_roles else None
                print(f"üì¢ PING: –ù–∞–π–¥–µ–Ω–æ {len(ping_roles)} —Ä–æ–ª–µ–π –¥–ª—è –ø–∏–Ω–≥–∞: {[role.name for role in ping_roles]}")
            except Exception as e:
                print(f"‚ö†Ô∏è PING ERROR: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∏–Ω–≥-—Ä–æ–ª–µ–π: {e}")
                ping_text = None # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–∏–Ω–≥–∞–º–∏
            message = await channel.send(content=ping_text, embed=embed, view=view)
            
            print(f"‚úÖ SIMPLE SEND: –ó–∞—è–≤–∫–∞ —Å–∫–ª–∞–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.interaction_original.user.id}")
            
        except Exception as e:
            print(f"‚ùå SIMPLE SEND ERROR: {e}")
            import traceback
            traceback.print_exc()
            raise

    async def _update_cart_after_submission(self, interaction: discord.Interaction):
        """–û–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            cart_message = get_user_cart_message(self.interaction_original.user.id)
            
            if cart_message:
                # –°–æ–∑–¥–∞–µ–º embed —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–µ
                submitted_embed = discord.Embed(
                    title="‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞",
                    description="–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!",
                    color=discord.Color.green(),
                    timestamp=datetime.now()
                )
                  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫–∏–π —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
                items_text = ""
                for i, item in enumerate(self.cart.items, 1):
                    items_text += f"{i}. **{item.item_name}** √ó {item.quantity}\n"
                
                submitted_embed.add_field(
                    name="üìã –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã:",
                    value=items_text,
                    inline=False
                )
                
                submitted_embed.set_footer(text="–î–ª—è –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º")
                  # –°–æ–∑–¥–∞–µ–º view –±–µ–∑ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                submitted_view = WarehouseSubmittedView()
                  # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
                await cart_message.edit(embed=submitted_embed, view=submitted_view)
                print(f"‚úÖ CART UPDATE: –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.interaction_original.user.id}")
                  # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ü–û–°–õ–ï –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
                clear_user_cart_safe(self.interaction_original.user.id, "successful_submission")
                print(f"üßπ CART CLEAR: –ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.interaction_original.user.id}")
                
        except Exception as e:
            print(f"‚ö†Ô∏è CART UPDATE ERROR: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã: {e}")            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—Å—ë —Ä–∞–≤–Ω–æ –æ—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
            clear_user_cart_safe(self.interaction_original.user.id, "error_fallback")
            # –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–æ, –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å    async def on_timeout(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏—Å—Ç–µ—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è"""
        pass

    def _format_static(self, static: str) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏–∫–∞ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤–∏–¥"""
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ, –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä
        digits = re.sub(r'\D', '', static)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É
        if len(digits) == 6:
            return f"{digits[:3]}-{digits[3:]}"
        elif len(digits) == 5:
            return f"{digits[:2]}-{digits[2:]}"
        
        return ""


class WarehouseSubmittedView(discord.ui.View):
    """View –¥–ª—è —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–∏ - —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∫–Ω–æ–ø–æ–∫"""
    
    def __init__(self):
        super().__init__(timeout=None)  # –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π view –±–µ–∑ –∫–Ω–æ–ø–æ–∫


# =================== –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –î–õ–Ø –ö–ê–°–¢–û–ú–ù–û–ì–û –ü–†–ï–î–ú–ï–¢–ê ===================

class WarehouseCustomItemModal(discord.ui.Modal):
    """–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ '–ü—Ä–æ—á–µ–µ' —Å –ø–æ–ª–µ–º –æ–ø–∏—Å–∞–Ω–∏—è"""
    
    def __init__(self, category: str, warehouse_manager: WarehouseManager):
        super().__init__(title="–ó–∞–ø—Ä–æ—Å: –ü—Ä–æ—á–µ–µ")
        self.category = category
        self.warehouse_manager = warehouse_manager
        
        # –ü–æ–ª–µ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ)
        self.description_input = discord.ui.TextInput(
            label="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞",
            placeholder="–£–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç–µ",
            style=discord.TextStyle.paragraph,
            min_length=1,
            max_length=500,
            required=True
        )
        
        # –ü–æ–ª–µ –¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        self.quantity_input = discord.ui.TextInput(
            label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ",
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤",
            min_length=1,
            max_length=10,
            required=True
        )
        
        self.add_item(self.description_input)
        self.add_item(self.quantity_input)

    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞"""
        try:
            # ‚ö° –ú–ì–ù–û–í–ï–ù–ù–´–ô DEFER - —Å–∞–º–æ–µ –ø–µ—Ä–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ!
            await interaction.response.defer(ephemeral=True)
            
            # üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ loading_message
            existing_message = get_user_cart_message(interaction.user.id)
            if existing_message:
                try:
                    await existing_message.delete()
                except (discord.NotFound, discord.HTTPException):
                    pass
                # –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ –ù–ï –∫–æ—Ä–∑–∏–Ω—É
                if interaction.user.id in user_cart_messages:
                    del user_cart_messages[interaction.user.id]
            
            # üîÑ –ü–æ–∫–∞–∑–∞—Ç—å –±—ã—Å—Ç—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞
            quick_embed = discord.Embed(
                title="‚è≥ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–æ—Ä–º—ã –∑–∞–ø—Ä–æ—Å–∞...",
                description="–î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω—É...",
                color=discord.Color.orange()
            )
            loading_message = await interaction.followup.send(embed=quick_embed, ephemeral=True)
            
            # ‚ö° –ë–´–°–¢–†–ê–Ø –≤–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ (–º–∏–∫—Ä–æ—Å–µ–∫—É–Ω–¥—ã)
            try:
                quantity = int(self.quantity_input.value.strip())
                if quantity <= 0:
                    raise ValueError("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0")
                if quantity > 999:  # –†–∞–∑—É–º–Ω—ã–π –ª–∏–º–∏—Ç –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–π
                    raise ValueError("–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ")
            except ValueError as e:
                error_embed = discord.Embed(
                    title="‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
                    description=f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ! {str(e)}",
                    color=discord.Color.red()
                )
                await loading_message.edit(embed=error_embed)
                return

            # –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è
            description = self.description_input.value.strip()
            if not description:
                error_embed = discord.Embed(
                    title="‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
                    description="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!",
                    color=discord.Color.red()
                )
                await loading_message.edit(embed=error_embed)
                return

            # üöÄ –°–£–ü–ï–† –ë–´–°–¢–†–û–ï –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫—ç—à–∞ —Å fallback
            print(f"‚ö° ULTRA FAST: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è {interaction.user.display_name}")
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä—ã–π –ø—É—Ç—å
            position = "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
            rank = "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
            
            try:
                # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –∫—ç—à–∞ (–Ω–∞–∏–±–æ–ª–µ–µ –±—ã—Å—Ç—Ä–æ)
                from utils.user_cache import get_cached_user_info
                user_data = await get_cached_user_info(interaction.user.id, force_refresh=False)
                
                if user_data:
                    position = user_data.get('position', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
                    rank = user_data.get('rank', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
                    print(f"‚úÖ LIGHTNING CACHE: {position}, {rank}")
                else:
                    # –ë—ã—Å—Ç—Ä—ã–π fallback —á–µ—Ä–µ–∑ —Ä–æ–ª–∏ Discord (–±–µ–∑ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –ë–î)
                    for role in interaction.user.roles:
                        role_name = role.name.lower()
                        if "–æ—Ñ–∏—Ü–µ—Ä" in role_name or "–∫–æ–º–∞–Ω–¥–∏—Ä" in role_name:
                            position = "–û—Ñ–∏—Ü–µ—Ä"
                            break
                        elif "—Å–µ—Ä–∂–∞–Ω—Ç" in role_name:
                            rank = "–°–µ—Ä–∂–∞–Ω—Ç"
                        elif "—Ä—è–¥–æ–≤–æ–π" in role_name:
                            rank = "–†—è–¥–æ–≤–æ–π"
                    print(f"üìã ROLE FAST: {position}, {rank}")
                        
            except Exception as e:
                print(f"‚ö†Ô∏è Fallback –¥–ª—è –¥–∞–Ω–Ω—ã—Ö: {e}")
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

            # üõ°Ô∏è –ü–û–õ–£–ß–ê–ï–ú –ö–û–†–ó–ò–ù–£ –ò –ü–†–û–í–ï–†–Ø–ï–ú –°–£–©–ï–°–¢–í–£–Æ–©–ï–ï –ö–û–õ–ò–ß–ï–°–¢–í–û
            cart = get_user_cart(interaction.user.id)
            current_time = datetime.now()
            
            # –î–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ item_name –≤–∫–ª—é—á–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ
            custom_item_name = f"–ü—Ä–æ—á–µ–µ ({description})"
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
            existing_quantity = cart.get_item_quantity(self.category, custom_item_name)
            total_quantity = existing_quantity + quantity  # –°—É–º–º–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
            
            print(f"üìä CUSTOM ITEM CHECK: {custom_item_name} - –≤ –∫–æ—Ä–∑–∏–Ω–µ: {existing_quantity}, –¥–æ–±–∞–≤–ª—è–µ–º: {quantity}, –∏—Ç–æ–≥–æ: {total_quantity}")
            
            # ‚ö° –í–ê–õ–ò–î–ê–¶–ò–Ø –° –£–ß–ï–¢–û–ú –ö–û–†–ó–ò–ù–´ - –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ª–∏–º–∏—Ç—ã –Ω–µ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è
            category_key = self._get_category_key(self.category)
            
            # –î–ª—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤—Å–µ–≥–¥–∞ —Ä–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–ø—Ä–æ—Å
            is_valid = True
            final_quantity = total_quantity
            validation_message = "‚úÖ –ö–∞—Å—Ç–æ–º–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç"
            
            # üõí –î–û–ë–ê–í–õ–Ø–ï–ú –í –ö–û–†–ó–ò–ù–£
            cart_item = WarehouseRequestItem(
                category=self.category,
                item_name=custom_item_name,
                quantity=final_quantity - existing_quantity,  # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ä–∞–∑–Ω–∏—Ü—É
                user_name="",  # –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ
                user_static="",  # –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ
                position=position,
                rank=rank
            )
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–µ–¥–º–µ—Ç –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π
            if existing_quantity > 0:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–µ–¥–º–µ—Ç
                for item in cart.items:
                    if item.category == self.category and item.item_name == custom_item_name:
                        item.quantity = final_quantity
                        break
            else:
                # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç
                cart.add_item(cart_item)
            
            print(f"üõí CART UPDATED: –ö–∞—Å—Ç–æ–º–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω–µ")
              # ‚ö° –ë–´–°–¢–†–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –ö–û–†–ó–ò–ù–´
            await self._show_cart_ultra_fast(interaction, cart, validation_message, loading_message)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ WarehouseCustomItemModal: {e}")
            import traceback
            traceback.print_exc()
            
            try:
                await interaction.edit_original_response(
                    content="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
                )
            except:
                pass

    async def _show_cart_ultra_fast(self, interaction: discord.Interaction, cart: WarehouseRequestCart, 
                                   validation_message: str = "", loading_message = None):
        """–£–õ–¨–¢–†–ê-–ë–´–°–¢–†–û–ï –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ç–∞–π–º–∞—É—Ç–æ–≤ Discord"""
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º, –µ—Å–ª–∏ –µ—Å—Ç—å
            description = "–ü—Ä–µ–¥–º–µ—Ç—ã –≥–æ—Ç–æ–≤—ã –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ:"
            if validation_message:
                description += f"\n\n{validation_message}"
            
            # –°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã
            embed = discord.Embed(
                title="üõí –ö–æ—Ä–∑–∏–Ω–∞ —Å–∫–ª–∞–¥—Å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤",
                description=description,
                color=discord.Color.green()
            )
            
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
            for i, item in enumerate(cart.items, 1):
                embed.add_field(
                    name=f"{i}. {item.item_name}",
                    value=f"**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:** {item.quantity}\n**–ö–∞—Ç–µ–≥–æ—Ä–∏—è:** {item.category}",
                    inline=False
                )
            
            embed.add_field(
                name="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                value=f"–ü—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ: **{len(cart.items)}**\n–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: **{cart.get_total_items()}**",
                inline=False
            )
            
            embed.set_footer(text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –≤—ã–±–æ—Ä —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è –∏–∑ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
            
            view = WarehouseCartView(cart, self.warehouse_manager)
            
            # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1: –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
            if loading_message:
                try:
                    await loading_message.edit(embed=embed, view=view)
                    
                    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å –∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç loading_message
                    existing_message = get_user_cart_message(interaction.user.id)
                    if existing_message and existing_message.id != loading_message.id:
                        try:
                            await existing_message.delete()
                        except (discord.NotFound, discord.HTTPException):
                            pass
                    
                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º loading_message –∫–∞–∫ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
                    set_user_cart_message(interaction.user.id, loading_message)
                    return
                except (discord.NotFound, discord.HTTPException):
                    pass
            
            # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2: –æ–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
            existing_message = get_user_cart_message(interaction.user.id)
            
            if existing_message:
                try:
                    await existing_message.edit(embed=embed, view=view)
                    return
                except (discord.NotFound, discord.HTTPException):
                    pass
            
            # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 3: —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
            try:
                message = await interaction.followup.send(embed=embed, view=view, ephemeral=True)
                set_user_cart_message(interaction.user.id, message)
            except Exception:
                await interaction.followup.send(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: **{cart.items[-1].item_name}** √ó {cart.items[-1].quantity}", ephemeral=True)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ _show_cart_ultra_fast: {e}")
            try:
                await interaction.followup.send("‚úÖ –ü—Ä–µ–¥–º–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!", ephemeral=True)
            except:
                pass

    def _get_category_key(self, category: str) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        category_mapping = {
            "–û—Ä—É–∂–∏–µ": "–æ—Ä—É–∂–∏–µ",
            "–ë—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç—ã": "–±—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç—ã", 
            "–ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã": "–º–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã",
            "–î—Ä—É–≥–æ–µ": "–¥—Ä—É–≥–æ–µ"
        }
        return category_mapping.get(category, "–¥—Ä—É–≥–æ–µ")
