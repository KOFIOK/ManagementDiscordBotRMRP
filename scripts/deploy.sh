#!/bin/bash

# Deployment script for Army Discord Bot
# This script handles the deployment process on the production server

set -e

APP_DIR="/opt/army-discord-bot"
LOG_DIR="$APP_DIR/logs"
SCREEN_SESSION="army-bot"

echo "üöÄ Starting deployment process..."

# Navigate to application directory
cd $APP_DIR

# Create backup of current version
echo "üíæ Creating backup..."
if [ -d "backup" ]; then
    rm -rf backup
fi
mkdir backup
cp -r . backup/ 2>/dev/null || true

# Stop existing bot instance
echo "üõë Stopping existing bot..."
# Use our bot control script if available
if [ -f "$APP_DIR/scripts/bot.sh" ]; then
    bash "$APP_DIR/scripts/bot.sh" stop
else
    # Fallback to manual stop
    screen -S $SCREEN_SESSION -p 0 -X stuff "^C" 2>/dev/null || true
    sleep 3
    screen -S $SCREEN_SESSION -X quit 2>/dev/null || true
    pkill -f "python3 app.py" 2>/dev/null || true
fi
sleep 3

# Double-check that bot is stopped
if pgrep -f "python3 app.py" > /dev/null; then
    echo "‚ö†Ô∏è Bot still running, force killing..."
    pkill -9 -f "python3 app.py"
    sleep 2
fi

# Pull latest changes
echo "üì• Pulling latest changes..."
git fetch origin
git reset --hard origin/main

# Update dependencies
echo "üì¶ Updating dependencies..."
pip3 install -r requirements.txt

# Create logs directory if not exists
mkdir -p $LOG_DIR

# Verify configuration
echo "üîç Verifying configuration..."
if [ ! -f "data/config.json" ]; then
    echo "‚ö†Ô∏è  Warning: config.json not found"
fi

if [ ! -f ".env" ] && [ -z "$DISCORD_TOKEN" ]; then
    echo "‚ö†Ô∏è  Warning: No .env file or DISCORD_TOKEN environment variable found"
fi

# Start bot in screen session
echo "‚ñ∂Ô∏è  Starting bot..."
if [ -f "$APP_DIR/scripts/bot.sh" ]; then
    bash "$APP_DIR/scripts/bot.sh" start
else
    # Fallback to direct start
    screen -dmS $SCREEN_SESSION bash -c "cd $APP_DIR && python3 app.py 2>&1 | tee $LOG_DIR/bot.log"
fi

# Wait and verify startup
echo "‚è≥ Waiting for bot to start..."
sleep 5

if screen -list | grep -q "$SCREEN_SESSION"; then
    echo "‚úÖ Bot deployed and started successfully!"
    echo ""
    echo "üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º:"
    echo "  ./scripts/bot.sh status   - —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"
    echo "  ./scripts/bot.sh stop     - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
    echo "  ./scripts/bot.sh logs     - –ø–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo "  ./scripts/bot.sh watch    - —Å–ª–µ–¥–∏—Ç—å –∑–∞ –ª–æ–≥–∞–º–∏"
else
    echo "‚ùå Bot failed to start!"
    echo "üìÑ Check logs: cat $LOG_DIR/bot.log"
    exit 1
fi

echo "üéâ Deployment completed successfully!"
