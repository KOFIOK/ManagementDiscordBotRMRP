"""
–ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∑–≤–∞–Ω–∏–π - –ø—Ä–æ—Å—Ç–∞—è –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è
–õ–æ–≥–∏–∫–∞: –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –∫–ª—é—á–µ–≤–∞—è —Ä–æ–ª—å –ò –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å RMRP —Å –∑–≤–∞–Ω–∏–µ–º - –≤—ã–¥–∞–µ–º —Ä–æ–ª—å –∑–≤–∞–Ω–∏—è
"""
import discord
import re
import asyncio
from typing import Optional
from utils.config_manager import load_config


class RankSync:
    """–ü—Ä–æ—Å—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∑–≤–∞–Ω–∏–π"""
    
    def __init__(self, bot):
        self.bot = bot
        
    async def sync_user(self, member: discord.Member, force: bool = False) -> bool:
        """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –∑–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            print(f"üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è {member.display_name}...")
            
            # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—É—é —Ä–æ–ª—å (–µ—Å–ª–∏ –Ω–µ force)
            if not force and not self._has_key_role(member):
                print(f"‚ö†Ô∏è {member.display_name} –Ω–µ –∏–º–µ–µ—Ç –∫–ª—é—á–µ–≤–æ–π —Ä–æ–ª–∏")
                return False
            
            # 2. –ò—â–µ–º RMRP –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            rmrp_text = self._find_rmrp_activity(member)
            if not rmrp_text:
                print(f"‚ùå {member.display_name} –Ω–µ –∏–≥—Ä–∞–µ—Ç –≤ RMRP")
                return False
            
            print(f"üéÆ –ù–∞–π–¥–µ–Ω–∞ RMRP –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {rmrp_text}")
            
            # 3. –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–≤–∞–Ω–∏–µ
            rank = self._extract_rank(rmrp_text)
            if not rank:
                print(f"‚ùå –ó–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
                return False
            
            print(f"üéñÔ∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∑–≤–∞–Ω–∏–µ: {rank}")
            
            # 4. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Ä–æ–ª–∏
            success = await self._sync_roles(member, rank)
            
            if success:
                print(f"‚úÖ {member.display_name} —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –∑–≤–∞–Ω–∏–µ–º {rank}")
                return True
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å {member.display_name}")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ {member.display_name}: {e}")
            return False
    
    def _has_key_role(self, member: discord.Member) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–ª—é—á–µ–≤–∞—è —Ä–æ–ª—å"""
        config = load_config()
        key_role_id = config.get('rank_sync_key_role')
        
        if not key_role_id:
            print("‚ÑπÔ∏è –ö–ª—é—á–µ–≤–∞—è —Ä–æ–ª—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É")
            return True
        
        key_role = member.guild.get_role(key_role_id)
        if not key_role:
            print(f"‚ö†Ô∏è –ö–ª—é—á–µ–≤–∞—è —Ä–æ–ª—å {key_role_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
            return True
        
        has_role = key_role in member.roles
        print(f"üîë –ö–ª—é—á–µ–≤–∞—è —Ä–æ–ª—å '{key_role.name}': {'‚úÖ' if has_role else '‚ùå'}")
        return has_role
    
    def _find_rmrp_activity(self, member: discord.Member) -> Optional[str]:
        """–ò—â–µ—Ç RMRP –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —Å—Ç–∞—Ç—É—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        for activity in member.activities:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            activity_texts = []
            
            # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è
            if hasattr(activity, 'name') and activity.name:
                activity_texts.append(activity.name)
            if hasattr(activity, 'details') and activity.details:
                activity_texts.append(activity.details)
            if hasattr(activity, 'state') and activity.state:
                activity_texts.append(activity.state)
            if hasattr(activity, 'large_text') and activity.large_text:
                activity_texts.append(activity.large_text)
            if hasattr(activity, 'small_text') and activity.small_text:
                activity_texts.append(activity.small_text)
            
            # –ò—â–µ–º RMRP –≤ –ª—é–±–æ–º –∏–∑ –ø–æ–ª–µ–π
            for text in activity_texts:
                if self._is_rmrp_server(text):
                    return text
        
        return None
    
    def _is_rmrp_server(self, text: str) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Ç–µ–∫—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ RMRP"""
        if not text:
            return False
        
        text_lower = text.lower()
        rmrp_indicators = [
            "rmrp.ru",
            "rmrp - –∞—Ä–±–∞—Ç",
            "–∞—Ä–±–∞—Ç",
            "rmrp",
        ]
        
        return any(indicator in text_lower for indicator in rmrp_indicators)
    
    def _extract_rank(self, activity_text: str) -> Optional[str]:
        """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –∑–≤–∞–Ω–∏–µ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
        if not activity_text:
            return None
        
        # –°–ª–æ–≤–∞—Ä—å –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∑–≤–∞–Ω–∏–π
        rank_patterns = {
            # –†—è–¥–æ–≤—ã–µ
            '—Ä—è–¥–æ–≤–æ–π': r'\b(?:—Ä—è–¥–æ–≤–æ–π|—Ä–¥–≤|—Ä\.?)\b',
            '–µ—Ñ—Ä–µ–π—Ç–æ—Ä': r'\b(?:–µ—Ñ—Ä–µ–π—Ç–æ—Ä|–µ—Ñ|–µ—Ñ—Ä\.?)\b',
            
            # –°–µ—Ä–∂–∞–Ω—Ç—ã  
            '–º–ª. —Å–µ—Ä–∂–∞–Ω—Ç': r'\b(?:–º–ª\.?\s*—Å–µ—Ä–∂–∞–Ω—Ç|–º–ª–∞–¥—à–∏–π\s+—Å–µ—Ä–∂–∞–Ω—Ç|–º–ª\.?\s*—Å–µ—Ä\.?|–º—Å)\b',
            '—Å–µ—Ä–∂–∞–Ω—Ç': r'\b(?:—Å–µ—Ä–∂–∞–Ω—Ç|—Å–µ—Ä\.?|—Å\.)\b',
            '—Å—Ç. —Å–µ—Ä–∂–∞–Ω—Ç': r'\b(?:—Å—Ç\.?\s*—Å–µ—Ä–∂–∞–Ω—Ç|—Å—Ç–∞—Ä—à–∏–π\s+—Å–µ—Ä–∂–∞–Ω—Ç|—Å—Ç\.?\s*—Å–µ—Ä\.?|—Å—Å)\b',
            '—Å—Ç–∞—Ä—à–∏–Ω–∞': r'\b(?:—Å—Ç–∞—Ä—à–∏–Ω–∞|—Å—Ç–∞—Ä\.?|—Å—Ç\.)\b',
            
            # –ü—Ä–∞–ø–æ—Ä—â–∏–∫–∏
            '–ø—Ä–∞–ø–æ—Ä—â–∏–∫': r'\b(?:–ø—Ä–∞–ø–æ—Ä—â–∏–∫|–ø—Ä–∞–ø\.?|–ø—Ä\.?)\b',
            '—Å—Ç. –ø—Ä–∞–ø–æ—Ä—â–∏–∫': r'\b(?:—Å—Ç\.?\s*–ø—Ä–∞–ø–æ—Ä—â–∏–∫|—Å—Ç–∞—Ä—à–∏–π\s+–ø—Ä–∞–ø–æ—Ä—â–∏–∫|—Å—Ç\.?\s*–ø—Ä–∞–ø\.?|—Å–ø)\b',
            
            # –õ–µ–π—Ç–µ–Ω–∞–Ω—Ç—ã
            '–º–ª. –ª–µ–π—Ç–µ–Ω–∞–Ω—Ç': r'\b(?:–º–ª\.?\s*–ª–µ–π—Ç–µ–Ω–∞–Ω—Ç|–º–ª–∞–¥—à–∏–π\s+–ª–µ–π—Ç–µ–Ω–∞–Ω—Ç|–º–ª\.?\s*–ª—Ç\.?|–º–ª)\b',
            '–ª–µ–π—Ç–µ–Ω–∞–Ω—Ç': r'\b(?:–ª–µ–π—Ç–µ–Ω–∞–Ω—Ç|–ª—Ç\.?|–ª\.?|–ª–µ–π—Ç\.?)\b',
            '—Å—Ç. –ª–µ–π—Ç–µ–Ω–∞–Ω—Ç': r'\b(?:—Å—Ç\.?\s*–ª–µ–π—Ç–µ–Ω–∞–Ω—Ç|—Å—Ç–∞—Ä—à–∏–π\s+–ª–µ–π—Ç–µ–Ω–∞–Ω—Ç|—Å—Ç\.?\s*–ª—Ç\.?|—Å–ª)\b',
            
            # –í—ã—Å—à–∏–µ –∑–≤–∞–Ω–∏—è
            '–∫–∞–ø–∏—Ç–∞–Ω': r'\b(?:–∫–∞–ø–∏—Ç–∞–Ω|–∫–∞–ø\.?|–∫\.?|–∫–∞–ø–∏—Ç\.?)\b',
            '–º–∞–π–æ—Ä': r'\b(?:–º–∞–π–æ—Ä|–º–∞–π\.?|–º\.?)\b',
            '–ø–æ–¥–ø–æ–ª–∫–æ–≤–Ω–∏–∫': r'\b(?:–ø–æ–¥–ø–æ–ª–∫–æ–≤–Ω–∏–∫|–ø–ø|–ø–ø–∫)\b',
            '–ø–æ–ª–∫–æ–≤–Ω–∏–∫': r'\b(?:–ø–æ–ª–∫–æ–≤–Ω–∏–∫|–ø\.?|–ø–ª–∫)\b',
            '–≥–µ–Ω–µ—Ä–∞–ª': r'\b(?:–≥–µ–Ω–µ—Ä–∞–ª.*?|–≥–µ–Ω\.?\s*.*?|–≥–º|–≥–ª|–≥–ø|–≥–∞)\b',
            '–º–∞—Ä—à–∞–ª': r'\b(?:–º–∞—Ä—à–∞–ª|–º–∞—Ä\.?|–º—à)\b'
        }
        
        text_lower = activity_text.lower()
        
        # –ò—â–µ–º –∑–≤–∞–Ω–∏–µ –≤ —Ç–µ–∫—Å—Ç–µ
        for rank, pattern in rank_patterns.items():
            if re.search(pattern, text_lower, re.IGNORECASE):
                print(f"üîç –ù–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ '{rank}' –ø–æ –ø–∞—Ç—Ç–µ—Ä–Ω—É '{pattern}'")
                return rank
        
        print(f"‚ùå –ó–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Ç–µ–∫—Å—Ç–µ: {activity_text}")
        return None
    
    async def _sync_roles(self, member: discord.Member, rank: str) -> bool:
        """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–º –∑–≤–∞–Ω–∏–µ–º"""
        try:
            config = load_config()
            rank_roles = config.get('rank_roles', {})
            
            # –ò—â–µ–º —Ä–æ–ª—å –¥–ª—è –∑–≤–∞–Ω–∏—è (–±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞)
            target_role_id = None
            for config_rank, role_id in rank_roles.items():
                if config_rank.lower() == rank.lower():
                    target_role_id = role_id
                    break
            
            if not target_role_id:
                print(f"‚ùå –†–æ–ª—å –¥–ª—è –∑–≤–∞–Ω–∏—è '{rank}' –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
                return False
            
            target_role = member.guild.get_role(target_role_id)
            if not target_role:
                print(f"‚ùå –†–æ–ª—å {target_role_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
                return False
            
            print(f"üéØ –¶–µ–ª–µ–≤–∞—è —Ä–æ–ª—å: {target_role.name}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —ç—Ç–∞ —Ä–æ–ª—å
            if target_role in member.roles:
                print(f"‚úÖ {member.display_name} —É–∂–µ –∏–º–µ–µ—Ç —Ä–æ–ª—å {target_role.name}")
                return True
            
            # –£–¥–∞–ª—è–µ–º –¥—Ä—É–≥–∏–µ —Ä–æ–ª–∏ –∑–≤–∞–Ω–∏–π
            roles_to_remove = []
            for role in member.roles:
                if role.id in rank_roles.values() and role.id != target_role_id:
                    roles_to_remove.append(role)
            
            if roles_to_remove:
                print(f"üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ä–æ–ª–∏: {[r.name for r in roles_to_remove]}")
                await member.remove_roles(*roles_to_remove, reason="–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–≤–∞–Ω–∏–π")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Ä–æ–ª—å
            print(f"‚ûï –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª—å: {target_role.name}")
            await member.add_roles(target_role, reason=f"–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∑–≤–∞–Ω–∏–µ: {rank}")
            
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ä–æ–ª–µ–π: {e}")
            return False
    
    async def sync_all(self, guild: discord.Guild) -> tuple[int, int]:
        """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–µ—Ä–≤–µ—Ä–∞"""
        print(f"üöÄ –ù–∞—á–∏–Ω–∞—é –º–∞—Å—Å–æ–≤—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Å–µ—Ä–≤–µ—Ä–∞ {guild.name}")
        
        config = load_config()
        key_role_id = config.get('rank_sync_key_role')
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        if key_role_id:
            key_role = guild.get_role(key_role_id)
            if key_role:
                members_to_sync = [m for m in guild.members if not m.bot and key_role in m.roles]
                print(f"üîë –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–ª—é—á–µ–≤–æ–π —Ä–æ–ª–∏ '{key_role.name}': {len(members_to_sync)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            else:
                members_to_sync = [m for m in guild.members if not m.bot]
                print(f"‚ö†Ô∏è –ö–ª—é—á–µ–≤–∞—è —Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –≤—Å–µ—Ö: {len(members_to_sync)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        else:
            members_to_sync = [m for m in guild.members if not m.bot]
            print(f"‚ÑπÔ∏è –ö–ª—é—á–µ–≤–∞—è —Ä–æ–ª—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –≤—Å–µ—Ö: {len(members_to_sync)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        synced_count = 0
        
        for member in members_to_sync:
            success = await self.sync_user(member, force=False)
            if success:
                synced_count += 1
            
            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è rate limit
            await asyncio.sleep(0.1)
        
        print(f"‚úÖ –ú–∞—Å—Å–æ–≤–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {synced_count}/{len(members_to_sync)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        return synced_count, len(members_to_sync)


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
rank_sync = None

def initialize_rank_sync(bot):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"""
    global rank_sync
    rank_sync = RankSync(bot)
    print("‚úÖ –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∑–≤–∞–Ω–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    return rank_sync
